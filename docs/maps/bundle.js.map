{"version":3,"sources":["../../node_modules/browserify/node_modules/browser-pack/_prelude.js","src/index.js","node_modules/browserify/node_modules/buffer/index.js","node_modules/browserify/node_modules/buffer/node_modules/base64-js/lib/b64.js","node_modules/browserify/node_modules/buffer/node_modules/ieee754/index.js","node_modules/browserify/node_modules/buffer/node_modules/is-array/index.js","node_modules/browserify/node_modules/process/browser.js","node_modules/react-router/modules/actions/LocationActions.js","node_modules/react-router/modules/behaviors/ImitateBrowserBehavior.js","node_modules/react-router/modules/components/DefaultRoute.js","node_modules/react-router/modules/components/Link.js","node_modules/react-router/modules/components/NotFoundRoute.js","node_modules/react-router/modules/components/Redirect.js","node_modules/react-router/modules/components/Route.js","node_modules/react-router/modules/components/RouteHandler.js","node_modules/react-router/modules/index.js","node_modules/react-router/modules/locations/HashLocation.js","node_modules/react-router/modules/locations/HistoryLocation.js","node_modules/react-router/modules/locations/RefreshLocation.js","node_modules/react-router/modules/mixins/FakeNode.js","node_modules/react-router/modules/mixins/Navigation.js","node_modules/react-router/modules/mixins/NavigationContext.js","node_modules/react-router/modules/mixins/Scrolling.js","node_modules/react-router/modules/mixins/State.js","node_modules/react-router/modules/mixins/StateContext.js","node_modules/react-router/modules/utils/Path.js","node_modules/react-router/modules/utils/Promise.js","node_modules/react-router/modules/utils/PropTypes.js","node_modules/react-router/modules/utils/Redirect.js","node_modules/react-router/modules/utils/Transition.js","node_modules/react-router/modules/utils/createRouter.js","node_modules/react-router/modules/utils/createRoutesFromChildren.js","node_modules/react-router/modules/utils/getWindowScrollPosition.js","node_modules/react-router/modules/utils/reversedArray.js","node_modules/react-router/modules/utils/runRouter.js","node_modules/react-router/modules/utils/supportsHistory.js","node_modules/react-router/node_modules/qs/index.js","node_modules/react-router/node_modules/qs/lib/index.js","node_modules/react-router/node_modules/qs/lib/parse.js","node_modules/react-router/node_modules/qs/lib/stringify.js","node_modules/react-router/node_modules/qs/lib/utils.js","node_modules/react-router/node_modules/when/lib/Promise.js","node_modules/react-router/node_modules/when/lib/Queue.js","node_modules/react-router/node_modules/when/lib/Scheduler.js","node_modules/react-router/node_modules/when/lib/async.js","node_modules/react-router/node_modules/when/lib/makePromise.js","node_modules/react/lib/ExecutionEnvironment.js","node_modules/react/lib/Object.assign.js","node_modules/react/lib/cx.js","node_modules/react/lib/emptyFunction.js","node_modules/react/lib/invariant.js","node_modules/react/lib/warning.js","resources/immutable.d.json","src/TypeKind.js","../../resources/immutable-global.js","../../resources/react-global.js"],"names":[],"mappingszNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3hxHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChzGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrlLA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzxrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3CA;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;;ACHA;AACA;AACA;AACA","file":"bundle.js","sourceRoot":"/source/","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","var React = require('react');\nvar Router = require('react-router');\nvar $__0=       Router,Route=$__0.Route,DefaultRoute=$__0.DefaultRoute,RouteHandler=$__0.RouteHandler,Link=$__0.Link;\nvar $__1=    require('immutable'),Seq=$__1.Seq;\nvar TypeKind = require('../../../src/TypeKind');\nvar defs = require('../../../resources/immutable.d.json');\n\n\nvar Overview = React.createClass({displayName: 'Overview',\n  render: function() {\n    var d = defs.module;\n\n    return (\n      React.createElement(\"div\", null, \n        React.createElement(\"h1\", null, \"Immutable\"), \n        React.createElement(\"section\", null, \n          React.createElement(\"pre\", null, \n            d.doc.join()\n          )\n        ), \n        React.createElement(\"h2\", null, \"Functions\"), \n        React.createElement(\"ul\", null, \n          Seq(d.types).filter(function(t)  {return !t.interface && !t.module;}).map(function(t, name) \n            {return React.createElement(\"li\", {key: name}, \n              React.createElement(FunctionDef, {name: name, def: t.call})\n            );}\n          ).toArray()\n        ), \n        React.createElement(\"h2\", null, \"Types\"), \n        React.createElement(\"ul\", null, \n          Seq(d.types).filter(function(t)  {return t.interface || t.module;}).map(function(t, name) \n            {return React.createElement(\"li\", {key: name}, \n              React.createElement(Link, {to: '/' + name}, name)\n            );}\n          ).toArray()\n        )\n      )\n    );\n  }\n});\n\nvar Type = React.createClass({displayName: 'Type',\n  mixins: [ Router.State ],\n\n  render: function() {\n    var typeName = this.getParams().typeName;\n    // var methodName = this.getParams().methodName;\n    var d = defs.module;\n    var type = d.types[typeName];\n    if (!type) {\n      return React.createElement(NotFound, null);\n    }\n\n    console.log(type);\n\n    return (\n      React.createElement(\"div\", null, \n        React.createElement(\"h1\", null, typeName), \n        type.doc && React.createElement(\"section\", null, \n          React.createElement(\"pre\", null, \n            type.doc.join()\n          )\n        ), \n        (type.call || type.module) && [\n          React.createElement(\"h2\", null, \"Functions\"),\n          React.createElement(\"ul\", null, \n            type.call && React.createElement(\"li\", null, \n              React.createElement(FunctionDef, {name: typeName, def: type.call})\n            ), \n            type.module && Seq(type.module.types).map(function(t, name) \n              {return React.createElement(\"li\", {key: name}, \n                React.createElement(FunctionDef, {name: name, def: t.call, module: typeName})\n              );}\n            ).toArray()\n          )\n        ], \n        type.interface && React.createElement(\"section\", null, \n          React.createElement(\"h3\", null, \n            typeName, \n            type.interface.typeParams &&\n              ['<', Seq(type.interface.typeParams).map(function(t, k)  {return React.createElement(\"span\", {key: k}, t);}).interpose(', ').toArray(), '>'], \n            \n            type.interface.extends &&\n              [' extends ', Seq(type.interface.extends).map(function(e) \n                {return React.createElement(TypeDef, {type: e});}\n              ).interpose(', ').toArray()]\n            \n          ), \n          type.interface.groups && type.interface.groups.map(function(g)  {return [\n            g.title && React.createElement(\"h4\", null, g.title),\n            React.createElement(\"ul\", null, \n              Seq(g.properties).map(function(p, propName) \n                {return React.createElement(\"li\", {key: propName}, propName);}\n              ).toArray(), \n              Seq(g.methods).map(function(m, methodName) \n                {return React.createElement(\"li\", {key: methodName}, methodName + '()');}\n              ).toArray()\n            )\n          ];})\n        )\n      )\n    );\n  }\n});\n\nvar TypeDef = React.createClass({displayName: 'TypeDef',\n  render: function() {\n    var type = this.props.type;\n    switch (type.k) {\n      case TypeKind.Any: return React.createElement(\"span\", null, \"any\");\n      case TypeKind.Boolean: return React.createElement(\"span\", null, \"boolean\");\n      case TypeKind.Number: return React.createElement(\"span\", null, \"number\");\n      case TypeKind.String: return React.createElement(\"span\", null, \"string\");\n      case TypeKind.Object: return React.createElement(\"span\", null, 'TODO')\n      // case TypeKind.Array:\n      case TypeKind.Function: return React.createElement(\"span\", null, \n        ['(', functionParams(type.params), ') => ', React.createElement(TypeDef, {type: type.type})]\n      );\n      case TypeKind.Param: return React.createElement(\"span\", null, type.param);\n      case TypeKind.Type: return React.createElement(\"span\", null, \n        type.name, \n        type.args && ['<', Seq(type.args).map(function(a) \n          {return React.createElement(TypeDef, {type: a});}\n        ).interpose(', ').toArray(), '>']\n      );\n    }\n    throw new Error('Unknown kind ' + type.k);\n  }\n});\n\nfunction functionParams(params) {\n  return Seq(params).map(function(t)  {return [\n    t.varArgs ? '...' : null,\n    React.createElement(\"span\", null, t.name),\n    t.optional ? '?: ' : ': ',\n    React.createElement(TypeDef, {type: t.type})\n  ];}).interpose(', ').toArray();\n}\n\nvar FunctionDef = React.createClass({displayName: 'FunctionDef',\n  getInitialState: function() {\n    return { detail: false };\n  },\n\n  toggleDetail: function() {\n    this.setState({ detail: !this.state.detail });\n  },\n\n  render: function() {\n    var module = this.props.module;\n    var name = this.props.name;\n    var def = this.props.def;\n    console.log(name, def);\n\n    return (\n      React.createElement(\"div\", null, \n        React.createElement(\"div\", {onClick: this.toggleDetail}, \n          (module ? module + '.' + name : name) + '()'\n        ), \n        this.state.detail && React.createElement(\"div\", null, \n          def.doc && React.createElement(\"pre\", null, \n            def.doc.join('')\n          ), \n          def.impl.map(function(impl) \n            {return React.createElement(\"div\", null, \n              module ? module + '.' + name : name, \n              impl.typeParams &&\n                ['<', Seq(impl.typeParams).map(function(t) \n                  {return React.createElement(\"span\", null, t);}\n                ).interpose(', ').toArray(), '>'], \n              \n              ['(', functionParams(impl.params), ')']\n            );}\n          )\n        )\n      )\n    );\n  }\n});\n\n\n\nvar Docs = React.createClass({displayName: 'Docs',\n  render: function () {\n    return React.createElement(\"div\", null, 'Docs:', React.createElement(RouteHandler, null));\n  }\n});\n\nvar NotFound = React.createClass({displayName: 'NotFound',\n  render: function() {\n    return React.createElement(\"div\", null, 'Not found');\n  }\n});\n\n\nvar routes =\n  React.createElement(Route, {handler: Docs, path: \"/\"}, \n    React.createElement(DefaultRoute, {handler: Overview}), \n    React.createElement(Route, {name: \"type\", path: \"/:typeName\", handler: Type}), \n    React.createElement(Route, {name: \"method\", path: \"/:typeName/:methodName\", handler: Type})\n  );\n\n\nvar App = React.createClass({displayName: 'App',\n  componentWillMount: function() {\n    Router.run(routes, function(Handler)  {\n      this.setState({handler: Handler});\n    }.bind(this));\n  },\n  render: function () {\n    var Handler = this.state.handler;\n    return React.createElement(Handler, null);\n  }\n});\n\n\nmodule.exports = App;\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('is-array')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = Buffer\nexports.INSPECT_MAX_BYTES = 50\nBuffer.poolSize = 8192 // not used by this implementation\n\nvar kMaxLength = 0x3fffffff\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Note:\n *\n * - Implementation must support adding new properties to `Uint8Array` instances.\n *   Firefox 4-29 lacked support, fixed in Firefox 30+.\n *   See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *  - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *  - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *    incorrect length in some situations.\n *\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they will\n * get the Object implementation, which is slower but will work correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = (function () {\n  try {\n    var buf = new ArrayBuffer(0)\n    var arr = new Uint8Array(buf)\n    arr.foo = function () { return 42 }\n    return 42 === arr.foo() && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        new Uint8Array(1).subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n})()\n\n/**\n * Class: Buffer\n * =============\n *\n * The Buffer constructor returns instances of `Uint8Array` that are augmented\n * with function properties for all the node `Buffer` API functions. We use\n * `Uint8Array` so that square bracket notation works as expected -- it returns\n * a single octet.\n *\n * By augmenting the instances, we can avoid modifying the `Uint8Array`\n * prototype.\n */\nfunction Buffer (subject, encoding, noZero) {\n  if (!(this instanceof Buffer))\n    return new Buffer(subject, encoding, noZero)\n\n  var type = typeof subject\n\n  // Find the length\n  var length\n  if (type === 'number')\n    length = subject > 0 ? subject >>> 0 : 0\n  else if (type === 'string') {\n    if (encoding === 'base64')\n      subject = base64clean(subject)\n    length = Buffer.byteLength(subject, encoding)\n  } else if (type === 'object' && subject !== null) { // assume object is array-like\n    if (subject.type === 'Buffer' && isArray(subject.data))\n      subject = subject.data\n    length = +subject.length > 0 ? Math.floor(+subject.length) : 0\n  } else\n    throw new TypeError('must start with number, buffer, array or string')\n\n  if (this.length > kMaxLength)\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n      'size: 0x' + kMaxLength.toString(16) + ' bytes')\n\n  var buf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Preferred: Return an augmented `Uint8Array` instance for best performance\n    buf = Buffer._augment(new Uint8Array(length))\n  } else {\n    // Fallback: Return THIS instance of Buffer (created by `new`)\n    buf = this\n    buf.length = length\n    buf._isBuffer = true\n  }\n\n  var i\n  if (Buffer.TYPED_ARRAY_SUPPORT && typeof subject.byteLength === 'number') {\n    // Speed optimization -- use set if we're copying from a typed array\n    buf._set(subject)\n  } else if (isArrayish(subject)) {\n    // Treat array-ish objects as a byte array\n    if (Buffer.isBuffer(subject)) {\n      for (i = 0; i < length; i++)\n        buf[i] = subject.readUInt8(i)\n    } else {\n      for (i = 0; i < length; i++)\n        buf[i] = ((subject[i] % 256) + 256) % 256\n    }\n  } else if (type === 'string') {\n    buf.write(subject, 0, encoding)\n  } else if (type === 'number' && !Buffer.TYPED_ARRAY_SUPPORT && !noZero) {\n    for (i = 0; i < length; i++) {\n      buf[i] = 0\n    }\n  }\n\n  return buf\n}\n\nBuffer.isBuffer = function (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b))\n    throw new TypeError('Arguments must be Buffers')\n\n  var x = a.length\n  var y = b.length\n  for (var i = 0, len = Math.min(x, y); i < len && a[i] === b[i]; i++) {}\n  if (i !== len) {\n    x = a[i]\n    y = b[i]\n  }\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'binary':\n    case 'base64':\n    case 'raw':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function (list, totalLength) {\n  if (!isArray(list)) throw new TypeError('Usage: Buffer.concat(list[, length])')\n\n  if (list.length === 0) {\n    return new Buffer(0)\n  } else if (list.length === 1) {\n    return list[0]\n  }\n\n  var i\n  if (totalLength === undefined) {\n    totalLength = 0\n    for (i = 0; i < list.length; i++) {\n      totalLength += list[i].length\n    }\n  }\n\n  var buf = new Buffer(totalLength)\n  var pos = 0\n  for (i = 0; i < list.length; i++) {\n    var item = list[i]\n    item.copy(buf, pos)\n    pos += item.length\n  }\n  return buf\n}\n\nBuffer.byteLength = function (str, encoding) {\n  var ret\n  str = str + ''\n  switch (encoding || 'utf8') {\n    case 'ascii':\n    case 'binary':\n    case 'raw':\n      ret = str.length\n      break\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      ret = str.length * 2\n      break\n    case 'hex':\n      ret = str.length >>> 1\n      break\n    case 'utf8':\n    case 'utf-8':\n      ret = utf8ToBytes(str).length\n      break\n    case 'base64':\n      ret = base64ToBytes(str).length\n      break\n    default:\n      ret = str.length\n  }\n  return ret\n}\n\n// pre-set for values that may exist in the future\nBuffer.prototype.length = undefined\nBuffer.prototype.parent = undefined\n\n// toString(encoding, start=0, end=buffer.length)\nBuffer.prototype.toString = function (encoding, start, end) {\n  var loweredCase = false\n\n  start = start >>> 0\n  end = end === undefined || end === Infinity ? this.length : end >>> 0\n\n  if (!encoding) encoding = 'utf8'\n  if (start < 0) start = 0\n  if (end > this.length) end = this.length\n  if (end <= start) return ''\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'binary':\n        return binarySlice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase)\n          throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.equals = function (b) {\n  if(!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max)\n      str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  return Buffer.compare(this, b)\n}\n\n// `get` will be removed in Node 0.13+\nBuffer.prototype.get = function (offset) {\n  console.log('.get() is deprecated. Access using array indexes instead.')\n  return this.readUInt8(offset)\n}\n\n// `set` will be removed in Node 0.13+\nBuffer.prototype.set = function (v, offset) {\n  console.log('.set() is deprecated. Access using array indexes instead.')\n  return this.writeUInt8(v, offset)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new Error('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; i++) {\n    var byte = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(byte)) throw new Error('Invalid hex string')\n    buf[offset + i] = byte\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  var charsWritten = blitBuffer(utf8ToBytes(string), buf, offset, length)\n  return charsWritten\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  var charsWritten = blitBuffer(asciiToBytes(string), buf, offset, length)\n  return charsWritten\n}\n\nfunction binaryWrite (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  var charsWritten = blitBuffer(base64ToBytes(string), buf, offset, length)\n  return charsWritten\n}\n\nfunction utf16leWrite (buf, string, offset, length) {\n  var charsWritten = blitBuffer(utf16leToBytes(string), buf, offset, length)\n  return charsWritten\n}\n\nBuffer.prototype.write = function (string, offset, length, encoding) {\n  // Support both (string, offset, length, encoding)\n  // and the legacy (string, encoding, offset, length)\n  if (isFinite(offset)) {\n    if (!isFinite(length)) {\n      encoding = length\n      length = undefined\n    }\n  } else {  // legacy\n    var swap = encoding\n    encoding = offset\n    offset = length\n    length = swap\n  }\n\n  offset = Number(offset) || 0\n  var remaining = this.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n  encoding = String(encoding || 'utf8').toLowerCase()\n\n  var ret\n  switch (encoding) {\n    case 'hex':\n      ret = hexWrite(this, string, offset, length)\n      break\n    case 'utf8':\n    case 'utf-8':\n      ret = utf8Write(this, string, offset, length)\n      break\n    case 'ascii':\n      ret = asciiWrite(this, string, offset, length)\n      break\n    case 'binary':\n      ret = binaryWrite(this, string, offset, length)\n      break\n    case 'base64':\n      ret = base64Write(this, string, offset, length)\n      break\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      ret = utf16leWrite(this, string, offset, length)\n      break\n    default:\n      throw new TypeError('Unknown encoding: ' + encoding)\n  }\n  return ret\n}\n\nBuffer.prototype.toJSON = function () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  var res = ''\n  var tmp = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; i++) {\n    if (buf[i] <= 0x7F) {\n      res += decodeUtf8Char(tmp) + String.fromCharCode(buf[i])\n      tmp = ''\n    } else {\n      tmp += '%' + buf[i].toString(16)\n    }\n  }\n\n  return res + decodeUtf8Char(tmp)\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; i++) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction binarySlice (buf, start, end) {\n  return asciiSlice(buf, start, end)\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; i++) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len;\n    if (start < 0)\n      start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0)\n      end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start)\n    end = start\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    return Buffer._augment(this.subarray(start, end))\n  } else {\n    var sliceLen = end - start\n    var newBuf = new Buffer(sliceLen, undefined, true)\n    for (var i = 0; i < sliceLen; i++) {\n      newBuf[i] = this[i + start]\n    }\n    return newBuf\n  }\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0)\n    throw new RangeError('offset is not uint')\n  if (offset + ext > length)\n    throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUInt8 = function (offset, noAssert) {\n  if (!noAssert)\n    checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function (offset, noAssert) {\n  if (!noAssert)\n    checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function (offset, noAssert) {\n  if (!noAssert)\n    checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function (offset, noAssert) {\n  if (!noAssert)\n    checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function (offset, noAssert) {\n  if (!noAssert)\n    checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n      ((this[offset + 1] << 16) |\n      (this[offset + 2] << 8) |\n      this[offset + 3])\n}\n\nBuffer.prototype.readInt8 = function (offset, noAssert) {\n  if (!noAssert)\n    checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80))\n    return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function (offset, noAssert) {\n  if (!noAssert)\n    checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function (offset, noAssert) {\n  if (!noAssert)\n    checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function (offset, noAssert) {\n  if (!noAssert)\n    checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16) |\n      (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function (offset, noAssert) {\n  if (!noAssert)\n    checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n      (this[offset + 1] << 16) |\n      (this[offset + 2] << 8) |\n      (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function (offset, noAssert) {\n  if (!noAssert)\n    checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function (offset, noAssert) {\n  if (!noAssert)\n    checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function (offset, noAssert) {\n  if (!noAssert)\n    checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function (offset, noAssert) {\n  if (!noAssert)\n    checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('buffer must be a Buffer instance')\n  if (value > max || value < min) throw new TypeError('value is out of bounds')\n  if (offset + ext > buf.length) throw new TypeError('index out of range')\n}\n\nBuffer.prototype.writeUInt8 = function (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert)\n    checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = value\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; i++) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert)\n    checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value\n    this[offset + 1] = (value >>> 8)\n  } else objectWriteUInt16(this, value, offset, true)\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert)\n    checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = value\n  } else objectWriteUInt16(this, value, offset, false)\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; i++) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert)\n    checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = value\n  } else objectWriteUInt32(this, value, offset, true)\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert)\n    checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = value\n  } else objectWriteUInt32(this, value, offset, false)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt8 = function (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert)\n    checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = value\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert)\n    checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value\n    this[offset + 1] = (value >>> 8)\n  } else objectWriteUInt16(this, value, offset, true)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert)\n    checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = value\n  } else objectWriteUInt16(this, value, offset, false)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert)\n    checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else objectWriteUInt32(this, value, offset, true)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert)\n    checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = value\n  } else objectWriteUInt32(this, value, offset, false)\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (value > max || value < min) throw new TypeError('value is out of bounds')\n  if (offset + ext > buf.length) throw new TypeError('index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert)\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert)\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function (target, target_start, start, end) {\n  var source = this\n\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (!target_start) target_start = 0\n\n  // Copy 0 bytes; we're done\n  if (end === start) return\n  if (target.length === 0 || source.length === 0) return\n\n  // Fatal error conditions\n  if (end < start) throw new TypeError('sourceEnd < sourceStart')\n  if (target_start < 0 || target_start >= target.length)\n    throw new TypeError('targetStart out of bounds')\n  if (start < 0 || start >= source.length) throw new TypeError('sourceStart out of bounds')\n  if (end < 0 || end > source.length) throw new TypeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length)\n    end = this.length\n  if (target.length - target_start < end - start)\n    end = target.length - target_start + start\n\n  var len = end - start\n\n  if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < len; i++) {\n      target[i + target_start] = this[i + start]\n    }\n  } else {\n    target._set(this.subarray(start, start + len), target_start)\n  }\n}\n\n// fill(value, start=0, end=buffer.length)\nBuffer.prototype.fill = function (value, start, end) {\n  if (!value) value = 0\n  if (!start) start = 0\n  if (!end) end = this.length\n\n  if (end < start) throw new TypeError('end < start')\n\n  // Fill 0 bytes; we're done\n  if (end === start) return\n  if (this.length === 0) return\n\n  if (start < 0 || start >= this.length) throw new TypeError('start out of bounds')\n  if (end < 0 || end > this.length) throw new TypeError('end out of bounds')\n\n  var i\n  if (typeof value === 'number') {\n    for (i = start; i < end; i++) {\n      this[i] = value\n    }\n  } else {\n    var bytes = utf8ToBytes(value.toString())\n    var len = bytes.length\n    for (i = start; i < end; i++) {\n      this[i] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n/**\n * Creates a new `ArrayBuffer` with the *copied* memory of the buffer instance.\n * Added in Node 0.12. Only available in browsers that support ArrayBuffer.\n */\nBuffer.prototype.toArrayBuffer = function () {\n  if (typeof Uint8Array !== 'undefined') {\n    if (Buffer.TYPED_ARRAY_SUPPORT) {\n      return (new Buffer(this)).buffer\n    } else {\n      var buf = new Uint8Array(this.length)\n      for (var i = 0, len = buf.length; i < len; i += 1) {\n        buf[i] = this[i]\n      }\n      return buf.buffer\n    }\n  } else {\n    throw new TypeError('Buffer.toArrayBuffer not supported in this browser')\n  }\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar BP = Buffer.prototype\n\n/**\n * Augment a Uint8Array *instance* (not the Uint8Array class!) with Buffer methods\n */\nBuffer._augment = function (arr) {\n  arr.constructor = Buffer\n  arr._isBuffer = true\n\n  // save reference to original Uint8Array get/set methods before overwriting\n  arr._get = arr.get\n  arr._set = arr.set\n\n  // deprecated, will be removed in node 0.13+\n  arr.get = BP.get\n  arr.set = BP.set\n\n  arr.write = BP.write\n  arr.toString = BP.toString\n  arr.toLocaleString = BP.toString\n  arr.toJSON = BP.toJSON\n  arr.equals = BP.equals\n  arr.compare = BP.compare\n  arr.copy = BP.copy\n  arr.slice = BP.slice\n  arr.readUInt8 = BP.readUInt8\n  arr.readUInt16LE = BP.readUInt16LE\n  arr.readUInt16BE = BP.readUInt16BE\n  arr.readUInt32LE = BP.readUInt32LE\n  arr.readUInt32BE = BP.readUInt32BE\n  arr.readInt8 = BP.readInt8\n  arr.readInt16LE = BP.readInt16LE\n  arr.readInt16BE = BP.readInt16BE\n  arr.readInt32LE = BP.readInt32LE\n  arr.readInt32BE = BP.readInt32BE\n  arr.readFloatLE = BP.readFloatLE\n  arr.readFloatBE = BP.readFloatBE\n  arr.readDoubleLE = BP.readDoubleLE\n  arr.readDoubleBE = BP.readDoubleBE\n  arr.writeUInt8 = BP.writeUInt8\n  arr.writeUInt16LE = BP.writeUInt16LE\n  arr.writeUInt16BE = BP.writeUInt16BE\n  arr.writeUInt32LE = BP.writeUInt32LE\n  arr.writeUInt32BE = BP.writeUInt32BE\n  arr.writeInt8 = BP.writeInt8\n  arr.writeInt16LE = BP.writeInt16LE\n  arr.writeInt16BE = BP.writeInt16BE\n  arr.writeInt32LE = BP.writeInt32LE\n  arr.writeInt32BE = BP.writeInt32BE\n  arr.writeFloatLE = BP.writeFloatLE\n  arr.writeFloatBE = BP.writeFloatBE\n  arr.writeDoubleLE = BP.writeDoubleLE\n  arr.writeDoubleBE = BP.writeDoubleBE\n  arr.fill = BP.fill\n  arr.inspect = BP.inspect\n  arr.toArrayBuffer = BP.toArrayBuffer\n\n  return arr\n}\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-z]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction isArrayish (subject) {\n  return isArray(subject) || Buffer.isBuffer(subject) ||\n      subject && typeof subject === 'object' &&\n      typeof subject.length === 'number'\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; i++) {\n    var b = str.charCodeAt(i)\n    if (b <= 0x7F) {\n      byteArray.push(b)\n    } else {\n      var start = i\n      if (b >= 0xD800 && b <= 0xDFFF) i++\n      var h = encodeURIComponent(str.slice(start, i+1)).substr(1).split('%')\n      for (var j = 0; j < h.length; j++) {\n        byteArray.push(parseInt(h[j], 16))\n      }\n    }\n  }\n  return byteArray\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; i++) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; i++) {\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(str)\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; i++) {\n    if ((i + offset >= dst.length) || (i >= src.length))\n      break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction decodeUtf8Char (str) {\n  try {\n    return decodeURIComponent(str)\n  } catch (err) {\n    return String.fromCharCode(0xFFFD) // UTF 8 invalid char\n  }\n}\n","var lookup = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\n;(function (exports) {\n\t'use strict';\n\n  var Arr = (typeof Uint8Array !== 'undefined')\n    ? Uint8Array\n    : Array\n\n\tvar PLUS   = '+'.charCodeAt(0)\n\tvar SLASH  = '/'.charCodeAt(0)\n\tvar NUMBER = '0'.charCodeAt(0)\n\tvar LOWER  = 'a'.charCodeAt(0)\n\tvar UPPER  = 'A'.charCodeAt(0)\n\n\tfunction decode (elt) {\n\t\tvar code = elt.charCodeAt(0)\n\t\tif (code === PLUS)\n\t\t\treturn 62 // '+'\n\t\tif (code === SLASH)\n\t\t\treturn 63 // '/'\n\t\tif (code < NUMBER)\n\t\t\treturn -1 //no match\n\t\tif (code < NUMBER + 10)\n\t\t\treturn code - NUMBER + 26 + 26\n\t\tif (code < UPPER + 26)\n\t\t\treturn code - UPPER\n\t\tif (code < LOWER + 26)\n\t\t\treturn code - LOWER + 26\n\t}\n\n\tfunction b64ToByteArray (b64) {\n\t\tvar i, j, l, tmp, placeHolders, arr\n\n\t\tif (b64.length % 4 > 0) {\n\t\t\tthrow new Error('Invalid string. Length must be a multiple of 4')\n\t\t}\n\n\t\t// the number of equal signs (place holders)\n\t\t// if there are two placeholders, than the two characters before it\n\t\t// represent one byte\n\t\t// if there is only one, then the three characters before it represent 2 bytes\n\t\t// this is just a cheap hack to not do indexOf twice\n\t\tvar len = b64.length\n\t\tplaceHolders = '=' === b64.charAt(len - 2) ? 2 : '=' === b64.charAt(len - 1) ? 1 : 0\n\n\t\t// base64 is 4/3 + up to two characters of the original data\n\t\tarr = new Arr(b64.length * 3 / 4 - placeHolders)\n\n\t\t// if there are placeholders, only get up to the last complete 4 chars\n\t\tl = placeHolders > 0 ? b64.length - 4 : b64.length\n\n\t\tvar L = 0\n\n\t\tfunction push (v) {\n\t\t\tarr[L++] = v\n\t\t}\n\n\t\tfor (i = 0, j = 0; i < l; i += 4, j += 3) {\n\t\t\ttmp = (decode(b64.charAt(i)) << 18) | (decode(b64.charAt(i + 1)) << 12) | (decode(b64.charAt(i + 2)) << 6) | decode(b64.charAt(i + 3))\n\t\t\tpush((tmp & 0xFF0000) >> 16)\n\t\t\tpush((tmp & 0xFF00) >> 8)\n\t\t\tpush(tmp & 0xFF)\n\t\t}\n\n\t\tif (placeHolders === 2) {\n\t\t\ttmp = (decode(b64.charAt(i)) << 2) | (decode(b64.charAt(i + 1)) >> 4)\n\t\t\tpush(tmp & 0xFF)\n\t\t} else if (placeHolders === 1) {\n\t\t\ttmp = (decode(b64.charAt(i)) << 10) | (decode(b64.charAt(i + 1)) << 4) | (decode(b64.charAt(i + 2)) >> 2)\n\t\t\tpush((tmp >> 8) & 0xFF)\n\t\t\tpush(tmp & 0xFF)\n\t\t}\n\n\t\treturn arr\n\t}\n\n\tfunction uint8ToBase64 (uint8) {\n\t\tvar i,\n\t\t\textraBytes = uint8.length % 3, // if we have 1 byte left, pad 2 bytes\n\t\t\toutput = \"\",\n\t\t\ttemp, length\n\n\t\tfunction encode (num) {\n\t\t\treturn lookup.charAt(num)\n\t\t}\n\n\t\tfunction tripletToBase64 (num) {\n\t\t\treturn encode(num >> 18 & 0x3F) + encode(num >> 12 & 0x3F) + encode(num >> 6 & 0x3F) + encode(num & 0x3F)\n\t\t}\n\n\t\t// go through the array every three bytes, we'll deal with trailing stuff later\n\t\tfor (i = 0, length = uint8.length - extraBytes; i < length; i += 3) {\n\t\t\ttemp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n\t\t\toutput += tripletToBase64(temp)\n\t\t}\n\n\t\t// pad the end with zeros, but make sure to not forget the extra bytes\n\t\tswitch (extraBytes) {\n\t\t\tcase 1:\n\t\t\t\ttemp = uint8[uint8.length - 1]\n\t\t\t\toutput += encode(temp >> 2)\n\t\t\t\toutput += encode((temp << 4) & 0x3F)\n\t\t\t\toutput += '=='\n\t\t\t\tbreak\n\t\t\tcase 2:\n\t\t\t\ttemp = (uint8[uint8.length - 2] << 8) + (uint8[uint8.length - 1])\n\t\t\t\toutput += encode(temp >> 10)\n\t\t\t\toutput += encode((temp >> 4) & 0x3F)\n\t\t\t\toutput += encode((temp << 2) & 0x3F)\n\t\t\t\toutput += '='\n\t\t\t\tbreak\n\t\t}\n\n\t\treturn output\n\t}\n\n\texports.toByteArray = b64ToByteArray\n\texports.fromByteArray = uint8ToBase64\n}(typeof exports === 'undefined' ? (this.base64js = {}) : exports))\n","exports.read = function(buffer, offset, isLE, mLen, nBytes) {\n  var e, m,\n      eLen = nBytes * 8 - mLen - 1,\n      eMax = (1 << eLen) - 1,\n      eBias = eMax >> 1,\n      nBits = -7,\n      i = isLE ? (nBytes - 1) : 0,\n      d = isLE ? -1 : 1,\n      s = buffer[offset + i];\n\n  i += d;\n\n  e = s & ((1 << (-nBits)) - 1);\n  s >>= (-nBits);\n  nBits += eLen;\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8);\n\n  m = e & ((1 << (-nBits)) - 1);\n  e >>= (-nBits);\n  nBits += mLen;\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8);\n\n  if (e === 0) {\n    e = 1 - eBias;\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity);\n  } else {\n    m = m + Math.pow(2, mLen);\n    e = e - eBias;\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen);\n};\n\nexports.write = function(buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c,\n      eLen = nBytes * 8 - mLen - 1,\n      eMax = (1 << eLen) - 1,\n      eBias = eMax >> 1,\n      rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0),\n      i = isLE ? 0 : (nBytes - 1),\n      d = isLE ? 1 : -1,\n      s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0;\n\n  value = Math.abs(value);\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0;\n    e = eMax;\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2);\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--;\n      c *= 2;\n    }\n    if (e + eBias >= 1) {\n      value += rt / c;\n    } else {\n      value += rt * Math.pow(2, 1 - eBias);\n    }\n    if (value * c >= 2) {\n      e++;\n      c /= 2;\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0;\n      e = eMax;\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen);\n      e = e + eBias;\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);\n      e = 0;\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8);\n\n  e = (e << mLen) | m;\n  eLen += mLen;\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8);\n\n  buffer[offset + i - d] |= s * 128;\n};\n","\n/**\n * isArray\n */\n\nvar isArray = Array.isArray;\n\n/**\n * toString\n */\n\nvar str = Object.prototype.toString;\n\n/**\n * Whether or not the given `val`\n * is an array.\n *\n * example:\n *\n *        isArray([]);\n *        // > true\n *        isArray(arguments);\n *        // > false\n *        isArray('');\n *        // > false\n *\n * @param {mixed} val\n * @return {bool}\n */\n\nmodule.exports = isArray || function (val) {\n  return !! val && '[object Array]' == str.call(val);\n};\n","// shim for using process in browser\n\nvar process = module.exports = {};\n\nprocess.nextTick = (function () {\n    var canSetImmediate = typeof window !== 'undefined'\n    && window.setImmediate;\n    var canPost = typeof window !== 'undefined'\n    && window.postMessage && window.addEventListener\n    ;\n\n    if (canSetImmediate) {\n        return function (f) { return window.setImmediate(f) };\n    }\n\n    if (canPost) {\n        var queue = [];\n        window.addEventListener('message', function (ev) {\n            var source = ev.source;\n            if ((source === window || source === null) && ev.data === 'process-tick') {\n                ev.stopPropagation();\n                if (queue.length > 0) {\n                    var fn = queue.shift();\n                    fn();\n                }\n            }\n        }, true);\n\n        return function nextTick(fn) {\n            queue.push(fn);\n            window.postMessage('process-tick', '*');\n        };\n    }\n\n    return function nextTick(fn) {\n        setTimeout(fn, 0);\n    };\n})();\n\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n}\n\n// TODO(shtylman)\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\n","/**\n * Actions that modify the URL.\n */\nvar LocationActions = {\n\n  /**\n   * Indicates a new location is being pushed to the history stack.\n   */\n  PUSH: 'push',\n\n  /**\n   * Indicates the current location should be replaced.\n   */\n  REPLACE: 'replace',\n\n  /**\n   * Indicates the most recent entry should be removed from the history stack.\n   */\n  POP: 'pop'\n\n};\n\nmodule.exports = LocationActions;\n","var LocationActions = require('../actions/LocationActions');\n\n/**\n * A scroll behavior that attempts to imitate the default behavior\n * of modern browsers.\n */\nvar ImitateBrowserBehavior = {\n\n  updateScrollPosition: function (position, actionType) {\n    switch (actionType) {\n      case LocationActions.PUSH:\n      case LocationActions.REPLACE:\n        window.scrollTo(0, 0);\n        break;\n      case LocationActions.POP:\n        if (position) {\n          window.scrollTo(position.x, position.y);\n        } else {\n          window.scrollTo(0, 0);\n        }\n        break;\n    }\n  }\n\n};\n\nmodule.exports = ImitateBrowserBehavior;\n","var React = require('react');\nvar FakeNode = require('../mixins/FakeNode');\nvar PropTypes = require('../utils/PropTypes');\n\n/**\n * A <DefaultRoute> component is a special kind of <Route> that\n * renders when its parent matches but none of its siblings do.\n * Only one such route may be used at any given level in the\n * route hierarchy.\n */\nvar DefaultRoute = React.createClass({\n\n  displayName: 'DefaultRoute',\n\n  mixins: [ FakeNode ],\n\n  propTypes: {\n    name: React.PropTypes.string,\n    path: PropTypes.falsy,\n    handler: React.PropTypes.func.isRequired\n  }\n\n});\n\nmodule.exports = DefaultRoute;\n","var React = require('react');\nvar classSet = require('react/lib/cx');\nvar assign = require('react/lib/Object.assign');\nvar Navigation = require('../mixins/Navigation');\nvar State = require('../mixins/State');\n\nfunction isLeftClickEvent(event) {\n  return event.button === 0;\n}\n\nfunction isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\n/**\n * <Link> components are used to create an <a> element that links to a route.\n * When that route is active, the link gets an \"active\" class name (or the\n * value of its `activeClassName` prop).\n *\n * For example, assuming you have the following route:\n *\n *   <Route name=\"showPost\" path=\"/posts/:postID\" handler={Post}/>\n *\n * You could use the following component to link to that route:\n *\n *   <Link to=\"showPost\" params={{ postID: \"123\" }} />\n *\n * In addition to params, links may pass along query string parameters\n * using the `query` prop.\n *\n *   <Link to=\"showPost\" params={{ postID: \"123\" }} query={{ show:true }}/>\n */\nvar Link = React.createClass({\n\n  displayName: 'Link',\n\n  mixins: [ Navigation, State ],\n\n  propTypes: {\n    activeClassName: React.PropTypes.string.isRequired,\n    to: React.PropTypes.string.isRequired,\n    params: React.PropTypes.object,\n    query: React.PropTypes.object,\n    onClick: React.PropTypes.func\n  },\n\n  getDefaultProps: function () {\n    return {\n      activeClassName: 'active'\n    };\n  },\n\n  handleClick: function (event) {\n    var allowTransition = true;\n    var clickResult;\n\n    if (this.props.onClick)\n      clickResult = this.props.onClick(event);\n\n    if (isModifiedEvent(event) || !isLeftClickEvent(event))\n      return;\n\n    if (clickResult === false || event.defaultPrevented === true)\n      allowTransition = false;\n\n    event.preventDefault();\n\n    if (allowTransition)\n      this.transitionTo(this.props.to, this.props.params, this.props.query);\n  },\n\n  /**\n   * Returns the value of the \"href\" attribute to use on the DOM element.\n   */\n  getHref: function () {\n    return this.makeHref(this.props.to, this.props.params, this.props.query);\n  },\n\n  /**\n   * Returns the value of the \"class\" attribute to use on the DOM element, which contains\n   * the value of the activeClassName property when this <Link> is active.\n   */\n  getClassName: function () {\n    var classNames = {};\n\n    if (this.props.className)\n      classNames[this.props.className] = true;\n\n    if (this.isActive(this.props.to, this.props.params, this.props.query))\n      classNames[this.props.activeClassName] = true;\n\n    return classSet(classNames);\n  },\n\n  render: function () {\n    var props = assign({}, this.props, {\n      href: this.getHref(),\n      className: this.getClassName(),\n      onClick: this.handleClick\n    });\n\n    return React.DOM.a(props, this.props.children);\n  }\n\n});\n\nmodule.exports = Link;\n","var React = require('react');\nvar FakeNode = require('../mixins/FakeNode');\nvar PropTypes = require('../utils/PropTypes');\n\n/**\n * A <NotFoundRoute> is a special kind of <Route> that\n * renders when the beginning of its parent's path matches\n * but none of its siblings do, including any <DefaultRoute>.\n * Only one such route may be used at any given level in the\n * route hierarchy.\n */\nvar NotFoundRoute = React.createClass({\n\n  displayName: 'NotFoundRoute',\n\n  mixins: [ FakeNode ],\n\n  propTypes: {\n    name: React.PropTypes.string,\n    path: PropTypes.falsy,\n    handler: React.PropTypes.func.isRequired\n  }\n\n});\n\nmodule.exports = NotFoundRoute;\n","var React = require('react');\nvar FakeNode = require('../mixins/FakeNode');\nvar PropTypes = require('../utils/PropTypes');\n\n/**\n * A <Redirect> component is a special kind of <Route> that always\n * redirects to another route when it matches.\n */\nvar Redirect = React.createClass({\n\n  displayName: 'Redirect',\n\n  mixins: [ FakeNode ],\n\n  propTypes: {\n    path: React.PropTypes.string,\n    from: React.PropTypes.string, // Alias for path.\n    to: React.PropTypes.string,\n    handler: PropTypes.falsy\n  }\n\n});\n\nmodule.exports = Redirect;\n","var React = require('react');\nvar FakeNode = require('../mixins/FakeNode');\n\n/**\n * <Route> components specify components that are rendered to the page when the\n * URL matches a given pattern.\n *\n * Routes are arranged in a nested tree structure. When a new URL is requested,\n * the tree is searched depth-first to find a route whose path matches the URL.\n * When one is found, all routes in the tree that lead to it are considered\n * \"active\" and their components are rendered into the DOM, nested in the same\n * order as they are in the tree.\n *\n * The preferred way to configure a router is using JSX. The XML-like syntax is\n * a great way to visualize how routes are laid out in an application.\n *\n *   var routes = [\n *     <Route handler={App}>\n *       <Route name=\"login\" handler={Login}/>\n *       <Route name=\"logout\" handler={Logout}/>\n *       <Route name=\"about\" handler={About}/>\n *     </Route>\n *   ];\n *   \n *   Router.run(routes, function (Handler) {\n *     React.render(<Handler/>, document.body);\n *   });\n *\n * Handlers for Route components that contain children can render their active\n * child route using a <RouteHandler> element.\n *\n *   var App = React.createClass({\n *     render: function () {\n *       return (\n *         <div class=\"application\">\n *           <RouteHandler/>\n *         </div>\n *       );\n *     }\n *   });\n */\nvar Route = React.createClass({\n\n  displayName: 'Route',\n\n  mixins: [ FakeNode ],\n\n  propTypes: {\n    name: React.PropTypes.string,\n    path: React.PropTypes.string,\n    handler: React.PropTypes.func.isRequired,\n    ignoreScrollBehavior: React.PropTypes.bool\n  }\n\n});\n\nmodule.exports = Route;\n","var React = require('react');\n\n/**\n * A <RouteHandler> component renders the active child route handler\n * when routes are nested.\n */\nvar RouteHandler = React.createClass({\n\n  displayName: 'RouteHandler',\n\n  getDefaultProps: function () {\n    return {\n      ref: '__routeHandler__'\n    };\n  },\n\n  contextTypes: {\n    getRouteAtDepth: React.PropTypes.func.isRequired,\n    getRouteComponents: React.PropTypes.func.isRequired,\n    routeHandlers: React.PropTypes.array.isRequired\n  },\n\n  childContextTypes: {\n    routeHandlers: React.PropTypes.array.isRequired\n  },\n\n  getChildContext: function () {\n    return {\n      routeHandlers: this.context.routeHandlers.concat([ this ])\n    };\n  },\n\n  getRouteDepth: function () {\n    return this.context.routeHandlers.length - 1;\n  },\n\n  componentDidMount: function () {\n    this._updateRouteComponent();\n  },\n\n  componentDidUpdate: function () {\n    this._updateRouteComponent();\n  },\n\n  _updateRouteComponent: function () {\n    var depth = this.getRouteDepth();\n    var components = this.context.getRouteComponents();\n    components[depth] = this.refs[this.props.ref];\n  },\n\n  render: function () {\n    var route = this.context.getRouteAtDepth(this.getRouteDepth());\n    return route ? React.createElement(route.handler, this.props) : null;\n  }\n\n});\n\nmodule.exports = RouteHandler;\n","exports.DefaultRoute = require('./components/DefaultRoute');\nexports.Link = require('./components/Link');\nexports.NotFoundRoute = require('./components/NotFoundRoute');\nexports.Redirect = require('./components/Redirect');\nexports.Route = require('./components/Route');\nexports.RouteHandler = require('./components/RouteHandler');\n\nexports.HashLocation = require('./locations/HashLocation');\nexports.HistoryLocation = require('./locations/HistoryLocation');\nexports.RefreshLocation = require('./locations/RefreshLocation');\n\nexports.Navigation = require('./mixins/Navigation');\nexports.State = require('./mixins/State');\n\nexports.create = require('./utils/createRouter');\nexports.run = require('./utils/runRouter');\n","var invariant = require('react/lib/invariant');\nvar canUseDOM = require('react/lib/ExecutionEnvironment').canUseDOM;\nvar LocationActions = require('../actions/LocationActions');\nvar Path = require('../utils/Path');\n\n/**\n * Returns the current URL path from `window.location.hash`, including query string\n */\nfunction getHashPath() {\n  invariant(\n    canUseDOM,\n    'getHashPath needs a DOM'\n  );\n\n  return Path.decode(\n    window.location.hash.substr(1)\n  );\n}\n\nvar _actionType;\n\nfunction ensureSlash() {\n  var path = getHashPath();\n\n  if (path.charAt(0) === '/')\n    return true;\n\n  HashLocation.replace('/' + path);\n\n  return false;\n}\n\nvar _changeListeners = [];\n\nfunction notifyChange(type) {\n  var change = {\n    path: getHashPath(),\n    type: type\n  };\n\n  _changeListeners.forEach(function (listener) {\n    listener(change);\n  });\n}\n\nvar _isListening = false;\n\nfunction onHashChange() {\n  if (ensureSlash()) {\n    // If we don't have an _actionType then all we know is the hash\n    // changed. It was probably caused by the user clicking the Back\n    // button, but may have also been the Forward button or manual\n    // manipulation. So just guess 'pop'.\n    notifyChange(_actionType || LocationActions.POP);\n    _actionType = null;\n  }\n}\n\n/**\n * A Location that uses `window.location.hash`.\n */\nvar HashLocation = {\n\n  addChangeListener: function (listener) {\n    _changeListeners.push(listener);\n\n    // Do this BEFORE listening for hashchange.\n    ensureSlash();\n\n    if (_isListening)\n      return;\n\n    if (window.addEventListener) {\n      window.addEventListener('hashchange', onHashChange, false);\n    } else {\n      window.attachEvent('onhashchange', onHashChange);\n    }\n\n    _isListening = true;\n  },\n\n  push: function (path) {\n    _actionType = LocationActions.PUSH;\n    window.location.hash = Path.encode(path);\n  },\n\n  replace: function (path) {\n    _actionType = LocationActions.REPLACE;\n    window.location.replace(window.location.pathname + '#' + Path.encode(path));\n  },\n\n  pop: function () {\n    _actionType = LocationActions.POP;\n    window.history.back();\n  },\n\n  getCurrentPath: getHashPath,\n\n  toString: function () {\n    return '<HashLocation>';\n  }\n\n};\n\nmodule.exports = HashLocation;\n","var invariant = require('react/lib/invariant');\nvar canUseDOM = require('react/lib/ExecutionEnvironment').canUseDOM;\nvar LocationActions = require('../actions/LocationActions');\nvar Path = require('../utils/Path');\n\n/**\n * Returns the current URL path from `window.location`, including query string\n */\nfunction getWindowPath() {\n  invariant(\n    canUseDOM,\n    'getWindowPath needs a DOM'\n  );\n\n  return Path.decode(\n    window.location.pathname + window.location.search\n  );\n}\n\nvar _changeListeners = [];\n\nfunction notifyChange(type) {\n  var change = {\n    path: getWindowPath(),\n    type: type\n  };\n\n  _changeListeners.forEach(function (listener) {\n    listener(change);\n  });\n}\n\nvar _isListening = false;\n\nfunction onPopState() {\n  notifyChange(LocationActions.POP);\n}\n\n/**\n * A Location that uses HTML5 history.\n */\nvar HistoryLocation = {\n\n  addChangeListener: function (listener) {\n    _changeListeners.push(listener);\n\n    if (_isListening)\n      return;\n\n    if (window.addEventListener) {\n      window.addEventListener('popstate', onPopState, false);\n    } else {\n      window.attachEvent('popstate', onPopState);\n    }\n\n    _isListening = true;\n  },\n\n  push: function (path) {\n    window.history.pushState({ path: path }, '', Path.encode(path));\n    notifyChange(LocationActions.PUSH);\n  },\n\n  replace: function (path) {\n    window.history.replaceState({ path: path }, '', Path.encode(path));\n    notifyChange(LocationActions.REPLACE);\n  },\n\n  pop: function () {\n    window.history.back();\n  },\n\n  getCurrentPath: getWindowPath,\n\n  toString: function () {\n    return '<HistoryLocation>';\n  }\n\n};\n\nmodule.exports = HistoryLocation;\n","var HistoryLocation = require('./HistoryLocation');\nvar Path = require('../utils/Path');\n\n/**\n * A Location that uses full page refreshes. This is used as\n * the fallback for HistoryLocation in browsers that do not\n * support the HTML5 history API.\n */\nvar RefreshLocation = {\n\n  push: function (path) {\n    window.location = Path.encode(path);\n  },\n\n  replace: function (path) {\n    window.location.replace(Path.encode(path));\n  },\n\n  pop: function () {\n    window.history.back();\n  },\n\n  getCurrentPath: HistoryLocation.getCurrentPath,\n\n  toString: function () {\n    return '<RefreshLocation>';\n  }\n\n};\n\nmodule.exports = RefreshLocation;\n","var invariant = require('react/lib/invariant');\n\nvar FakeNode = {\n\n  render: function () {\n    invariant(\n      false,\n      '%s elements should not be rendered',\n      this.constructor.displayName\n    );\n  }\n\n};\n\nmodule.exports = FakeNode;\n","var React = require('react');\n\n/**\n * A mixin for components that modify the URL.\n *\n * Example:\n *\n *   var MyLink = React.createClass({\n *     mixins: [ Router.Navigation ],\n *     handleClick: function (event) {\n *       event.preventDefault();\n *       this.transitionTo('aRoute', { the: 'params' }, { the: 'query' });\n *     },\n *     render: function () {\n *       return (\n *         <a onClick={this.handleClick}>Click me!</a>\n *       );\n *     }\n *   });\n */\nvar Navigation = {\n\n  contextTypes: {\n    makePath: React.PropTypes.func.isRequired,\n    makeHref: React.PropTypes.func.isRequired,\n    transitionTo: React.PropTypes.func.isRequired,\n    replaceWith: React.PropTypes.func.isRequired,\n    goBack: React.PropTypes.func.isRequired\n  },\n\n  /**\n   * Returns an absolute URL path created from the given route\n   * name, URL parameters, and query values.\n   */\n  makePath: function (to, params, query) {\n    return this.context.makePath(to, params, query);\n  },\n\n  /**\n   * Returns a string that may safely be used as the href of a\n   * link to the route with the given name.\n   */\n  makeHref: function (to, params, query) {\n    return this.context.makeHref(to, params, query);\n  },\n\n  /**\n   * Transitions to the URL specified in the arguments by pushing\n   * a new URL onto the history stack.\n   */\n  transitionTo: function (to, params, query) {\n    this.context.transitionTo(to, params, query);\n  },\n\n  /**\n   * Transitions to the URL specified in the arguments by replacing\n   * the current URL in the history stack.\n   */\n  replaceWith: function (to, params, query) {\n    this.context.replaceWith(to, params, query);\n  },\n\n  /**\n   * Transitions to the previous URL.\n   */\n  goBack: function () {\n    this.context.goBack();\n  }\n\n};\n\nmodule.exports = Navigation;\n","var React = require('react');\n\n/**\n * Provides the router with context for Router.Navigation.\n */\nvar NavigationContext = {\n\n  childContextTypes: {\n    makePath: React.PropTypes.func.isRequired,\n    makeHref: React.PropTypes.func.isRequired,\n    transitionTo: React.PropTypes.func.isRequired,\n    replaceWith: React.PropTypes.func.isRequired,\n    goBack: React.PropTypes.func.isRequired\n  },\n\n  getChildContext: function () {\n    return {\n      makePath: this.constructor.makePath,\n      makeHref: this.constructor.makeHref,\n      transitionTo: this.constructor.transitionTo,\n      replaceWith: this.constructor.replaceWith,\n      goBack: this.constructor.goBack\n    };\n  }\n\n};\n\nmodule.exports = NavigationContext;\n","var invariant = require('react/lib/invariant');\nvar canUseDOM = require('react/lib/ExecutionEnvironment').canUseDOM;\nvar getWindowScrollPosition = require('../utils/getWindowScrollPosition');\n\n/**\n * Provides the router with the ability to manage window scroll position\n * according to its scroll behavior.\n */\nvar Scrolling = {\n\n  componentWillMount: function () {\n    invariant(\n      this.getScrollBehavior() == null || canUseDOM,\n      'Cannot use scroll behavior without a DOM'\n    );\n\n    this._scrollHistory = {};\n  },\n\n  componentDidMount: function () {\n    this._updateScroll();\n  },\n\n  componentWillUpdate: function () {\n    this._scrollHistory[this.state.path] = getWindowScrollPosition();\n  },\n\n  componentDidUpdate: function () {\n    this._updateScroll();\n  },\n\n  componentWillUnmount: function () {\n    delete this._scrollHistory;\n  },\n\n  /**\n   * Returns the last known scroll position for the given URL path.\n   */\n  getScrollPosition: function (path) {\n    return this._scrollHistory[path] || null;\n  },\n\n  _updateScroll: function () {\n    var scrollBehavior = this.getScrollBehavior();\n\n    if (scrollBehavior)\n      scrollBehavior.updateScrollPosition(\n        this.getScrollPosition(this.state.path),\n        this.state.action\n      );\n  }\n\n};\n\nmodule.exports = Scrolling;\n","var React = require('react');\n\n/**\n * A mixin for components that need to know the path, routes, URL\n * params and query that are currently active.\n *\n * Example:\n *\n *   var AboutLink = React.createClass({\n *     mixins: [ Router.State ],\n *     render: function () {\n *       var className = this.props.className;\n *   \n *       if (this.isActive('about'))\n *         className += ' is-active';\n *   \n *       return React.DOM.a({ className: className }, this.props.children);\n *     }\n *   });\n */\nvar State = {\n\n  contextTypes: {\n    getCurrentPath: React.PropTypes.func.isRequired,\n    getCurrentRoutes: React.PropTypes.func.isRequired,\n    getCurrentParams: React.PropTypes.func.isRequired,\n    getCurrentQuery: React.PropTypes.func.isRequired,\n    isActive: React.PropTypes.func.isRequired\n  },\n\n  /**\n   * Returns the current URL path.\n   */\n  getPath: function () {\n    return this.context.getCurrentPath();\n  },\n\n  /**\n   * Returns an array of the routes that are currently active.\n   */\n  getRoutes: function () {\n    return this.context.getCurrentRoutes();\n  },\n\n  /**\n   * Returns an object of the URL params that are currently active.\n   */\n  getParams: function () {\n    return this.context.getCurrentParams();\n  },\n\n  /**\n   * Returns an object of the query params that are currently active.\n   */\n  getQuery: function () {\n    return this.context.getCurrentQuery();\n  },\n\n  /**\n   * A helper method to determine if a given route, params, and query\n   * are active.\n   */\n  isActive: function (to, params, query) {\n    return this.context.isActive(to, params, query);\n  }\n\n};\n\nmodule.exports = State;\n","var React = require('react');\nvar assign = require('react/lib/Object.assign');\nvar Path = require('../utils/Path');\n\nfunction routeIsActive(activeRoutes, routeName) {\n  return activeRoutes.some(function (route) {\n    return route.name === routeName;\n  });\n}\n\nfunction paramsAreActive(activeParams, params) {\n  for (var property in params)\n    if (String(activeParams[property]) !== String(params[property]))\n      return false;\n\n  return true;\n}\n\nfunction queryIsActive(activeQuery, query) {\n  for (var property in query)\n    if (String(activeQuery[property]) !== String(query[property]))\n      return false;\n\n  return true;\n}\n\n/**\n * Provides the router with context for Router.State.\n */\nvar StateContext = {\n\n  /**\n   * Returns the current URL path + query string.\n   */\n  getCurrentPath: function () {\n    return this.state.path;\n  },\n\n  /**\n   * Returns a read-only array of the currently active routes.\n   */\n  getCurrentRoutes: function () {\n    return this.state.routes.slice(0);\n  },\n\n  /**\n   * Returns a read-only object of the currently active URL parameters.\n   */\n  getCurrentParams: function () {\n    return assign({}, this.state.params);\n  },\n\n  /**\n   * Returns a read-only object of the currently active query parameters.\n   */\n  getCurrentQuery: function () {\n    return assign({}, this.state.query);\n  },\n\n  /**\n   * Returns true if the given route, params, and query are active.\n   */\n  isActive: function (to, params, query) {\n    if (Path.isAbsolute(to))\n      return to === this.state.path;\n\n    return routeIsActive(this.state.routes, to) &&\n      paramsAreActive(this.state.params, params) &&\n      (query == null || queryIsActive(this.state.query, query));\n  },\n\n  childContextTypes: {\n    getCurrentPath: React.PropTypes.func.isRequired,\n    getCurrentRoutes: React.PropTypes.func.isRequired,\n    getCurrentParams: React.PropTypes.func.isRequired,\n    getCurrentQuery: React.PropTypes.func.isRequired,\n    isActive: React.PropTypes.func.isRequired\n  },\n\n  getChildContext: function () {\n    return {\n      getCurrentPath: this.getCurrentPath,\n      getCurrentRoutes: this.getCurrentRoutes,\n      getCurrentParams: this.getCurrentParams,\n      getCurrentQuery: this.getCurrentQuery,\n      isActive: this.isActive\n    };\n  }\n\n};\n\nmodule.exports = StateContext;\n","var invariant = require('react/lib/invariant');\nvar merge = require('qs/lib/utils').merge;\nvar qs = require('qs');\n\nvar paramCompileMatcher = /:([a-zA-Z_$][a-zA-Z0-9_$]*)|[*.()\\[\\]\\\\+|{}^$]/g;\nvar paramInjectMatcher = /:([a-zA-Z_$][a-zA-Z0-9_$?]*[?]?)|[*]/g;\nvar paramInjectTrailingSlashMatcher = /\\/\\/\\?|\\/\\?/g;\nvar queryMatcher = /\\?(.+)/;\n\nvar _compiledPatterns = {};\n\nfunction compilePattern(pattern) {\n  if (!(pattern in _compiledPatterns)) {\n    var paramNames = [];\n    var source = pattern.replace(paramCompileMatcher, function (match, paramName) {\n      if (paramName) {\n        paramNames.push(paramName);\n        return '([^/?#]+)';\n      } else if (match === '*') {\n        paramNames.push('splat');\n        return '(.*?)';\n      } else {\n        return '\\\\' + match;\n      }\n    });\n\n    _compiledPatterns[pattern] = {\n      matcher: new RegExp('^' + source + '$', 'i'),\n      paramNames: paramNames\n    };\n  }\n\n  return _compiledPatterns[pattern];\n}\n\nvar Path = {\n\n  /**\n   * Safely decodes special characters in the given URL path.\n   */\n  decode: function (path) {\n    return decodeURI(path.replace(/\\+/g, ' '));\n  },\n\n  /**\n   * Safely encodes special characters in the given URL path.\n   */\n  encode: function (path) {\n    return encodeURI(path).replace(/%20/g, '+');\n  },\n\n  /**\n   * Returns an array of the names of all parameters in the given pattern.\n   */\n  extractParamNames: function (pattern) {\n    return compilePattern(pattern).paramNames;\n  },\n\n  /**\n   * Extracts the portions of the given URL path that match the given pattern\n   * and returns an object of param name => value pairs. Returns null if the\n   * pattern does not match the given path.\n   */\n  extractParams: function (pattern, path) {\n    var object = compilePattern(pattern);\n    var match = path.match(object.matcher);\n\n    if (!match)\n      return null;\n\n    var params = {};\n\n    object.paramNames.forEach(function (paramName, index) {\n      params[paramName] = match[index + 1];\n    });\n\n    return params;\n  },\n\n  /**\n   * Returns a version of the given route path with params interpolated. Throws\n   * if there is a dynamic segment of the route path for which there is no param.\n   */\n  injectParams: function (pattern, params) {\n    params = params || {};\n\n    var splatIndex = 0;\n\n    return pattern.replace(paramInjectMatcher, function (match, paramName) {\n      paramName = paramName || 'splat';\n\n      // If param is optional don't check for existence\n      if (paramName.slice(-1) !== '?') {\n        invariant(\n          params[paramName] != null,\n          'Missing \"' + paramName + '\" parameter for path \"' + pattern + '\"'\n        );\n      } else {\n        paramName = paramName.slice(0, -1);\n\n        if (params[paramName] == null)\n          return '';\n      }\n\n      var segment;\n      if (paramName === 'splat' && Array.isArray(params[paramName])) {\n        segment = params[paramName][splatIndex++];\n\n        invariant(\n          segment != null,\n          'Missing splat # ' + splatIndex + ' for path \"' + pattern + '\"'\n        );\n      } else {\n        segment = params[paramName];\n      }\n\n      return segment;\n    }).replace(paramInjectTrailingSlashMatcher, '/');\n  },\n\n  /**\n   * Returns an object that is the result of parsing any query string contained\n   * in the given path, null if the path contains no query string.\n   */\n  extractQuery: function (path) {\n    var match = path.match(queryMatcher);\n    return match && qs.parse(match[1]);\n  },\n\n  /**\n   * Returns a version of the given path without the query string.\n   */\n  withoutQuery: function (path) {\n    return path.replace(queryMatcher, '');\n  },\n\n  /**\n   * Returns a version of the given path with the parameters in the given\n   * query merged into the query string.\n   */\n  withQuery: function (path, query) {\n    var existingQuery = Path.extractQuery(path);\n\n    if (existingQuery)\n      query = query ? merge(existingQuery, query) : existingQuery;\n\n    var queryString = query && qs.stringify(query);\n\n    if (queryString)\n      return Path.withoutQuery(path) + '?' + queryString;\n\n    return path;\n  },\n\n  /**\n   * Returns true if the given path is absolute.\n   */\n  isAbsolute: function (path) {\n    return path.charAt(0) === '/';\n  },\n\n  /**\n   * Returns a normalized version of the given path.\n   */\n  normalize: function (path, parentRoute) {\n    return path.replace(/^\\/*/, '/');\n  },\n\n  /**\n   * Joins two URL paths together.\n   */\n  join: function (a, b) {\n    return a.replace(/\\/*$/, '/') + b;\n  }\n\n};\n\nmodule.exports = Path;\n","var Promise = require('when/lib/Promise');\n\n// TODO: Use process.env.NODE_ENV check + envify to enable\n// when's promise monitor here when in dev.\n\nmodule.exports = Promise;\n","var PropTypes = {\n\n  /**\n   * Requires that the value of a prop be falsy.\n   */\n  falsy: function (props, propName, elementName) {\n    if (props[propName])\n      return new Error('<' + elementName + '> may not have a \"' + propName + '\" prop');\n  }\n\n};\n\nmodule.exports = PropTypes;\n","/**\n * Encapsulates a redirect to the given route.\n */\nfunction Redirect(to, params, query) {\n  this.to = to;\n  this.params = params;\n  this.query = query;\n}\n\nmodule.exports = Redirect;\n","var assign = require('react/lib/Object.assign');\nvar reversedArray = require('./reversedArray');\nvar Redirect = require('./Redirect');\nvar Promise = require('./Promise');\n\n/**\n * Runs all hook functions serially and calls callback(error) when finished.\n * A hook may return a promise if it needs to execute asynchronously.\n */\nfunction runHooks(hooks, callback) {\n  try {\n    var promise = hooks.reduce(function (promise, hook) {\n      // The first hook to use transition.wait makes the rest\n      // of the transition async from that point forward.\n      return promise ? promise.then(hook) : hook();\n    }, null);\n  } catch (error) {\n    return callback(error); // Sync error.\n  }\n\n  if (promise) {\n    // Use setTimeout to break the promise chain.\n    promise.then(function () {\n      setTimeout(callback);\n    }, function (error) {\n      setTimeout(function () {\n        callback(error);\n      });\n    });\n  } else {\n    callback();\n  }\n}\n\n/**\n * Calls the willTransitionFrom hook of all handlers in the given matches\n * serially in reverse with the transition object and the current instance of\n * the route's handler, so that the deepest nested handlers are called first.\n * Calls callback(error) when finished.\n */\nfunction runTransitionFromHooks(transition, routes, components, callback) {\n  components = reversedArray(components);\n\n  var hooks = reversedArray(routes).map(function (route, index) {\n    return function () {\n      var handler = route.handler;\n\n      if (!transition.isAborted && handler.willTransitionFrom)\n        return handler.willTransitionFrom(transition, components[index]);\n\n      var promise = transition._promise;\n      transition._promise = null;\n\n      return promise;\n    };\n  });\n\n  runHooks(hooks, callback);\n}\n\n/**\n * Calls the willTransitionTo hook of all handlers in the given matches\n * serially with the transition object and any params that apply to that\n * handler. Calls callback(error) when finished.\n */\nfunction runTransitionToHooks(transition, routes, params, query, callback) {\n  var hooks = routes.map(function (route) {\n    return function () {\n      var handler = route.handler;\n\n      if (!transition.isAborted && handler.willTransitionTo)\n        handler.willTransitionTo(transition, params, query);\n\n      var promise = transition._promise;\n      transition._promise = null;\n\n      return promise;\n    };\n  });\n\n  runHooks(hooks, callback);\n}\n\n/**\n * Encapsulates a transition to a given path.\n *\n * The willTransitionTo and willTransitionFrom handlers receive\n * an instance of this class as their first argument.\n */\nfunction Transition(path, retry) {\n  this.path = path;\n  this.abortReason = null;\n  this.isAborted = false;\n  this.retry = retry.bind(this);\n  this._promise = null;\n}\n\nassign(Transition.prototype, {\n\n  abort: function (reason) {\n    this.abortReason = reason;\n    this.isAborted = true;\n  },\n\n  redirect: function (to, params, query) {\n    this.abort(new Redirect(to, params, query));\n  },\n\n  wait: function (value) {\n    this._promise = Promise.resolve(value);\n  },\n\n  from: function (routes, components, callback) {\n    return runTransitionFromHooks(this, routes, components, callback);\n  },\n\n  to: function (routes, params, query, callback) {\n    return runTransitionToHooks(this, routes, params, query, callback);\n  }\n\n});\n\nmodule.exports = Transition;\n","(function (process){\nvar React = require('react');\nvar warning = require('react/lib/warning');\nvar invariant = require('react/lib/invariant');\nvar canUseDOM = require('react/lib/ExecutionEnvironment').canUseDOM;\nvar ImitateBrowserBehavior = require('../behaviors/ImitateBrowserBehavior');\nvar RouteHandler = require('../components/RouteHandler');\nvar HashLocation = require('../locations/HashLocation');\nvar HistoryLocation = require('../locations/HistoryLocation');\nvar RefreshLocation = require('../locations/RefreshLocation');\nvar NavigationContext = require('../mixins/NavigationContext');\nvar StateContext = require('../mixins/StateContext');\nvar Scrolling = require('../mixins/Scrolling');\nvar createRoutesFromChildren = require('./createRoutesFromChildren');\nvar supportsHistory = require('./supportsHistory');\nvar Transition = require('./Transition');\nvar PropTypes = require('./PropTypes');\nvar Redirect = require('./Redirect');\nvar Path = require('./Path');\n\n/**\n * The default location for new routers.\n */\nvar DEFAULT_LOCATION = canUseDOM ? HashLocation : '/';\n\n/**\n * The default scroll behavior for new routers.\n */\nvar DEFAULT_SCROLL_BEHAVIOR = canUseDOM ? ImitateBrowserBehavior : null;\n\n/**\n * The default error handler for new routers.\n */\nfunction defaultErrorHandler(error) {\n  // Throw so we don't silently swallow async errors.\n  throw error; // This error probably originated in a transition hook.\n}\n\n/**\n * The default aborted transition handler for new routers.\n */\nfunction defaultAbortHandler(abortReason, location) {\n  if (typeof location === 'string')\n    throw new Error('Unhandled aborted transition! Reason: ' + abortReason);\n\n  if (abortReason instanceof Redirect) {\n    location.replace(this.makePath(abortReason.to, abortReason.params, abortReason.query));\n  } else {\n    location.pop();\n  }\n}\n\nfunction findMatch(pathname, routes, defaultRoute, notFoundRoute) {\n  var match, route, params;\n\n  for (var i = 0, len = routes.length; i < len; ++i) {\n    route = routes[i];\n\n    // Check the subtree first to find the most deeply-nested match.\n    match = findMatch(pathname, route.childRoutes, route.defaultRoute, route.notFoundRoute);\n\n    if (match != null) {\n      match.routes.unshift(route);\n      return match;\n    }\n\n    // No routes in the subtree matched, so check this route.\n    params = Path.extractParams(route.path, pathname);\n\n    if (params)\n      return createMatch(route, params);\n  }\n\n  // No routes matched, so try the default route if there is one.\n  if (defaultRoute && (params = Path.extractParams(defaultRoute.path, pathname)))\n    return createMatch(defaultRoute, params);\n\n  // Last attempt: does the \"not found\" route match?\n  if (notFoundRoute && (params = Path.extractParams(notFoundRoute.path, pathname)))\n    return createMatch(notFoundRoute, params);\n\n  return match;\n}\n\nfunction createMatch(route, params) {\n  return { routes: [ route ], params: params };\n}\n\nfunction hasMatch(routes, route, prevParams, nextParams) {\n  return routes.some(function (r) {\n    if (r !== route)\n      return false;\n\n    var paramNames = route.paramNames;\n    var paramName;\n\n    for (var i = 0, len = paramNames.length; i < len; ++i) {\n      paramName = paramNames[i];\n\n      if (nextParams[paramName] !== prevParams[paramName])\n        return false;\n    }\n\n    return true;\n  });\n}\n\n/**\n * Creates and returns a new router using the given options. A router\n * is a ReactComponent class that knows how to react to changes in the\n * URL and keep the contents of the page in sync.\n *\n * Options may be any of the following:\n *\n * - routes           (required) The route config\n * - location         The location to use. Defaults to HashLocation when\n *                    the DOM is available, \"/\" otherwise\n * - scrollBehavior   The scroll behavior to use. Defaults to ImitateBrowserBehavior\n *                    when the DOM is available, null otherwise\n * - onError          A function that is used to handle errors\n * - onAbort          A function that is used to handle aborted transitions\n *\n * When rendering in a server-side environment, the location should simply\n * be the URL path that was used in the request, including the query string.\n */\nfunction createRouter(options) {\n  options = options || {};\n\n  if (typeof options === 'function') {\n    options = { routes: options }; // Router.create(<Route>)\n  } else if (Array.isArray(options)) {\n    options = { routes: options }; // Router.create([ <Route>, <Route> ])\n  }\n\n  var routes = [];\n  var namedRoutes = {};\n  var components = [];\n  var location = options.location || DEFAULT_LOCATION;\n  var scrollBehavior = options.scrollBehavior || DEFAULT_SCROLL_BEHAVIOR;\n  var onError = options.onError || defaultErrorHandler;\n  var onAbort = options.onAbort || defaultAbortHandler;\n  var state = {};\n  var nextState = {};\n\n  function updateState() {\n    state = nextState;\n    nextState = {};\n  }\n\n  // Automatically fall back to full page refreshes in\n  // browsers that don't support the HTML history API.\n  if (location === HistoryLocation && !supportsHistory())\n    location = RefreshLocation;\n\n  var router = React.createClass({\n\n    displayName: 'Router',\n\n    mixins: [ NavigationContext, StateContext, Scrolling ],\n\n    statics: {\n\n      defaultRoute: null,\n      notFoundRoute: null,\n\n      /**\n       * Adds routes to this router from the given children object (see ReactChildren).\n       */\n      addRoutes: function (children) {\n        routes.push.apply(routes, createRoutesFromChildren(children, this, namedRoutes));\n      },\n\n      /**\n       * Returns an absolute URL path created from the given route\n       * name, URL parameters, and query.\n       */\n      makePath: function (to, params, query) {\n        var path;\n        if (Path.isAbsolute(to)) {\n          path = Path.normalize(to);\n        } else {\n          var route = namedRoutes[to];\n\n          invariant(\n            route,\n            'Unable to find <Route name=\"%s\">',\n            to\n          );\n\n          path = route.path;\n        }\n\n        return Path.withQuery(Path.injectParams(path, params), query);\n      },\n\n      /**\n       * Returns a string that may safely be used as the href of a link\n       * to the route with the given name, URL parameters, and query.\n       */\n      makeHref: function (to, params, query) {\n        var path = this.makePath(to, params, query);\n        return (location === HashLocation) ? '#' + path : path;\n      },\n\n      /**\n       * Transitions to the URL specified in the arguments by pushing\n       * a new URL onto the history stack.\n       */\n      transitionTo: function (to, params, query) {\n        invariant(\n          typeof location !== 'string',\n          'You cannot use transitionTo with a static location'\n        );\n\n        location.push(this.makePath(to, params, query));\n      },\n\n      /**\n       * Transitions to the URL specified in the arguments by replacing\n       * the current URL in the history stack.\n       */\n      replaceWith: function (to, params, query) {\n        invariant(\n          typeof location !== 'string',\n          'You cannot use replaceWith with a static location'\n        );\n\n        location.replace(this.makePath(to, params, query));\n      },\n\n      /**\n       * Transitions to the previous URL.\n       */\n      goBack: function () {\n        invariant(\n          typeof location !== 'string',\n          'You cannot use goBack with a static location'\n        );\n\n        location.pop();\n      },\n\n      /**\n       * Performs a match of the given path against this router and returns an object with\n       * the { path, routes, params, query } that match. Returns null if no match can be made.\n       */\n      match: function (path) {\n        return findMatch(Path.withoutQuery(path), routes, this.defaultRoute, this.notFoundRoute) || null;\n      },\n\n      /**\n       * Performs a transition to the given path and calls callback(error, abortReason)\n       * when the transition is finished. If both arguments are null the router's state\n       * was updated. Otherwise the transition did not complete.\n       *\n       * In a transition, a router first determines which routes are involved by beginning\n       * with the current route, up the route tree to the first parent route that is shared\n       * with the destination route, and back down the tree to the destination route. The\n       * willTransitionFrom hook is invoked on all route handlers we're transitioning away\n       * from, in reverse nesting order. Likewise, the willTransitionTo hook is invoked on\n       * all route handlers we're transitioning to.\n       *\n       * Both willTransitionFrom and willTransitionTo hooks may either abort or redirect the\n       * transition. To resolve asynchronously, they may use transition.wait(promise). If no\n       * hooks wait, the transition is fully synchronous.\n       */\n      dispatch: function (path, action, callback) {\n        if (state.path === path)\n          return; // Nothing to do!\n\n        var match = this.match(path);\n\n        warning(\n          match != null,\n          'No route matches path \"%s\". Make sure you have <Route path=\"%s\"> somewhere in your routes',\n          path, path\n        );\n\n        if (match == null)\n          match = {};\n\n        var prevRoutes = state.routes || [];\n        var prevParams = state.params || {};\n\n        var nextRoutes = match.routes || [];\n        var nextParams = match.params || {};\n        var nextQuery = Path.extractQuery(path) || {};\n\n        var fromRoutes, toRoutes;\n        if (prevRoutes.length) {\n          fromRoutes = prevRoutes.filter(function (route) {\n            return !hasMatch(nextRoutes, route, prevParams, nextParams);\n          });\n\n          toRoutes = nextRoutes.filter(function (route) {\n            return !hasMatch(prevRoutes, route, prevParams, nextParams);\n          });\n        } else {\n          fromRoutes = [];\n          toRoutes = nextRoutes;\n        }\n\n        var transition = new Transition(path, this.replaceWith.bind(this, path));\n\n        transition.from(fromRoutes, components, function (error) {\n          if (error || transition.isAborted)\n            return callback.call(router, error, transition);\n\n          transition.to(toRoutes, nextParams, nextQuery, function (error) {\n            if (error || transition.isAborted)\n              return callback.call(router, error, transition);\n\n            nextState.path = path;\n            nextState.action = action;\n            nextState.routes = nextRoutes;\n            nextState.params = nextParams;\n            nextState.query = nextQuery;\n\n            callback.call(router, null, transition);\n          });\n        });\n      },\n\n      /**\n       * Starts this router and calls callback(router, state) when the route changes.\n       *\n       * If the router's location is static (i.e. a URL path in a server environment)\n       * the callback is called only once. Otherwise, the location should be one of the\n       * Router.*Location objects (e.g. Router.HashLocation or Router.HistoryLocation).\n       */\n      run: function (callback) {\n        function dispatchHandler(error, transition) {\n          if (error) {\n            onError.call(router, error);\n          } else if (transition.isAborted) {\n            onAbort.call(router, transition.abortReason, location);\n          } else {\n            callback.call(router, router, nextState);\n          }\n        }\n\n        if (typeof location === 'string') {\n          warning(\n            !canUseDOM || process.env.NODE_ENV === 'test',\n            'You should not use a static location in a DOM environment because ' +\n            'the router will not be kept in sync with the current URL'\n          );\n\n          // Dispatch the location.\n          router.dispatch(location, null, dispatchHandler);\n        } else {\n          invariant(\n            canUseDOM,\n            'You cannot use %s in a non-DOM environment',\n            location\n          );\n\n          // Listen for changes to the location.\n          function changeListener(change) {\n            router.dispatch(change.path, change.type, dispatchHandler);\n          }\n\n          if (location.addChangeListener)\n            location.addChangeListener(changeListener);\n\n          // Bootstrap using the current path.\n          router.dispatch(location.getCurrentPath(), null, dispatchHandler);\n        }\n      }\n\n    },\n\n    propTypes: {\n      children: PropTypes.falsy\n    },\n\n    getLocation: function () {\n      return location;\n    },\n\n    getScrollBehavior: function () {\n      return scrollBehavior;\n    },\n\n    getRouteAtDepth: function (depth) {\n      var routes = this.state.routes;\n      return routes && routes[depth];\n    },\n\n    getRouteComponents: function () {\n      return components;\n    },\n\n    getInitialState: function () {\n      updateState();\n      return state;\n    },\n\n    componentWillReceiveProps: function () {\n      updateState();\n      this.setState(state);\n    },\n\n    render: function () {\n      return this.getRouteAtDepth(0) ? React.createElement(RouteHandler, this.props) : null;\n    },\n\n    childContextTypes: {\n      getRouteAtDepth: React.PropTypes.func.isRequired,\n      getRouteComponents: React.PropTypes.func.isRequired,\n      routeHandlers: React.PropTypes.array.isRequired\n    },\n\n    getChildContext: function () {\n      return {\n        getRouteComponents: this.getRouteComponents,\n        getRouteAtDepth: this.getRouteAtDepth,\n        routeHandlers: [ this ]\n      };\n    }\n\n  });\n\n  if (options.routes)\n    router.addRoutes(options.routes);\n\n  return router;\n}\n\nmodule.exports = createRouter;\n\n}).call(this,require('_process'))","var React = require('react');\nvar warning = require('react/lib/warning');\nvar invariant = require('react/lib/invariant');\nvar DefaultRoute = require('../components/DefaultRoute');\nvar NotFoundRoute = require('../components/NotFoundRoute');\nvar Redirect = require('../components/Redirect');\nvar Route = require('../components/Route');\nvar Path = require('./Path');\n\nvar CONFIG_ELEMENT_TYPES = [\n  DefaultRoute.type,\n  NotFoundRoute.type,\n  Redirect.type,\n  Route.type\n];\n\nfunction createRedirectHandler(to, _params, _query) {\n  return React.createClass({\n    statics: {\n      willTransitionTo: function (transition, params, query) {\n        transition.redirect(to, _params || params, _query || query);\n      }\n    },\n\n    render: function () {\n      return null;\n    }\n  });\n}\n\nfunction checkPropTypes(componentName, propTypes, props) {\n  for (var propName in propTypes) {\n    if (propTypes.hasOwnProperty(propName)) {\n      var error = propTypes[propName](props, propName, componentName);\n\n      if (error instanceof Error)\n        warning(false, error.message);\n    }\n  }\n}\n\nfunction createRoute(element, parentRoute, namedRoutes) {\n  var type = element.type;\n  var props = element.props;\n  var componentName = (type && type.displayName) || 'UnknownComponent';\n\n  invariant(\n    CONFIG_ELEMENT_TYPES.indexOf(type) !== -1,\n    'Unrecognized route configuration element \"<%s>\"',\n    componentName\n  );\n\n  if (type.propTypes)\n    checkPropTypes(componentName, type.propTypes, props);\n\n  var route = { name: props.name };\n\n  if (type === Redirect.type) {\n    route.handler = createRedirectHandler(props.to, props.params, props.query);\n    props.path = props.path || props.from || '*';\n  } else {\n    route.handler = props.handler;\n  }\n\n  var parentPath = (parentRoute && parentRoute.path) || '/';\n\n  if ((props.path || props.name) && type !== DefaultRoute.type && type !== NotFoundRoute.type) {\n    var path = props.path || props.name;\n\n    // Relative paths extend their parent.\n    if (!Path.isAbsolute(path))\n      path = Path.join(parentPath, path);\n\n    route.path = Path.normalize(path);\n  } else {\n    route.path = parentPath;\n\n    if (type === NotFoundRoute.type)\n      route.path += '*';\n  }\n\n  route.paramNames = Path.extractParamNames(route.path);\n\n  // Make sure the route's path has all params its parent needs.\n  if (parentRoute && Array.isArray(parentRoute.paramNames)) {\n    parentRoute.paramNames.forEach(function (paramName) {\n      invariant(\n        route.paramNames.indexOf(paramName) !== -1,\n        'The nested route path \"%s\" is missing the \"%s\" parameter of its parent path \"%s\"',\n        route.path, paramName, parentRoute.path\n      );\n    });\n  }\n\n  // Make sure the route can be looked up by <Link>s.\n  if (props.name) {\n    invariant(\n      namedRoutes[props.name] == null,\n      'You cannot use the name \"%s\" for more than one route',\n      props.name\n    );\n\n    namedRoutes[props.name] = route;\n  }\n\n  // Handle <NotFoundRoute>.\n  if (type === NotFoundRoute.type) {\n    invariant(\n      parentRoute,\n      '<NotFoundRoute> must have a parent <Route>'\n    );\n\n    invariant(\n      parentRoute.notFoundRoute == null,\n      'You may not have more than one <NotFoundRoute> per <Route>'\n    );\n\n    parentRoute.notFoundRoute = route;\n\n    return null;\n  }\n\n  // Handle <DefaultRoute>.\n  if (type === DefaultRoute.type) {\n    invariant(\n      parentRoute,\n      '<DefaultRoute> must have a parent <Route>'\n    );\n\n    invariant(\n      parentRoute.defaultRoute == null,\n      'You may not have more than one <DefaultRoute> per <Route>'\n    );\n\n    parentRoute.defaultRoute = route;\n\n    return null;\n  }\n\n  route.childRoutes = createRoutesFromChildren(props.children, route, namedRoutes);\n\n  return route;\n}\n\n/**\n * Creates and returns an array of route objects from the given ReactChildren.\n */\nfunction createRoutesFromChildren(children, parentRoute, namedRoutes) {\n  var routes = [];\n\n  React.Children.forEach(children, function (child) {\n    // Exclude <DefaultRoute>s and <NotFoundRoute>s.\n    if (child = createRoute(child, parentRoute, namedRoutes))\n      routes.push(child);\n  });\n\n  return routes;\n}\n\nmodule.exports = createRoutesFromChildren;\n","var invariant = require('react/lib/invariant');\nvar canUseDOM = require('react/lib/ExecutionEnvironment').canUseDOM;\n\n/**\n * Returns the current scroll position of the window as { x, y }.\n */\nfunction getWindowScrollPosition() {\n  invariant(\n    canUseDOM,\n    'Cannot get current scroll position without a DOM'\n  );\n\n  return {\n    x: window.scrollX,\n    y: window.scrollY\n  };\n}\n\nmodule.exports = getWindowScrollPosition;\n","function reversedArray(array) {\n  return array.slice(0).reverse();\n}\n\nmodule.exports = reversedArray;\n","var createRouter = require('./createRouter');\n\n/**\n * A high-level convenience method that creates, configures, and\n * runs a router in one shot. The method signature is:\n *\n *   Router.run(routes[, location ], callback);\n *\n * Using `window.location.hash` to manage the URL, you could do:\n *\n *   Router.run(routes, function (Handler) {\n *     React.render(<Handler/>, document.body);\n *   });\n * \n * Using HTML5 history and a custom \"cursor\" prop:\n * \n *   Router.run(routes, Router.HistoryLocation, function (Handler) {\n *     React.render(<Handler cursor={cursor}/>, document.body);\n *   });\n *\n * Returns the newly created router.\n *\n * Note: If you need to specify further options for your router such\n * as error/abort handling or custom scroll behavior, use Router.create\n * instead.\n *\n *   var router = Router.create(options);\n *   router.run(function (Handler) {\n *     // ...\n *   });\n */\nfunction runRouter(routes, location, callback) {\n  if (typeof location === 'function') {\n    callback = location;\n    location = null;\n  }\n\n  var router = createRouter({\n    routes: routes,\n    location: location\n  });\n\n  router.run(callback);\n\n  return router;\n}\n\nmodule.exports = runRouter;\n","function supportsHistory() {\n  /*! taken from modernizr\n   * https://github.com/Modernizr/Modernizr/blob/master/LICENSE\n   * https://github.com/Modernizr/Modernizr/blob/master/feature-detects/history.js\n   */\n  var ua = navigator.userAgent;\n  if ((ua.indexOf('Android 2.') !== -1 ||\n      (ua.indexOf('Android 4.0') !== -1)) &&\n      ua.indexOf('Mobile Safari') !== -1 &&\n      ua.indexOf('Chrome') === -1) {\n    return false;\n  }\n  return (window.history && 'pushState' in window.history);\n}\n\nmodule.exports = supportsHistory;\n","module.exports = require('./lib');\n","// Load modules\n\nvar Stringify = require('./stringify');\nvar Parse = require('./parse');\n\n\n// Declare internals\n\nvar internals = {};\n\n\nmodule.exports = {\n    stringify: Stringify,\n    parse: Parse\n};\n","// Load modules\n\nvar Utils = require('./utils');\n\n\n// Declare internals\n\nvar internals = {\n    delimiter: '&',\n    depth: 5,\n    arrayLimit: 20,\n    parameterLimit: 1000\n};\n\n\ninternals.parseValues = function (str, options) {\n\n    var obj = {};\n    var parts = str.split(options.delimiter, options.parameterLimit === Infinity ? undefined : options.parameterLimit);\n\n    for (var i = 0, il = parts.length; i < il; ++i) {\n        var part = parts[i];\n        var pos = part.indexOf(']=') === -1 ? part.indexOf('=') : part.indexOf(']=') + 1;\n\n        if (pos === -1) {\n            obj[Utils.decode(part)] = '';\n        }\n        else {\n            var key = Utils.decode(part.slice(0, pos));\n            var val = Utils.decode(part.slice(pos + 1));\n\n            if (!obj[key]) {\n                obj[key] = val;\n            }\n            else {\n                obj[key] = [].concat(obj[key]).concat(val);\n            }\n        }\n    }\n\n    return obj;\n};\n\n\ninternals.parseObject = function (chain, val, options) {\n\n    if (!chain.length) {\n        return val;\n    }\n\n    var root = chain.shift();\n\n    var obj = {};\n    if (root === '[]') {\n        obj = [];\n        obj = obj.concat(internals.parseObject(chain, val, options));\n    }\n    else {\n        var cleanRoot = root[0] === '[' && root[root.length - 1] === ']' ? root.slice(1, root.length - 1) : root;\n        var index = parseInt(cleanRoot, 10);\n        if (!isNaN(index) &&\n            root !== cleanRoot &&\n            index <= options.arrayLimit) {\n\n            obj = [];\n            obj[index] = internals.parseObject(chain, val, options);\n        }\n        else {\n            obj[cleanRoot] = internals.parseObject(chain, val, options);\n        }\n    }\n\n    return obj;\n};\n\n\ninternals.parseKeys = function (key, val, options) {\n\n    if (!key) {\n        return;\n    }\n\n    // The regex chunks\n\n    var parent = /^([^\\[\\]]*)/;\n    var child = /(\\[[^\\[\\]]*\\])/g;\n\n    // Get the parent\n\n    var segment = parent.exec(key);\n\n    // Don't allow them to overwrite object prototype properties\n\n    if (Object.prototype.hasOwnProperty(segment[1])) {\n        return;\n    }\n\n    // Stash the parent if it exists\n\n    var keys = [];\n    if (segment[1]) {\n        keys.push(segment[1]);\n    }\n\n    // Loop through children appending to the array until we hit depth\n\n    var i = 0;\n    while ((segment = child.exec(key)) !== null && i < options.depth) {\n\n        ++i;\n        if (!Object.prototype.hasOwnProperty(segment[1].replace(/\\[|\\]/g, ''))) {\n            keys.push(segment[1]);\n        }\n    }\n\n    // If there's a remainder, just add whatever is left\n\n    if (segment) {\n        keys.push('[' + key.slice(segment.index) + ']');\n    }\n\n    return internals.parseObject(keys, val, options);\n};\n\n\nmodule.exports = function (str, options) {\n\n    if (str === '' ||\n        str === null ||\n        typeof str === 'undefined') {\n\n        return {};\n    }\n\n    options = options || {};\n    options.delimiter = typeof options.delimiter === 'string' || Utils.isRegExp(options.delimiter) ? options.delimiter : internals.delimiter;\n    options.depth = typeof options.depth === 'number' ? options.depth : internals.depth;\n    options.arrayLimit = typeof options.arrayLimit === 'number' ? options.arrayLimit : internals.arrayLimit;\n    options.parameterLimit = typeof options.parameterLimit === 'number' ? options.parameterLimit : internals.parameterLimit;\n\n    var tempObj = typeof str === 'string' ? internals.parseValues(str, options) : str;\n    var obj = {};\n\n    // Iterate over the keys and setup the new object\n\n    var keys = Object.keys(tempObj);\n    for (var i = 0, il = keys.length; i < il; ++i) {\n        var key = keys[i];\n        var newObj = internals.parseKeys(key, tempObj[key], options);\n        obj = Utils.merge(obj, newObj);\n    }\n\n    return Utils.compact(obj);\n};\n","// Load modules\n\nvar Utils = require('./utils');\n\n\n// Declare internals\n\nvar internals = {\n    delimiter: '&'\n};\n\n\ninternals.stringify = function (obj, prefix) {\n\n    if (Utils.isBuffer(obj)) {\n        obj = obj.toString();\n    }\n    else if (obj instanceof Date) {\n        obj = obj.toISOString();\n    }\n    else if (obj === null) {\n        obj = '';\n    }\n\n    if (typeof obj === 'string' ||\n        typeof obj === 'number' ||\n        typeof obj === 'boolean') {\n\n        return [encodeURIComponent(prefix) + '=' + encodeURIComponent(obj)];\n    }\n\n    var values = [];\n\n    for (var key in obj) {\n        if (obj.hasOwnProperty(key)) {\n            values = values.concat(internals.stringify(obj[key], prefix + '[' + key + ']'));\n        }\n    }\n\n    return values;\n};\n\n\nmodule.exports = function (obj, options) {\n\n    options = options || {};\n    var delimiter = typeof options.delimiter === 'undefined' ? internals.delimiter : options.delimiter;\n\n    var keys = [];\n\n    for (var key in obj) {\n        if (obj.hasOwnProperty(key)) {\n            keys = keys.concat(internals.stringify(obj[key], key));\n        }\n    }\n\n    return keys.join(delimiter);\n};\n","(function (Buffer){\n// Load modules\n\n\n// Declare internals\n\nvar internals = {};\n\n\nexports.arrayToObject = function (source) {\n\n    var obj = {};\n    for (var i = 0, il = source.length; i < il; ++i) {\n        if (typeof source[i] !== 'undefined') {\n\n            obj[i] = source[i];\n        }\n    }\n\n    return obj;\n};\n\n\nexports.merge = function (target, source) {\n\n    if (!source) {\n        return target;\n    }\n\n    if (Array.isArray(source)) {\n        for (var i = 0, il = source.length; i < il; ++i) {\n            if (typeof source[i] !== 'undefined') {\n                if (typeof target[i] === 'object') {\n                    target[i] = exports.merge(target[i], source[i]);\n                }\n                else {\n                    target[i] = source[i];\n                }\n            }\n        }\n\n        return target;\n    }\n\n    if (Array.isArray(target)) {\n        if (typeof source !== 'object') {\n            target.push(source);\n            return target;\n        }\n        else {\n            target = exports.arrayToObject(target);\n        }\n    }\n\n    var keys = Object.keys(source);\n    for (var k = 0, kl = keys.length; k < kl; ++k) {\n        var key = keys[k];\n        var value = source[key];\n\n        if (value &&\n            typeof value === 'object') {\n\n            if (!target[key]) {\n                target[key] = value;\n            }\n            else {\n                target[key] = exports.merge(target[key], value);\n            }\n        }\n        else {\n            target[key] = value;\n        }\n    }\n\n    return target;\n};\n\n\nexports.decode = function (str) {\n\n    try {\n        return decodeURIComponent(str.replace(/\\+/g, ' '));\n    } catch (e) {\n        return str;\n    }\n};\n\n\nexports.compact = function (obj, refs) {\n\n    if (typeof obj !== 'object' ||\n        obj === null) {\n\n        return obj;\n    }\n\n    refs = refs || [];\n    var lookup = refs.indexOf(obj);\n    if (lookup !== -1) {\n        return refs[lookup];\n    }\n\n    refs.push(obj);\n\n    if (Array.isArray(obj)) {\n        var compacted = [];\n\n        for (var i = 0, l = obj.length; i < l; ++i) {\n            if (typeof obj[i] !== 'undefined') {\n                compacted.push(obj[i]);\n            }\n        }\n\n        return compacted;\n    }\n\n    var keys = Object.keys(obj);\n    for (var i = 0, il = keys.length; i < il; ++i) {\n        var key = keys[i];\n        obj[key] = exports.compact(obj[key], refs);\n    }\n\n    return obj;\n};\n\n\nexports.isRegExp = function (obj) {\n    return Object.prototype.toString.call(obj) === '[object RegExp]';\n};\n\n\nexports.isBuffer = function (obj) {\n\n    if (typeof Buffer !== 'undefined') {\n        return Buffer.isBuffer(obj);\n    }\n    else {\n        return false;\n    }\n};\n\n}).call(this,require(\"buffer\").Buffer)","/** @license MIT License (c) copyright 2010-2014 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\n(function(define) { 'use strict';\ndefine(function (require) {\n\n\tvar makePromise = require('./makePromise');\n\tvar Scheduler = require('./Scheduler');\n\tvar async = require('./async');\n\n\treturn makePromise({\n\t\tscheduler: new Scheduler(async)\n\t});\n\n});\n})(typeof define === 'function' && define.amd ? define : function (factory) { module.exports = factory(require); });\n","/** @license MIT License (c) copyright 2010-2014 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\n(function(define) { 'use strict';\ndefine(function() {\n\t/**\n\t * Circular queue\n\t * @param {number} capacityPow2 power of 2 to which this queue's capacity\n\t *  will be set initially. eg when capacityPow2 == 3, queue capacity\n\t *  will be 8.\n\t * @constructor\n\t */\n\tfunction Queue(capacityPow2) {\n\t\tthis.head = this.tail = this.length = 0;\n\t\tthis.buffer = new Array(1 << capacityPow2);\n\t}\n\n\tQueue.prototype.push = function(x) {\n\t\tif(this.length === this.buffer.length) {\n\t\t\tthis._ensureCapacity(this.length * 2);\n\t\t}\n\n\t\tthis.buffer[this.tail] = x;\n\t\tthis.tail = (this.tail + 1) & (this.buffer.length - 1);\n\t\t++this.length;\n\t\treturn this.length;\n\t};\n\n\tQueue.prototype.shift = function() {\n\t\tvar x = this.buffer[this.head];\n\t\tthis.buffer[this.head] = void 0;\n\t\tthis.head = (this.head + 1) & (this.buffer.length - 1);\n\t\t--this.length;\n\t\treturn x;\n\t};\n\n\tQueue.prototype._ensureCapacity = function(capacity) {\n\t\tvar head = this.head;\n\t\tvar buffer = this.buffer;\n\t\tvar newBuffer = new Array(capacity);\n\t\tvar i = 0;\n\t\tvar len;\n\n\t\tif(head === 0) {\n\t\t\tlen = this.length;\n\t\t\tfor(; i<len; ++i) {\n\t\t\t\tnewBuffer[i] = buffer[i];\n\t\t\t}\n\t\t} else {\n\t\t\tcapacity = buffer.length;\n\t\t\tlen = this.tail;\n\t\t\tfor(; head<capacity; ++i, ++head) {\n\t\t\t\tnewBuffer[i] = buffer[head];\n\t\t\t}\n\n\t\t\tfor(head=0; head<len; ++i, ++head) {\n\t\t\t\tnewBuffer[i] = buffer[head];\n\t\t\t}\n\t\t}\n\n\t\tthis.buffer = newBuffer;\n\t\tthis.head = 0;\n\t\tthis.tail = this.length;\n\t};\n\n\treturn Queue;\n\n});\n}(typeof define === 'function' && define.amd ? define : function(factory) { module.exports = factory(); }));\n","/** @license MIT License (c) copyright 2010-2014 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\n(function(define) { 'use strict';\ndefine(function(require) {\n\n\tvar Queue = require('./Queue');\n\n\t// Credit to Twisol (https://github.com/Twisol) for suggesting\n\t// this type of extensible queue + trampoline approach for next-tick conflation.\n\n\t/**\n\t * Async task scheduler\n\t * @param {function} async function to schedule a single async function\n\t * @constructor\n\t */\n\tfunction Scheduler(async) {\n\t\tthis._async = async;\n\t\tthis._queue = new Queue(15);\n\t\tthis._afterQueue = new Queue(5);\n\t\tthis._running = false;\n\n\t\tvar self = this;\n\t\tthis.drain = function() {\n\t\t\tself._drain();\n\t\t};\n\t}\n\n\t/**\n\t * Enqueue a task\n\t * @param {{ run:function }} task\n\t */\n\tScheduler.prototype.enqueue = function(task) {\n\t\tthis._add(this._queue, task);\n\t};\n\n\t/**\n\t * Enqueue a task to run after the main task queue\n\t * @param {{ run:function }} task\n\t */\n\tScheduler.prototype.afterQueue = function(task) {\n\t\tthis._add(this._afterQueue, task);\n\t};\n\n\t/**\n\t * Drain the handler queue entirely, and then the after queue\n\t */\n\tScheduler.prototype._drain = function() {\n\t\trunQueue(this._queue);\n\t\tthis._running = false;\n\t\trunQueue(this._afterQueue);\n\t};\n\n\t/**\n\t * Add a task to the q, and schedule drain if not already scheduled\n\t * @param {Queue} queue\n\t * @param {{run:function}} task\n\t * @private\n\t */\n\tScheduler.prototype._add = function(queue, task) {\n\t\tqueue.push(task);\n\t\tif(!this._running) {\n\t\t\tthis._running = true;\n\t\t\tthis._async(this.drain);\n\t\t}\n\t};\n\n\t/**\n\t * Run all the tasks in the q\n\t * @param queue\n\t */\n\tfunction runQueue(queue) {\n\t\twhile(queue.length > 0) {\n\t\t\tqueue.shift().run();\n\t\t}\n\t}\n\n\treturn Scheduler;\n\n});\n}(typeof define === 'function' && define.amd ? define : function(factory) { module.exports = factory(require); }));\n","(function (process){\n/** @license MIT License (c) copyright 2010-2014 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\n(function(define) { 'use strict';\ndefine(function(require) {\n\n\t// Sniff \"best\" async scheduling option\n\t// Prefer process.nextTick or MutationObserver, then check for\n\t// vertx and finally fall back to setTimeout\n\n\t/*jshint maxcomplexity:6*/\n\t/*global process,document,setTimeout,MutationObserver,WebKitMutationObserver*/\n\tvar nextTick, MutationObs;\n\n\tif (typeof process !== 'undefined' && process !== null &&\n\t\ttypeof process.nextTick === 'function') {\n\t\tnextTick = function(f) {\n\t\t\tprocess.nextTick(f);\n\t\t};\n\n\t} else if (MutationObs =\n\t\t(typeof MutationObserver === 'function' && MutationObserver) ||\n\t\t(typeof WebKitMutationObserver === 'function' && WebKitMutationObserver)) {\n\t\tnextTick = (function (document, MutationObserver) {\n\t\t\tvar scheduled;\n\t\t\tvar el = document.createElement('div');\n\t\t\tvar o = new MutationObserver(run);\n\t\t\to.observe(el, { attributes: true });\n\n\t\t\tfunction run() {\n\t\t\t\tvar f = scheduled;\n\t\t\t\tscheduled = void 0;\n\t\t\t\tf();\n\t\t\t}\n\n\t\t\treturn function (f) {\n\t\t\t\tscheduled = f;\n\t\t\t\tel.setAttribute('class', 'x');\n\t\t\t};\n\t\t}(document, MutationObs));\n\n\t} else {\n\t\tnextTick = (function(cjsRequire) {\n\t\t\tvar vertx;\n\t\t\ttry {\n\t\t\t\t// vert.x 1.x || 2.x\n\t\t\t\tvertx = cjsRequire('vertx');\n\t\t\t} catch (ignore) {}\n\n\t\t\tif (vertx) {\n\t\t\t\tif (typeof vertx.runOnLoop === 'function') {\n\t\t\t\t\treturn vertx.runOnLoop;\n\t\t\t\t}\n\t\t\t\tif (typeof vertx.runOnContext === 'function') {\n\t\t\t\t\treturn vertx.runOnContext;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// capture setTimeout to avoid being caught by fake timers\n\t\t\t// used in time based tests\n\t\t\tvar capturedSetTimeout = setTimeout;\n\t\t\treturn function (t) {\n\t\t\t\tcapturedSetTimeout(t, 0);\n\t\t\t};\n\t\t}(require));\n\t}\n\n\treturn nextTick;\n});\n}(typeof define === 'function' && define.amd ? define : function(factory) { module.exports = factory(require); }));\n\n}).call(this,require('_process'))","/** @license MIT License (c) copyright 2010-2014 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\n(function(define) { 'use strict';\ndefine(function() {\n\n\treturn function makePromise(environment) {\n\n\t\tvar tasks = environment.scheduler;\n\n\t\tvar objectCreate = Object.create ||\n\t\t\tfunction(proto) {\n\t\t\t\tfunction Child() {}\n\t\t\t\tChild.prototype = proto;\n\t\t\t\treturn new Child();\n\t\t\t};\n\n\t\t/**\n\t\t * Create a promise whose fate is determined by resolver\n\t\t * @constructor\n\t\t * @returns {Promise} promise\n\t\t * @name Promise\n\t\t */\n\t\tfunction Promise(resolver, handler) {\n\t\t\tthis._handler = resolver === Handler ? handler : init(resolver);\n\t\t}\n\n\t\t/**\n\t\t * Run the supplied resolver\n\t\t * @param resolver\n\t\t * @returns {Pending}\n\t\t */\n\t\tfunction init(resolver) {\n\t\t\tvar handler = new Pending();\n\n\t\t\ttry {\n\t\t\t\tresolver(promiseResolve, promiseReject, promiseNotify);\n\t\t\t} catch (e) {\n\t\t\t\tpromiseReject(e);\n\t\t\t}\n\n\t\t\treturn handler;\n\n\t\t\t/**\n\t\t\t * Transition from pre-resolution state to post-resolution state, notifying\n\t\t\t * all listeners of the ultimate fulfillment or rejection\n\t\t\t * @param {*} x resolution value\n\t\t\t */\n\t\t\tfunction promiseResolve (x) {\n\t\t\t\thandler.resolve(x);\n\t\t\t}\n\t\t\t/**\n\t\t\t * Reject this promise with reason, which will be used verbatim\n\t\t\t * @param {Error|*} reason rejection reason, strongly suggested\n\t\t\t *   to be an Error type\n\t\t\t */\n\t\t\tfunction promiseReject (reason) {\n\t\t\t\thandler.reject(reason);\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Issue a progress event, notifying all progress listeners\n\t\t\t * @param {*} x progress event payload to pass to all listeners\n\t\t\t */\n\t\t\tfunction promiseNotify (x) {\n\t\t\t\thandler.notify(x);\n\t\t\t}\n\t\t}\n\n\t\t// Creation\n\n\t\tPromise.resolve = resolve;\n\t\tPromise.reject = reject;\n\t\tPromise.never = never;\n\n\t\tPromise._defer = defer;\n\t\tPromise._handler = getHandler;\n\n\t\t/**\n\t\t * Returns a trusted promise. If x is already a trusted promise, it is\n\t\t * returned, otherwise returns a new trusted Promise which follows x.\n\t\t * @param  {*} x\n\t\t * @return {Promise} promise\n\t\t */\n\t\tfunction resolve(x) {\n\t\t\treturn isPromise(x) ? x\n\t\t\t\t: new Promise(Handler, new Async(getHandler(x)));\n\t\t}\n\n\t\t/**\n\t\t * Return a reject promise with x as its reason (x is used verbatim)\n\t\t * @param {*} x\n\t\t * @returns {Promise} rejected promise\n\t\t */\n\t\tfunction reject(x) {\n\t\t\treturn new Promise(Handler, new Async(new Rejected(x)));\n\t\t}\n\n\t\t/**\n\t\t * Return a promise that remains pending forever\n\t\t * @returns {Promise} forever-pending promise.\n\t\t */\n\t\tfunction never() {\n\t\t\treturn foreverPendingPromise; // Should be frozen\n\t\t}\n\n\t\t/**\n\t\t * Creates an internal {promise, resolver} pair\n\t\t * @private\n\t\t * @returns {Promise}\n\t\t */\n\t\tfunction defer() {\n\t\t\treturn new Promise(Handler, new Pending());\n\t\t}\n\n\t\t// Transformation and flow control\n\n\t\t/**\n\t\t * Transform this promise's fulfillment value, returning a new Promise\n\t\t * for the transformed result.  If the promise cannot be fulfilled, onRejected\n\t\t * is called with the reason.  onProgress *may* be called with updates toward\n\t\t * this promise's fulfillment.\n\t\t * @param {function=} onFulfilled fulfillment handler\n\t\t * @param {function=} onRejected rejection handler\n\t\t * @deprecated @param {function=} onProgress progress handler\n\t\t * @return {Promise} new promise\n\t\t */\n\t\tPromise.prototype.then = function(onFulfilled, onRejected) {\n\t\t\tvar parent = this._handler;\n\t\t\tvar state = parent.join().state();\n\n\t\t\tif ((typeof onFulfilled !== 'function' && state > 0) ||\n\t\t\t\t(typeof onRejected !== 'function' && state < 0)) {\n\t\t\t\t// Short circuit: value will not change, simply share handler\n\t\t\t\treturn new this.constructor(Handler, parent);\n\t\t\t}\n\n\t\t\tvar p = this._beget();\n\t\t\tvar child = p._handler;\n\n\t\t\tparent.chain(child, parent.receiver, onFulfilled, onRejected,\n\t\t\t\t\targuments.length > 2 ? arguments[2] : void 0);\n\n\t\t\treturn p;\n\t\t};\n\n\t\t/**\n\t\t * If this promise cannot be fulfilled due to an error, call onRejected to\n\t\t * handle the error. Shortcut for .then(undefined, onRejected)\n\t\t * @param {function?} onRejected\n\t\t * @return {Promise}\n\t\t */\n\t\tPromise.prototype['catch'] = function(onRejected) {\n\t\t\treturn this.then(void 0, onRejected);\n\t\t};\n\n\t\t/**\n\t\t * Creates a new, pending promise of the same type as this promise\n\t\t * @private\n\t\t * @returns {Promise}\n\t\t */\n\t\tPromise.prototype._beget = function() {\n\t\t\tvar parent = this._handler;\n\t\t\tvar child = new Pending(parent.receiver, parent.join().context);\n\t\t\treturn new this.constructor(Handler, child);\n\t\t};\n\n\t\t// Array combinators\n\n\t\tPromise.all = all;\n\t\tPromise.race = race;\n\n\t\t/**\n\t\t * Return a promise that will fulfill when all promises in the\n\t\t * input array have fulfilled, or will reject when one of the\n\t\t * promises rejects.\n\t\t * @param {array} promises array of promises\n\t\t * @returns {Promise} promise for array of fulfillment values\n\t\t */\n\t\tfunction all(promises) {\n\t\t\t/*jshint maxcomplexity:8*/\n\t\t\tvar resolver = new Pending();\n\t\t\tvar pending = promises.length >>> 0;\n\t\t\tvar results = new Array(pending);\n\n\t\t\tvar i, h, x, s;\n\t\t\tfor (i = 0; i < promises.length; ++i) {\n\t\t\t\tx = promises[i];\n\n\t\t\t\tif (x === void 0 && !(i in promises)) {\n\t\t\t\t\t--pending;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (maybeThenable(x)) {\n\t\t\t\t\th = getHandlerMaybeThenable(x);\n\n\t\t\t\t\ts = h.state();\n\t\t\t\t\tif (s === 0) {\n\t\t\t\t\t\th.fold(settleAt, i, results, resolver);\n\t\t\t\t\t} else if (s > 0) {\n\t\t\t\t\t\tresults[i] = h.value;\n\t\t\t\t\t\t--pending;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tunreportRemaining(promises, i+1, h);\n\t\t\t\t\t\tresolver.become(h);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\t\t\t\t\tresults[i] = x;\n\t\t\t\t\t--pending;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif(pending === 0) {\n\t\t\t\tresolver.become(new Fulfilled(results));\n\t\t\t}\n\n\t\t\treturn new Promise(Handler, resolver);\n\n\t\t\tfunction settleAt(i, x, resolver) {\n\t\t\t\t/*jshint validthis:true*/\n\t\t\t\tthis[i] = x;\n\t\t\t\tif(--pending === 0) {\n\t\t\t\t\tresolver.become(new Fulfilled(this));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction unreportRemaining(promises, start, rejectedHandler) {\n\t\t\tvar i, h, x;\n\t\t\tfor(i=start; i<promises.length; ++i) {\n\t\t\t\tx = promises[i];\n\t\t\t\tif(maybeThenable(x)) {\n\t\t\t\t\th = getHandlerMaybeThenable(x);\n\n\t\t\t\t\tif(h !== rejectedHandler) {\n\t\t\t\t\t\th.visit(h, void 0, h._unreport);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Fulfill-reject competitive race. Return a promise that will settle\n\t\t * to the same state as the earliest input promise to settle.\n\t\t *\n\t\t * WARNING: The ES6 Promise spec requires that race()ing an empty array\n\t\t * must return a promise that is pending forever.  This implementation\n\t\t * returns a singleton forever-pending promise, the same singleton that is\n\t\t * returned by Promise.never(), thus can be checked with ===\n\t\t *\n\t\t * @param {array} promises array of promises to race\n\t\t * @returns {Promise} if input is non-empty, a promise that will settle\n\t\t * to the same outcome as the earliest input promise to settle. if empty\n\t\t * is empty, returns a promise that will never settle.\n\t\t */\n\t\tfunction race(promises) {\n\t\t\t// Sigh, race([]) is untestable unless we return *something*\n\t\t\t// that is recognizable without calling .then() on it.\n\t\t\tif(Object(promises) === promises && promises.length === 0) {\n\t\t\t\treturn never();\n\t\t\t}\n\n\t\t\tvar h = new Pending();\n\t\t\tvar i, x;\n\t\t\tfor(i=0; i<promises.length; ++i) {\n\t\t\t\tx = promises[i];\n\t\t\t\tif (x !== void 0 && i in promises) {\n\t\t\t\t\tgetHandler(x).visit(h, h.resolve, h.reject);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn new Promise(Handler, h);\n\t\t}\n\n\t\t// Promise internals\n\t\t// Below this, everything is @private\n\n\t\t/**\n\t\t * Get an appropriate handler for x, without checking for cycles\n\t\t * @param {*} x\n\t\t * @returns {object} handler\n\t\t */\n\t\tfunction getHandler(x) {\n\t\t\tif(isPromise(x)) {\n\t\t\t\treturn x._handler.join();\n\t\t\t}\n\t\t\treturn maybeThenable(x) ? getHandlerUntrusted(x) : new Fulfilled(x);\n\t\t}\n\n\t\t/**\n\t\t * Get a handler for thenable x.\n\t\t * NOTE: You must only call this if maybeThenable(x) == true\n\t\t * @param {object|function|Promise} x\n\t\t * @returns {object} handler\n\t\t */\n\t\tfunction getHandlerMaybeThenable(x) {\n\t\t\treturn isPromise(x) ? x._handler.join() : getHandlerUntrusted(x);\n\t\t}\n\n\t\t/**\n\t\t * Get a handler for potentially untrusted thenable x\n\t\t * @param {*} x\n\t\t * @returns {object} handler\n\t\t */\n\t\tfunction getHandlerUntrusted(x) {\n\t\t\ttry {\n\t\t\t\tvar untrustedThen = x.then;\n\t\t\t\treturn typeof untrustedThen === 'function'\n\t\t\t\t\t? new Thenable(untrustedThen, x)\n\t\t\t\t\t: new Fulfilled(x);\n\t\t\t} catch(e) {\n\t\t\t\treturn new Rejected(e);\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Handler for a promise that is pending forever\n\t\t * @constructor\n\t\t */\n\t\tfunction Handler() {}\n\n\t\tHandler.prototype.when\n\t\t\t= Handler.prototype.become\n\t\t\t= Handler.prototype.notify\n\t\t\t= Handler.prototype.fail\n\t\t\t= Handler.prototype._unreport\n\t\t\t= Handler.prototype._report\n\t\t\t= noop;\n\n\t\tHandler.prototype._state = 0;\n\n\t\tHandler.prototype.state = function() {\n\t\t\treturn this._state;\n\t\t};\n\n\t\t/**\n\t\t * Recursively collapse handler chain to find the handler\n\t\t * nearest to the fully resolved value.\n\t\t * @returns {object} handler nearest the fully resolved value\n\t\t */\n\t\tHandler.prototype.join = function() {\n\t\t\tvar h = this;\n\t\t\twhile(h.handler !== void 0) {\n\t\t\t\th = h.handler;\n\t\t\t}\n\t\t\treturn h;\n\t\t};\n\n\t\tHandler.prototype.chain = function(to, receiver, fulfilled, rejected, progress) {\n\t\t\tthis.when({\n\t\t\t\tresolver: to,\n\t\t\t\treceiver: receiver,\n\t\t\t\tfulfilled: fulfilled,\n\t\t\t\trejected: rejected,\n\t\t\t\tprogress: progress\n\t\t\t});\n\t\t};\n\n\t\tHandler.prototype.visit = function(receiver, fulfilled, rejected, progress) {\n\t\t\tthis.chain(failIfRejected, receiver, fulfilled, rejected, progress);\n\t\t};\n\n\t\tHandler.prototype.fold = function(f, z, c, to) {\n\t\t\tthis.visit(to, function(x) {\n\t\t\t\tf.call(c, z, x, this);\n\t\t\t}, to.reject, to.notify);\n\t\t};\n\n\t\t/**\n\t\t * Handler that invokes fail() on any handler it becomes\n\t\t * @constructor\n\t\t */\n\t\tfunction FailIfRejected() {}\n\n\t\tinherit(Handler, FailIfRejected);\n\n\t\tFailIfRejected.prototype.become = function(h) {\n\t\t\th.fail();\n\t\t};\n\n\t\tvar failIfRejected = new FailIfRejected();\n\n\t\t/**\n\t\t * Handler that manages a queue of consumers waiting on a pending promise\n\t\t * @constructor\n\t\t */\n\t\tfunction Pending(receiver, inheritedContext) {\n\t\t\tPromise.createContext(this, inheritedContext);\n\n\t\t\tthis.consumers = void 0;\n\t\t\tthis.receiver = receiver;\n\t\t\tthis.handler = void 0;\n\t\t\tthis.resolved = false;\n\t\t}\n\n\t\tinherit(Handler, Pending);\n\n\t\tPending.prototype._state = 0;\n\n\t\tPending.prototype.resolve = function(x) {\n\t\t\tthis.become(getHandler(x));\n\t\t};\n\n\t\tPending.prototype.reject = function(x) {\n\t\t\tif(this.resolved) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.become(new Rejected(x));\n\t\t};\n\n\t\tPending.prototype.join = function() {\n\t\t\tif (!this.resolved) {\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\tvar h = this;\n\n\t\t\twhile (h.handler !== void 0) {\n\t\t\t\th = h.handler;\n\t\t\t\tif (h === this) {\n\t\t\t\t\treturn this.handler = cycle();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn h;\n\t\t};\n\n\t\tPending.prototype.run = function() {\n\t\t\tvar q = this.consumers;\n\t\t\tvar handler = this.join();\n\t\t\tthis.consumers = void 0;\n\n\t\t\tfor (var i = 0; i < q.length; ++i) {\n\t\t\t\thandler.when(q[i]);\n\t\t\t}\n\t\t};\n\n\t\tPending.prototype.become = function(handler) {\n\t\t\tif(this.resolved) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.resolved = true;\n\t\t\tthis.handler = handler;\n\t\t\tif(this.consumers !== void 0) {\n\t\t\t\ttasks.enqueue(this);\n\t\t\t}\n\n\t\t\tif(this.context !== void 0) {\n\t\t\t\thandler._report(this.context);\n\t\t\t}\n\t\t};\n\n\t\tPending.prototype.when = function(continuation) {\n\t\t\tif(this.resolved) {\n\t\t\t\ttasks.enqueue(new ContinuationTask(continuation, this.handler));\n\t\t\t} else {\n\t\t\t\tif(this.consumers === void 0) {\n\t\t\t\t\tthis.consumers = [continuation];\n\t\t\t\t} else {\n\t\t\t\t\tthis.consumers.push(continuation);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tPending.prototype.notify = function(x) {\n\t\t\tif(!this.resolved) {\n\t\t\t\ttasks.enqueue(new ProgressTask(x, this));\n\t\t\t}\n\t\t};\n\n\t\tPending.prototype.fail = function(context) {\n\t\t\tvar c = typeof context === 'undefined' ? this.context : context;\n\t\t\tthis.resolved && this.handler.join().fail(c);\n\t\t};\n\n\t\tPending.prototype._report = function(context) {\n\t\t\tthis.resolved && this.handler.join()._report(context);\n\t\t};\n\n\t\tPending.prototype._unreport = function() {\n\t\t\tthis.resolved && this.handler.join()._unreport();\n\t\t};\n\n\t\t/**\n\t\t * Wrap another handler and force it into a future stack\n\t\t * @param {object} handler\n\t\t * @constructor\n\t\t */\n\t\tfunction Async(handler) {\n\t\t\tthis.handler = handler;\n\t\t}\n\n\t\tinherit(Handler, Async);\n\n\t\tAsync.prototype.when = function(continuation) {\n\t\t\ttasks.enqueue(new ContinuationTask(continuation, this));\n\t\t};\n\n\t\tAsync.prototype._report = function(context) {\n\t\t\tthis.join()._report(context);\n\t\t};\n\n\t\tAsync.prototype._unreport = function() {\n\t\t\tthis.join()._unreport();\n\t\t};\n\n\t\t/**\n\t\t * Handler that wraps an untrusted thenable and assimilates it in a future stack\n\t\t * @param {function} then\n\t\t * @param {{then: function}} thenable\n\t\t * @constructor\n\t\t */\n\t\tfunction Thenable(then, thenable) {\n\t\t\tPending.call(this);\n\t\t\ttasks.enqueue(new AssimilateTask(then, thenable, this));\n\t\t}\n\n\t\tinherit(Pending, Thenable);\n\n\t\t/**\n\t\t * Handler for a fulfilled promise\n\t\t * @param {*} x fulfillment value\n\t\t * @constructor\n\t\t */\n\t\tfunction Fulfilled(x) {\n\t\t\tPromise.createContext(this);\n\t\t\tthis.value = x;\n\t\t}\n\n\t\tinherit(Handler, Fulfilled);\n\n\t\tFulfilled.prototype._state = 1;\n\n\t\tFulfilled.prototype.fold = function(f, z, c, to) {\n\t\t\trunContinuation3(f, z, this, c, to);\n\t\t};\n\n\t\tFulfilled.prototype.when = function(cont) {\n\t\t\trunContinuation1(cont.fulfilled, this, cont.receiver, cont.resolver);\n\t\t};\n\n\t\tvar errorId = 0;\n\n\t\t/**\n\t\t * Handler for a rejected promise\n\t\t * @param {*} x rejection reason\n\t\t * @constructor\n\t\t */\n\t\tfunction Rejected(x) {\n\t\t\tPromise.createContext(this);\n\n\t\t\tthis.id = ++errorId;\n\t\t\tthis.value = x;\n\t\t\tthis.handled = false;\n\t\t\tthis.reported = false;\n\n\t\t\tthis._report();\n\t\t}\n\n\t\tinherit(Handler, Rejected);\n\n\t\tRejected.prototype._state = -1;\n\n\t\tRejected.prototype.fold = function(f, z, c, to) {\n\t\t\tto.become(this);\n\t\t};\n\n\t\tRejected.prototype.when = function(cont) {\n\t\t\tif(typeof cont.rejected === 'function') {\n\t\t\t\tthis._unreport();\n\t\t\t}\n\t\t\trunContinuation1(cont.rejected, this, cont.receiver, cont.resolver);\n\t\t};\n\n\t\tRejected.prototype._report = function(context) {\n\t\t\ttasks.afterQueue(new ReportTask(this, context));\n\t\t};\n\n\t\tRejected.prototype._unreport = function() {\n\t\t\tthis.handled = true;\n\t\t\ttasks.afterQueue(new UnreportTask(this));\n\t\t};\n\n\t\tRejected.prototype.fail = function(context) {\n\t\t\tPromise.onFatalRejection(this, context === void 0 ? this.context : context);\n\t\t};\n\n\t\tfunction ReportTask(rejection, context) {\n\t\t\tthis.rejection = rejection;\n\t\t\tthis.context = context;\n\t\t}\n\n\t\tReportTask.prototype.run = function() {\n\t\t\tif(!this.rejection.handled) {\n\t\t\t\tthis.rejection.reported = true;\n\t\t\t\tPromise.onPotentiallyUnhandledRejection(this.rejection, this.context);\n\t\t\t}\n\t\t};\n\n\t\tfunction UnreportTask(rejection) {\n\t\t\tthis.rejection = rejection;\n\t\t}\n\n\t\tUnreportTask.prototype.run = function() {\n\t\t\tif(this.rejection.reported) {\n\t\t\t\tPromise.onPotentiallyUnhandledRejectionHandled(this.rejection);\n\t\t\t}\n\t\t};\n\n\t\t// Unhandled rejection hooks\n\t\t// By default, everything is a noop\n\n\t\t// TODO: Better names: \"annotate\"?\n\t\tPromise.createContext\n\t\t\t= Promise.enterContext\n\t\t\t= Promise.exitContext\n\t\t\t= Promise.onPotentiallyUnhandledRejection\n\t\t\t= Promise.onPotentiallyUnhandledRejectionHandled\n\t\t\t= Promise.onFatalRejection\n\t\t\t= noop;\n\n\t\t// Errors and singletons\n\n\t\tvar foreverPendingHandler = new Handler();\n\t\tvar foreverPendingPromise = new Promise(Handler, foreverPendingHandler);\n\n\t\tfunction cycle() {\n\t\t\treturn new Rejected(new TypeError('Promise cycle'));\n\t\t}\n\n\t\t// Task runners\n\n\t\t/**\n\t\t * Run a single consumer\n\t\t * @constructor\n\t\t */\n\t\tfunction ContinuationTask(continuation, handler) {\n\t\t\tthis.continuation = continuation;\n\t\t\tthis.handler = handler;\n\t\t}\n\n\t\tContinuationTask.prototype.run = function() {\n\t\t\tthis.handler.join().when(this.continuation);\n\t\t};\n\n\t\t/**\n\t\t * Run a queue of progress handlers\n\t\t * @constructor\n\t\t */\n\t\tfunction ProgressTask(value, handler) {\n\t\t\tthis.handler = handler;\n\t\t\tthis.value = value;\n\t\t}\n\n\t\tProgressTask.prototype.run = function() {\n\t\t\tvar q = this.handler.consumers;\n\t\t\tif(q === void 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor (var c, i = 0; i < q.length; ++i) {\n\t\t\t\tc = q[i];\n\t\t\t\trunNotify(c.progress, this.value, this.handler, c.receiver, c.resolver);\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t * Assimilate a thenable, sending it's value to resolver\n\t\t * @param {function} then\n\t\t * @param {object|function} thenable\n\t\t * @param {object} resolver\n\t\t * @constructor\n\t\t */\n\t\tfunction AssimilateTask(then, thenable, resolver) {\n\t\t\tthis._then = then;\n\t\t\tthis.thenable = thenable;\n\t\t\tthis.resolver = resolver;\n\t\t}\n\n\t\tAssimilateTask.prototype.run = function() {\n\t\t\tvar h = this.resolver;\n\t\t\ttryAssimilate(this._then, this.thenable, _resolve, _reject, _notify);\n\n\t\t\tfunction _resolve(x) { h.resolve(x); }\n\t\t\tfunction _reject(x)  { h.reject(x); }\n\t\t\tfunction _notify(x)  { h.notify(x); }\n\t\t};\n\n\t\tfunction tryAssimilate(then, thenable, resolve, reject, notify) {\n\t\t\ttry {\n\t\t\t\tthen.call(thenable, resolve, reject, notify);\n\t\t\t} catch (e) {\n\t\t\t\treject(e);\n\t\t\t}\n\t\t}\n\n\t\t// Other helpers\n\n\t\t/**\n\t\t * @param {*} x\n\t\t * @returns {boolean} true iff x is a trusted Promise\n\t\t */\n\t\tfunction isPromise(x) {\n\t\t\treturn x instanceof Promise;\n\t\t}\n\n\t\t/**\n\t\t * Test just enough to rule out primitives, in order to take faster\n\t\t * paths in some code\n\t\t * @param {*} x\n\t\t * @returns {boolean} false iff x is guaranteed *not* to be a thenable\n\t\t */\n\t\tfunction maybeThenable(x) {\n\t\t\treturn (typeof x === 'object' || typeof x === 'function') && x !== null;\n\t\t}\n\n\t\tfunction runContinuation1(f, h, receiver, next) {\n\t\t\tif(typeof f !== 'function') {\n\t\t\t\treturn next.become(h);\n\t\t\t}\n\n\t\t\tPromise.enterContext(h);\n\t\t\ttryCatchReject(f, h.value, receiver, next);\n\t\t\tPromise.exitContext();\n\t\t}\n\n\t\tfunction runContinuation3(f, x, h, receiver, next) {\n\t\t\tif(typeof f !== 'function') {\n\t\t\t\treturn next.become(h);\n\t\t\t}\n\n\t\t\tPromise.enterContext(h);\n\t\t\ttryCatchReject3(f, x, h.value, receiver, next);\n\t\t\tPromise.exitContext();\n\t\t}\n\n\t\tfunction runNotify(f, x, h, receiver, next) {\n\t\t\tif(typeof f !== 'function') {\n\t\t\t\treturn next.notify(x);\n\t\t\t}\n\n\t\t\tPromise.enterContext(h);\n\t\t\ttryCatchReturn(f, x, receiver, next);\n\t\t\tPromise.exitContext();\n\t\t}\n\n\t\t/**\n\t\t * Return f.call(thisArg, x), or if it throws return a rejected promise for\n\t\t * the thrown exception\n\t\t */\n\t\tfunction tryCatchReject(f, x, thisArg, next) {\n\t\t\ttry {\n\t\t\t\tnext.become(getHandler(f.call(thisArg, x)));\n\t\t\t} catch(e) {\n\t\t\t\tnext.become(new Rejected(e));\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Same as above, but includes the extra argument parameter.\n\t\t */\n\t\tfunction tryCatchReject3(f, x, y, thisArg, next) {\n\t\t\ttry {\n\t\t\t\tf.call(thisArg, x, y, next);\n\t\t\t} catch(e) {\n\t\t\t\tnext.become(new Rejected(e));\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Return f.call(thisArg, x), or if it throws, *return* the exception\n\t\t */\n\t\tfunction tryCatchReturn(f, x, thisArg, next) {\n\t\t\ttry {\n\t\t\t\tnext.notify(f.call(thisArg, x));\n\t\t\t} catch(e) {\n\t\t\t\tnext.notify(e);\n\t\t\t}\n\t\t}\n\n\t\tfunction inherit(Parent, Child) {\n\t\t\tChild.prototype = objectCreate(Parent.prototype);\n\t\t\tChild.prototype.constructor = Child;\n\t\t}\n\n\t\tfunction noop() {}\n\n\t\treturn Promise;\n\t};\n});\n}(typeof define === 'function' && define.amd ? define : function(factory) { module.exports = factory(); }));\n","/**\n * Copyright 2013-2014, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ExecutionEnvironment\n */\n\n/*jslint evil: true */\n\n\"use strict\";\n\nvar canUseDOM = !!(\n  typeof window !== 'undefined' &&\n  window.document &&\n  window.document.createElement\n);\n\n/**\n * Simple, lightweight module assisting with the detection and context of\n * Worker. Helps avoid circular dependencies and allows code to reason about\n * whether or not they are in a Worker, even if they never include the main\n * `ReactWorker` dependency.\n */\nvar ExecutionEnvironment = {\n\n  canUseDOM: canUseDOM,\n\n  canUseWorkers: typeof Worker !== 'undefined',\n\n  canUseEventListeners:\n    canUseDOM && !!(window.addEventListener || window.attachEvent),\n\n  canUseViewport: canUseDOM && !!window.screen,\n\n  isInWorker: !canUseDOM // For now, this is true - might change in the future.\n\n};\n\nmodule.exports = ExecutionEnvironment;\n","/**\n * Copyright 2014, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule Object.assign\n */\n\n// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.assign\n\nfunction assign(target, sources) {\n  if (target == null) {\n    throw new TypeError('Object.assign target cannot be null or undefined');\n  }\n\n  var to = Object(target);\n  var hasOwnProperty = Object.prototype.hasOwnProperty;\n\n  for (var nextIndex = 1; nextIndex < arguments.length; nextIndex++) {\n    var nextSource = arguments[nextIndex];\n    if (nextSource == null) {\n      continue;\n    }\n\n    var from = Object(nextSource);\n\n    // We don't currently support accessors nor proxies. Therefore this\n    // copy cannot throw. If we ever supported this then we must handle\n    // exceptions and side-effects. We don't support symbols so they won't\n    // be transferred.\n\n    for (var key in from) {\n      if (hasOwnProperty.call(from, key)) {\n        to[key] = from[key];\n      }\n    }\n  }\n\n  return to;\n};\n\nmodule.exports = assign;\n","/**\n * Copyright 2013-2014, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule cx\n */\n\n/**\n * This function is used to mark string literals representing CSS class names\n * so that they can be transformed statically. This allows for modularization\n * and minification of CSS class names.\n *\n * In static_upstream, this function is actually implemented, but it should\n * eventually be replaced with something more descriptive, and the transform\n * that is used in the main stack should be ported for use elsewhere.\n *\n * @param string|object className to modularize, or an object of key/values.\n *                      In the object case, the values are conditions that\n *                      determine if the className keys should be included.\n * @param [string ...]  Variable list of classNames in the string case.\n * @return string       Renderable space-separated CSS className.\n */\nfunction cx(classNames) {\n  if (typeof classNames == 'object') {\n    return Object.keys(classNames).filter(function(className) {\n      return classNames[className];\n    }).join(' ');\n  } else {\n    return Array.prototype.join.call(arguments, ' ');\n  }\n}\n\nmodule.exports = cx;\n","/**\n * Copyright 2013-2014, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule emptyFunction\n */\n\nfunction makeEmptyFunction(arg) {\n  return function() {\n    return arg;\n  };\n}\n\n/**\n * This function accepts and discards inputs; it has no side effects. This is\n * primarily useful idiomatically for overridable function endpoints which\n * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n */\nfunction emptyFunction() {}\n\nemptyFunction.thatReturns = makeEmptyFunction;\nemptyFunction.thatReturnsFalse = makeEmptyFunction(false);\nemptyFunction.thatReturnsTrue = makeEmptyFunction(true);\nemptyFunction.thatReturnsNull = makeEmptyFunction(null);\nemptyFunction.thatReturnsThis = function() { return this; };\nemptyFunction.thatReturnsArgument = function(arg) { return arg; };\n\nmodule.exports = emptyFunction;\n","(function (process){\n/**\n * Copyright 2013-2014, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule invariant\n */\n\n\"use strict\";\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar invariant = function(condition, format, a, b, c, d, e, f) {\n  if (\"production\" !== process.env.NODE_ENV) {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error(\n        'Minified exception occurred; use the non-minified dev environment ' +\n        'for the full error message and additional helpful warnings.'\n      );\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(\n        'Invariant Violation: ' +\n        format.replace(/%s/g, function() { return args[argIndex++]; })\n      );\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n};\n\nmodule.exports = invariant;\n\n}).call(this,require('_process'))","(function (process){\n/**\n * Copyright 2014, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule warning\n */\n\n\"use strict\";\n\nvar emptyFunction = require(\"./emptyFunction\");\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar warning = emptyFunction;\n\nif (\"production\" !== process.env.NODE_ENV) {\n  warning = function(condition, format ) {var args=Array.prototype.slice.call(arguments,2);\n    if (format === undefined) {\n      throw new Error(\n        '`warning(condition, format, ...args)` requires a warning ' +\n        'message argument'\n      );\n    }\n\n    if (!condition) {\n      var argIndex = 0;\n      console.warn('Warning: ' + format.replace(/%s/g, function()  {return args[argIndex++];}));\n    }\n  };\n}\n\nmodule.exports = warning;\n\n}).call(this,require('_process'))","module.exports={\"module\":{\"line\":23,\"literalName\":\"'immutable'\",\"doc\":[\"Immutable Data\\n==============\\n\\nImmutable data encourages pure functions (data-in, data-out) and lends itself\\nto much simpler application development and enabling techniques from\\nfunctional programming such as lazy evaluation.\\n\\nWhile designed to bring these powerful functional concepts to JavaScript, it\\npresents an Object-Oriented API familiar to Javascript engineers and closely\\nmirroring that of Array, Map, and Set. It is easy and efficient to convert to\\nand from plain Javascript types.\"],\"types\":{\"is\":{\"call\":{\"impl\":[{\"line\":24,\"params\":[{\"name\":\"first\",\"type\":{\"k\":0}},{\"name\":\"second\",\"type\":{\"k\":0}}],\"type\":{\"k\":1}}],\"doc\":[\"`Immutable.is()` has the same semantics as Object.is(), but treats\\nImmutable collections and sequences as values, equal if the second\\nImmutable iterable contains equivalent values. It's used throughout when\\nchecking for equality.\\n\\n    var map1 = Immutable.Map({a:1, b:1, c:1});\\n    var map2 = Immutable.Map({a:1, b:1, c:1});\\n    assert(map1 !== map2);\\n    assert(Object.is(map1, map2) === false);\\n    assert(Immutable.is(map1, map2) === true);\\n\"]}},\"fromJS\":{\"call\":{\"impl\":[{\"line\":39,\"params\":[{\"name\":\"json\",\"type\":{\"k\":0}},{\"name\":\"reviver\",\"optional\":true,\"type\":{\"k\":6,\"params\":[{\"name\":\"k\",\"type\":{\"k\":0}},{\"name\":\"v\",\"type\":{\"k\":8,\"name\":\"Iterable\",\"args\":[{\"k\":0},{\"k\":0}]}}],\"type\":{\"k\":0}}}],\"type\":{\"k\":0}}],\"doc\":[\"`Immutable.fromJS()` deeply converts plain JS objects and arrays to\\nImmutable Maps and Lists.\\n\\nIf a `reviver` is optionally provided, it will be called with every\\ncollection as a Seq (beginning with the most nested collections\\nand proceeding to the top-level collection itself), along with the key\\nrefering to each collection and the parent JS object provided as `this`.\\nFor the top level, object, the key will be \\\"\\\". This `reviver` is expected\\nto return a new Immutable Iterable, allowing for custom convertions from\\ndeep JS objects.\\n\\nThis example converts JSON to List and OrderedMap:\\n\\n    Immutable.fromJS({a: {b: [10, 20, 30]}, c: 40}, function (key, value) {\\n      var isIndexed = Immutable.Iterable.isIndexed(value);\\n      return isIndexed ? value.toList() : value.toOrderedMap();\\n    });\\n\\n    // true, \\\"b\\\", {b: [10, 20, 30]}\\n    // false, \\\"a\\\", {a: {b: [10, 20, 30]}, c: 40}\\n    // false, \\\"\\\", {\\\"\\\": {a: {b: [10, 20, 30]}, c: 40}}\\n\\nIf `reviver` is not provided, the default behavior will convert Arrays into\\nLists and Objects into Maps.\\n\\n`reviver` acts similarly to [`JSON.parse`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse#Example.3A_Using_the_reviver_parameter).\\n\\n`Immutable.fromJS` is conservative in it's conversion. It will only convert\\narrays which pass `Array.isArray` to Lists, and only raw objects (no custom\\nprototype) to Map.\"]}},\"Iterable\":{\"module\":{\"line\":90,\"doc\":[\"Iterable\\n--------\\n\\nThe `Iterable` is a set of (key, value) entries which can be iterated, and\\nis the base class for all collections in `immutable`, allowing them to\\nmake use of all the Iterable methods (such as `map` and `filter`).\\n\\nNote: An iterable is always iterated in the same order, however that order\\nmay not always be well defined, as is the case for the `Map` and `Set`.\"],\"types\":{\"isIterable\":{\"call\":{\"impl\":[{\"line\":91,\"params\":[{\"name\":\"maybeIterable\",\"type\":{\"k\":0}}],\"type\":{\"k\":1}}],\"doc\":[\"True if `maybeIterable` is an Iterable, or any of its subclasses.\"]}},\"isKeyed\":{\"call\":{\"impl\":[{\"line\":95,\"params\":[{\"name\":\"maybeKeyed\",\"type\":{\"k\":0}}],\"type\":{\"k\":1}}],\"doc\":[\"True if `maybeKeyed` is a KeyedIterable, or any of its subclasses.\"]}},\"isIndexed\":{\"call\":{\"impl\":[{\"line\":100,\"params\":[{\"name\":\"maybeIndexed\",\"type\":{\"k\":0}}],\"type\":{\"k\":1}}],\"doc\":[\"True if `maybeIndexed` is a IndexedIterable, or any of its subclasses.\"]}},\"isAssociative\":{\"call\":{\"impl\":[{\"line\":105,\"params\":[{\"name\":\"maybeAssociative\",\"type\":{\"k\":0}}],\"type\":{\"k\":1}}],\"doc\":[\"True if `maybeAssociative` is either a keyed or indexed Iterable.\"]}},\"isOrdered\":{\"call\":{\"impl\":[{\"line\":110,\"params\":[{\"name\":\"maybeOrdered\",\"type\":{\"k\":0}}],\"type\":{\"k\":1}}],\"doc\":[\"True if `maybeOrdered` is an Iterable where iteration order is well\\ndefined. True for IndexedIterable as well as OrderedMap and OrderedSet.\"]}}}},\"call\":{\"impl\":[{\"line\":117,\"typeParams\":[\"K\",\"V\"],\"params\":[{\"name\":\"iterable\",\"type\":{\"k\":8,\"name\":\"Iterable\",\"args\":[{\"k\":7,\"param\":\"K\"},{\"k\":7,\"param\":\"V\"}]}}],\"type\":{\"k\":8,\"name\":\"Iterable\",\"args\":[{\"k\":7,\"param\":\"K\"},{\"k\":7,\"param\":\"V\"}]}},{\"line\":133,\"typeParams\":[\"T\"],\"params\":[{\"name\":\"array\",\"type\":{\"k\":8,\"name\":\"Array\",\"args\":[{\"k\":7,\"param\":\"T\"}]}}],\"type\":{\"k\":8,\"name\":\"IndexedIterable\",\"args\":[{\"k\":7,\"param\":\"T\"}]}},{\"line\":134,\"typeParams\":[\"V\"],\"params\":[{\"name\":\"obj\",\"type\":{\"k\":4,\"members\":[{\"index\":true,\"params\":[{\"name\":\"key\",\"type\":{\"k\":3}}],\"type\":{\"k\":7,\"param\":\"V\"}}]}}],\"type\":{\"k\":8,\"name\":\"KeyedIterable\",\"args\":[{\"k\":3},{\"k\":7,\"param\":\"V\"}]}},{\"line\":135,\"typeParams\":[\"T\"],\"params\":[{\"name\":\"iterator\",\"type\":{\"k\":8,\"name\":\"Iterator\",\"args\":[{\"k\":7,\"param\":\"T\"}]}}],\"type\":{\"k\":8,\"name\":\"IndexedIterable\",\"args\":[{\"k\":7,\"param\":\"T\"}]}},{\"line\":136,\"typeParams\":[\"T\"],\"params\":[{\"name\":\"iterable\",\"type\":{\"k\":7,\"param\":\"Object\"}}],\"type\":{\"k\":8,\"name\":\"IndexedIterable\",\"args\":[{\"k\":7,\"param\":\"T\"}]}},{\"line\":137,\"typeParams\":[\"V\"],\"params\":[{\"name\":\"value\",\"type\":{\"k\":7,\"param\":\"V\"}}],\"type\":{\"k\":8,\"name\":\"IndexedIterable\",\"args\":[{\"k\":7,\"param\":\"V\"}]}}],\"doc\":[\"`Immutable.Iterable()` returns a particular kind of Iterable based\\non the input.\\n\\n  * If an `Iterable`, that same `Iterable`.\\n  * If an Array-like, an `IndexedIterable`.\\n  * If an Object with an Iterator, an `IndexedIterable`.\\n  * If an Iterator, an `IndexedIterable`.\\n  * If an Object, a `KeyedIterable`.\\n\\nThis methods forces the conversion of Objects and Strings to Iterables.\\nIf you want to ensure that a Iterable of one item is returned, use\\n`Seq.of`.\"]},\"interface\":{\"line\":138,\"typeParams\":[\"K\",\"V\"],\"groups\":[{\"title\":\"### Conversion to other types\",\"methods\":{\"toArray\":{\"impl\":{\"line\":141,\"type\":{\"k\":8,\"name\":\"Array\",\"args\":[{\"k\":7,\"param\":\"V\"}]}},\"doc\":[\"Converts this iterable to an Array, discarding keys.\"]},\"toIndexedSeq\":{\"impl\":{\"line\":148,\"type\":{\"k\":8,\"name\":\"IndexedSeq\",\"args\":[{\"k\":7,\"param\":\"V\"}]}},\"doc\":[\"Returns a Seq of the values of this Iterable, discarding keys.\"]},\"toJS\":{\"impl\":{\"line\":153,\"type\":{\"k\":0}},\"doc\":[\"Deeply converts this Iterable to equivalent JS.\\n\\nIndexedIterables, and SetIterables become Arrays, while\\nKeyedIterables become Objects.\"]},\"toKeyedSeq\":{\"impl\":{\"line\":161,\"type\":{\"k\":8,\"name\":\"KeyedSeq\",\"args\":[{\"k\":7,\"param\":\"K\"},{\"k\":7,\"param\":\"V\"}]}},\"doc\":[\"Converts this Iterable into an identical Seq where indices are\\ntreated as keys. This is useful if you want to operate on an\\nIndexedIterable and preserve the [index, value] pairs.\\n\\nThe returned Seq will have identical iteration order as\\nthis Iterable.\\n\\nExample:\\n\\n    var indexedSeq = Immutable.Seq.of('A', 'B', 'C');\\n    indexedSeq.filter(v => v === 'B').toString() // Seq [ 'B' ]\\n    var keyedSeq = indexedSeq.toKeyedSeq();\\n    keyedSeq.filter(v => v === 'B').toString() // Seq { 1: 'B' }\\n\"]},\"toMap\":{\"impl\":{\"line\":179,\"type\":{\"k\":8,\"name\":\"Map\",\"args\":[{\"k\":7,\"param\":\"K\"},{\"k\":7,\"param\":\"V\"}]}},\"doc\":[\"Converts this Iterable to a Map, Throws if keys are not hashable.\\n\\nNote: This is equivalent to `Map(this.toKeyedSeq())`, but provided\\nfor convenience and to allow for chained expressions.\"]},\"toObject\":{\"impl\":{\"line\":187,\"type\":{\"k\":4,\"members\":[{\"index\":true,\"params\":[{\"name\":\"key\",\"type\":{\"k\":3}}],\"type\":{\"k\":7,\"param\":\"V\"}}]}},\"doc\":[\"Converts this Iterable to an Object. Throws if keys are not strings.\"]},\"toOrderedMap\":{\"impl\":{\"line\":192,\"type\":{\"k\":8,\"name\":\"Map\",\"args\":[{\"k\":7,\"param\":\"K\"},{\"k\":7,\"param\":\"V\"}]}},\"doc\":[\"Converts this Iterable to a Map, maintaining the order of iteration.\\n\\nNote: This is equivalent to `OrderedMap(this.toKeyedSeq())`, but\\nprovided for convenience and to allow for chained expressions.\"]},\"toOrderedSet\":{\"impl\":{\"line\":200,\"type\":{\"k\":8,\"name\":\"Set\",\"args\":[{\"k\":7,\"param\":\"V\"}]}},\"doc\":[\"Converts this Iterable to a Set, maintaining the order of iteration and\\ndiscarding keys.\\n\\nNote: This is equivalent to `OrderedSet(this.valueSeq())`, but provided\\nfor convenience and to allow for chained expressions.\"]},\"toSet\":{\"impl\":{\"line\":209,\"type\":{\"k\":8,\"name\":\"Set\",\"args\":[{\"k\":7,\"param\":\"V\"}]}},\"doc\":[\"Converts this Iterable to a Set, discarding keys. Throws if values\\nare not hashable.\\n\\nNote: This is equivalent to `Set(this)`, but provided to allow for\\nchained expressions.\"]},\"toSetSeq\":{\"impl\":{\"line\":218,\"type\":{\"k\":8,\"name\":\"SetSeq\",\"args\":[{\"k\":7,\"param\":\"V\"}]}},\"doc\":[\"Converts this Iterable to a Seq of the values of this Iterable,\\ndiscarding keys, and behaving as a set.\"]},\"toSeq\":{\"impl\":{\"line\":224,\"type\":{\"k\":8,\"name\":\"Seq\",\"args\":[{\"k\":7,\"param\":\"K\"},{\"k\":7,\"param\":\"V\"}]}},\"doc\":[\"Converts this Iterable to a Seq of the same kind (indexed,\\nkeyed, or set).\"]},\"toStack\":{\"impl\":{\"line\":230,\"type\":{\"k\":8,\"name\":\"Stack\",\"args\":[{\"k\":7,\"param\":\"V\"}]}},\"doc\":[\"Converts this Iterable to a Stack, discarding keys. Throws if values\\nare not hashable.\\n\\nNote: This is equivalent to `Stack(this)`, but provided to allow for\\nchained expressions.\"]},\"toList\":{\"impl\":{\"line\":239,\"type\":{\"k\":8,\"name\":\"List\",\"args\":[{\"k\":7,\"param\":\"V\"}]}},\"doc\":[\"Converts this Iterable to a List, discarding keys.\\n\\nNote: This is equivalent to `List(this)`, but provided to allow\\nfor chained expressions.\"]}}},{\"title\":\"### Common JavaScript methods and properties\",\"methods\":{}},{\"title\":\"### ES6 Collection methods (ES6 Array and Map)\",\"methods\":{\"concat\":{\"impl\":{\"line\":255,\"params\":[{\"name\":\"valuesOrIterables\",\"varArgs\":true,\"type\":{\"k\":5,\"type\":{\"k\":0}}}],\"type\":{\"k\":8,\"name\":\"Iterable\",\"args\":[{\"k\":7,\"param\":\"K\"},{\"k\":7,\"param\":\"V\"}]}},\"doc\":[\"Returns a new Iterable of the same type with other values and\\niterable-like concatenated to this one.\\n\\nFor Seqs, all entries will be present in\\nthe resulting iterable, even if they have the same key.\"]},\"contains\":{\"impl\":{\"line\":267,\"params\":[{\"name\":\"value\",\"type\":{\"k\":7,\"param\":\"V\"}}],\"type\":{\"k\":1}},\"doc\":[\"True if a value exists within this Iterable.\"]},\"entries\":{\"impl\":{\"line\":272,\"type\":{\"k\":8,\"name\":\"Iterator\",\"args\":[{\"k\":8,\"name\":\"Array\",\"args\":[{\"k\":0}]}]}},\"doc\":[\"An iterator of this Map's entries as [key, value] tuples.\"]},\"every\":{\"impl\":{\"line\":277,\"params\":[{\"name\":\"predicate\",\"type\":{\"k\":6,\"params\":[{\"name\":\"value\",\"optional\":true,\"type\":{\"k\":7,\"param\":\"V\"}},{\"name\":\"key\",\"optional\":true,\"type\":{\"k\":7,\"param\":\"K\"}},{\"name\":\"iter\",\"optional\":true,\"type\":{\"k\":8,\"name\":\"Iterable\",\"args\":[{\"k\":7,\"param\":\"K\"},{\"k\":7,\"param\":\"V\"}]}}],\"type\":{\"k\":1}}},{\"name\":\"context\",\"optional\":true,\"type\":{\"k\":0}}],\"type\":{\"k\":1}},\"doc\":[\"True if `predicate` returns true for all entries in the Iterable.\"]},\"filter\":{\"impl\":{\"line\":285,\"params\":[{\"name\":\"predicate\",\"type\":{\"k\":6,\"params\":[{\"name\":\"value\",\"optional\":true,\"type\":{\"k\":7,\"param\":\"V\"}},{\"name\":\"key\",\"optional\":true,\"type\":{\"k\":7,\"param\":\"K\"}},{\"name\":\"iter\",\"optional\":true,\"type\":{\"k\":8,\"name\":\"Iterable\",\"args\":[{\"k\":7,\"param\":\"K\"},{\"k\":7,\"param\":\"V\"}]}}],\"type\":{\"k\":1}}},{\"name\":\"context\",\"optional\":true,\"type\":{\"k\":0}}],\"type\":{\"k\":8,\"name\":\"Iterable\",\"args\":[{\"k\":7,\"param\":\"K\"},{\"k\":7,\"param\":\"V\"}]}},\"doc\":[\"Returns a new Iterable of the same type with only the entries for which\\nthe `predicate` function returns true.\\n\\n    Seq({a:1,b:2,c:3,d:4}).filter(x => x % 2 === 0)\\n    // Seq { b: 2, d: 4 }\\n\"]},\"find\":{\"impl\":{\"line\":298,\"params\":[{\"name\":\"predicate\",\"type\":{\"k\":6,\"params\":[{\"name\":\"value\",\"optional\":true,\"type\":{\"k\":7,\"param\":\"V\"}},{\"name\":\"key\",\"optional\":true,\"type\":{\"k\":7,\"param\":\"K\"}},{\"name\":\"iter\",\"optional\":true,\"type\":{\"k\":8,\"name\":\"Iterable\",\"args\":[{\"k\":7,\"param\":\"K\"},{\"k\":7,\"param\":\"V\"}]}}],\"type\":{\"k\":1}}},{\"name\":\"context\",\"optional\":true,\"type\":{\"k\":0}},{\"name\":\"notSetValue\",\"optional\":true,\"type\":{\"k\":7,\"param\":\"V\"}}],\"type\":{\"k\":7,\"param\":\"V\"}},\"doc\":[\"Returns the value for which the `predicate` returns true.\"]},\"forEach\":{\"impl\":{\"line\":307,\"params\":[{\"name\":\"sideEffect\",\"type\":{\"k\":6,\"params\":[{\"name\":\"value\",\"optional\":true,\"type\":{\"k\":7,\"param\":\"V\"}},{\"name\":\"key\",\"optional\":true,\"type\":{\"k\":7,\"param\":\"K\"}},{\"name\":\"iter\",\"optional\":true,\"type\":{\"k\":8,\"name\":\"Iterable\",\"args\":[{\"k\":7,\"param\":\"K\"},{\"k\":7,\"param\":\"V\"}]}}],\"type\":{\"k\":0}}},{\"name\":\"context\",\"optional\":true,\"type\":{\"k\":0}}],\"type\":{\"k\":2}},\"doc\":[\"The `sideEffect` is executed for every entry in the Iterable.\\n\\nUnlike `Array.prototype.forEach`, if any call of `sideEffect` returns\\n`false`, the iteration will stop. Returns the number of entries iterated\\n(including the last iteration which returned false).\"]},\"join\":{\"impl\":{\"line\":319,\"params\":[{\"name\":\"separator\",\"optional\":true,\"type\":{\"k\":3}}],\"type\":{\"k\":3}},\"doc\":[\"Joins values together as a string, inserting a separator between each.\\nThe default separator is \\\",\\\".\"]},\"keys\":{\"impl\":{\"line\":325,\"type\":{\"k\":8,\"name\":\"Iterator\",\"args\":[{\"k\":7,\"param\":\"K\"}]}},\"doc\":[\"An iterator of this Iterable's keys.\"]},\"map\":{\"impl\":{\"line\":330,\"typeParams\":[\"M\"],\"params\":[{\"name\":\"mapper\",\"type\":{\"k\":6,\"params\":[{\"name\":\"value\",\"optional\":true,\"type\":{\"k\":7,\"param\":\"V\"}},{\"name\":\"key\",\"optional\":true,\"type\":{\"k\":7,\"param\":\"K\"}},{\"name\":\"iter\",\"optional\":true,\"type\":{\"k\":8,\"name\":\"Iterable\",\"args\":[{\"k\":7,\"param\":\"K\"},{\"k\":7,\"param\":\"V\"}]}}],\"type\":{\"k\":7,\"param\":\"M\"}}},{\"name\":\"context\",\"optional\":true,\"type\":{\"k\":0}}],\"type\":{\"k\":8,\"name\":\"Iterable\",\"args\":[{\"k\":7,\"param\":\"K\"},{\"k\":7,\"param\":\"M\"}]}},\"doc\":[\"Returns a new Iterable of the same type with values passed through a\\n`mapper` function.\\n\\n    Seq({ a: 1, b: 2 }).map(x => 10 * x)\\n    // Seq { a: 10, b: 20 }\\n\"]},\"reduce\":{\"impl\":{\"line\":343,\"typeParams\":[\"R\"],\"params\":[{\"name\":\"reducer\",\"type\":{\"k\":6,\"params\":[{\"name\":\"reduction\",\"optional\":true,\"type\":{\"k\":7,\"param\":\"R\"}},{\"name\":\"value\",\"optional\":true,\"type\":{\"k\":7,\"param\":\"V\"}},{\"name\":\"key\",\"optional\":true,\"type\":{\"k\":7,\"param\":\"K\"}},{\"name\":\"iter\",\"optional\":true,\"type\":{\"k\":8,\"name\":\"Iterable\",\"args\":[{\"k\":7,\"param\":\"K\"},{\"k\":7,\"param\":\"V\"}]}}],\"type\":{\"k\":7,\"param\":\"R\"}}},{\"name\":\"initialReduction\",\"optional\":true,\"type\":{\"k\":7,\"param\":\"R\"}},{\"name\":\"context\",\"optional\":true,\"type\":{\"k\":0}}],\"type\":{\"k\":7,\"param\":\"R\"}},\"doc\":[\"Reduces the Iterable to a value by calling the `reducer` for every entry\\nin the Iterable and passing along the reduced value.\\n\\nIf `initialReduction` is not provided, or is null, the first item in the\\nIterable will be used.\\n\\n@see `Array.prototype.reduce`.\"]},\"reduceRight\":{\"impl\":{\"line\":358,\"typeParams\":[\"R\"],\"params\":[{\"name\":\"reducer\",\"type\":{\"k\":6,\"params\":[{\"name\":\"reduction\",\"optional\":true,\"type\":{\"k\":7,\"param\":\"R\"}},{\"name\":\"value\",\"optional\":true,\"type\":{\"k\":7,\"param\":\"V\"}},{\"name\":\"key\",\"optional\":true,\"type\":{\"k\":7,\"param\":\"K\"}},{\"name\":\"iter\",\"optional\":true,\"type\":{\"k\":8,\"name\":\"Iterable\",\"args\":[{\"k\":7,\"param\":\"K\"},{\"k\":7,\"param\":\"V\"}]}}],\"type\":{\"k\":7,\"param\":\"R\"}}},{\"name\":\"initialReduction\",\"optional\":true,\"type\":{\"k\":7,\"param\":\"R\"}},{\"name\":\"context\",\"optional\":true,\"type\":{\"k\":0}}],\"type\":{\"k\":7,\"param\":\"R\"}},\"doc\":[\"Reduces the Iterable in reverse (from the right side).\\n\\nNote: Similar to this.reverse().reduce(), and provided for parity\\nwith `Array#reduceRight`.\"]},\"reverse\":{\"impl\":{\"line\":370,\"type\":{\"k\":8,\"name\":\"Iterable\",\"args\":[{\"k\":7,\"param\":\"K\"},{\"k\":7,\"param\":\"V\"}]}},\"doc\":[\"Returns a new Iterable of the same type in reverse order.\"]},\"slice\":{\"impl\":{\"line\":375,\"params\":[{\"name\":\"begin\",\"optional\":true,\"type\":{\"k\":2}},{\"name\":\"end\",\"optional\":true,\"type\":{\"k\":2}}],\"type\":{\"k\":8,\"name\":\"Iterable\",\"args\":[{\"k\":7,\"param\":\"K\"},{\"k\":7,\"param\":\"V\"}]}},\"doc\":[\"Returns a new Iterable of the same type representing a portion of this\\nIterable from start up to but not including end.\\n\\nIf begin is negative, it is offset from the end of the Iterable. e.g.\\n`slice(-2)` returns a Iterable of the last two entries. If it is not\\nprovided the new Iterable will begin at the beginning of this Iterable.\\n\\nIf end is negative, it is offset from the end of the Iterable. e.g.\\n`slice(0, -1)` returns an Iterable of everything but the last entry. If\\nit is not provided, the new Iterable will continue through the end of\\nthis Iterable.\\n\\nIf the requested slice is equivalent to the current Iterable, then it\\nwill return itself.\"]},\"some\":{\"impl\":{\"line\":393,\"params\":[{\"name\":\"predicate\",\"type\":{\"k\":6,\"params\":[{\"name\":\"value\",\"optional\":true,\"type\":{\"k\":7,\"param\":\"V\"}},{\"name\":\"key\",\"optional\":true,\"type\":{\"k\":7,\"param\":\"K\"}},{\"name\":\"iter\",\"optional\":true,\"type\":{\"k\":8,\"name\":\"Iterable\",\"args\":[{\"k\":7,\"param\":\"K\"},{\"k\":7,\"param\":\"V\"}]}}],\"type\":{\"k\":1}}},{\"name\":\"context\",\"optional\":true,\"type\":{\"k\":0}}],\"type\":{\"k\":1}},\"doc\":[\"True if `predicate` returns true for any entry in the Iterable.\"]},\"sort\":{\"impl\":{\"line\":401,\"params\":[{\"name\":\"comparator\",\"optional\":true,\"type\":{\"k\":6,\"params\":[{\"name\":\"valueA\",\"type\":{\"k\":7,\"param\":\"V\"}},{\"name\":\"valueB\",\"type\":{\"k\":7,\"param\":\"V\"}}],\"type\":{\"k\":2}}}],\"type\":{\"k\":8,\"name\":\"Iterable\",\"args\":[{\"k\":7,\"param\":\"K\"},{\"k\":7,\"param\":\"V\"}]}},\"doc\":[\"Returns a new Iterable of the same type which contains the same entries,\\nstably sorted by using a `comparator`.\\n\\nIf a `comparator` is not provided, a default comparator uses `<` and `>`.\\n\\n`comparator(valueA, valueB)`:\\n\\n  * Returns `0` if the elements should not be swapped.\\n  * Returns `-1` (or any negative number) if `valueA` comes before `valueB`\\n  * Returns `1` (or any positive number) if `valueA` comes after `valueB`\\n  * Is pure, i.e. it must always return the same value for the same pair\\n    of values.\\n\\nWhen sorting collections which have no defined order, their ordered\\nequivalents will be returned. e.g. `map.sort()` returns OrderedMap.\"]},\"values\":{\"impl\":{\"line\":420,\"type\":{\"k\":8,\"name\":\"Iterator\",\"args\":[{\"k\":7,\"param\":\"V\"}]}},\"doc\":[\"An iterator of this Map's values.\"]}}},{\"title\":\"### More collection methods\",\"methods\":{\"butLast\":{\"impl\":{\"line\":425,\"type\":{\"k\":8,\"name\":\"Iterable\",\"args\":[{\"k\":7,\"param\":\"K\"},{\"k\":7,\"param\":\"V\"}]}},\"doc\":[\"Returns a new Iterable of the same type containing all entries except\\nthe last.\"]},\"count\":{\"impl\":{\"line\":444,\"params\":[{\"name\":\"predicate\",\"type\":{\"k\":6,\"params\":[{\"name\":\"value\",\"optional\":true,\"type\":{\"k\":7,\"param\":\"V\"}},{\"name\":\"key\",\"optional\":true,\"type\":{\"k\":7,\"param\":\"K\"}},{\"name\":\"iter\",\"optional\":true,\"type\":{\"k\":8,\"name\":\"Iterable\",\"args\":[{\"k\":7,\"param\":\"K\"},{\"k\":7,\"param\":\"V\"}]}}],\"type\":{\"k\":1}}},{\"name\":\"context\",\"optional\":true,\"type\":{\"k\":0}}],\"type\":{\"k\":2}},\"doc\":[\"Regardless of if this Iterable can describe its size (some Seqs\\ncannot), this method will always return the correct size. E.g. it\\nevaluates a Seq if necessary.\\n\\nIf `predicate` is provided, then this returns the count of entries in the\\nIterable for which the `predicate` returns true.\"]},\"countBy\":{\"impl\":{\"line\":448,\"typeParams\":[\"G\"],\"params\":[{\"name\":\"grouper\",\"type\":{\"k\":6,\"params\":[{\"name\":\"value\",\"optional\":true,\"type\":{\"k\":7,\"param\":\"V\"}},{\"name\":\"key\",\"optional\":true,\"type\":{\"k\":7,\"param\":\"K\"}},{\"name\":\"iter\",\"optional\":true,\"type\":{\"k\":8,\"name\":\"Iterable\",\"args\":[{\"k\":7,\"param\":\"K\"},{\"k\":7,\"param\":\"V\"}]}}],\"type\":{\"k\":7,\"param\":\"G\"}}},{\"name\":\"context\",\"optional\":true,\"type\":{\"k\":0}}],\"type\":{\"k\":8,\"name\":\"Map\",\"args\":[{\"k\":7,\"param\":\"G\"},{\"k\":2}]}},\"doc\":[\"Returns a `KeyedSeq` of counts, grouped by the return value of\\nthe `grouper` function.\\n\\nNote: This is not a lazy operation.\"]},\"equals\":{\"impl\":{\"line\":459,\"params\":[{\"name\":\"other\",\"type\":{\"k\":8,\"name\":\"Iterable\",\"args\":[{\"k\":7,\"param\":\"K\"},{\"k\":7,\"param\":\"V\"}]}}],\"type\":{\"k\":1}},\"doc\":[\"True if this and the other Iterable have value equality, as defined\\nby `Immutable.is()`.\\n\\nNote: This is equivalent to `Immutable.is(this, other)`, but provided to\\nallow for chained expressions.\"]},\"entrySeq\":{\"impl\":{\"line\":468,\"type\":{\"k\":8,\"name\":\"IndexedSeq\",\"args\":[{\"k\":8,\"name\":\"Array\",\"args\":[{\"k\":0}]}]}},\"doc\":[\"Returns a new IndexedSeq of [key, value] tuples.\"]},\"filterNot\":{\"impl\":{\"line\":473,\"params\":[{\"name\":\"predicate\",\"type\":{\"k\":6,\"params\":[{\"name\":\"value\",\"optional\":true,\"type\":{\"k\":7,\"param\":\"V\"}},{\"name\":\"key\",\"optional\":true,\"type\":{\"k\":7,\"param\":\"K\"}},{\"name\":\"iter\",\"optional\":true,\"type\":{\"k\":8,\"name\":\"Iterable\",\"args\":[{\"k\":7,\"param\":\"K\"},{\"k\":7,\"param\":\"V\"}]}}],\"type\":{\"k\":1}}},{\"name\":\"context\",\"optional\":true,\"type\":{\"k\":0}}],\"type\":{\"k\":8,\"name\":\"Iterable\",\"args\":[{\"k\":7,\"param\":\"K\"},{\"k\":7,\"param\":\"V\"}]}},\"doc\":[\"Returns a new Iterable of the same type with only the entries for which\\nthe `predicate` function returns false.\\n\\n    Seq({a:1,b:2,c:3,d:4}).filterNot(x => x % 2 === 0)\\n    // Seq { a: 1, c: 3 }\\n\"]},\"findLast\":{\"impl\":{\"line\":486,\"params\":[{\"name\":\"predicate\",\"type\":{\"k\":6,\"params\":[{\"name\":\"value\",\"optional\":true,\"type\":{\"k\":7,\"param\":\"V\"}},{\"name\":\"key\",\"optional\":true,\"type\":{\"k\":7,\"param\":\"K\"}},{\"name\":\"iter\",\"optional\":true,\"type\":{\"k\":8,\"name\":\"Iterable\",\"args\":[{\"k\":7,\"param\":\"K\"},{\"k\":7,\"param\":\"V\"}]}}],\"type\":{\"k\":1}}},{\"name\":\"context\",\"optional\":true,\"type\":{\"k\":0}},{\"name\":\"notSetValue\",\"optional\":true,\"type\":{\"k\":7,\"param\":\"V\"}}],\"type\":{\"k\":7,\"param\":\"V\"}},\"doc\":[\"Returns the last value for which the `predicate` returns true.\\n\\nNote: `predicate` will be called for each entry in reverse.\"]},\"first\":{\"impl\":{\"line\":497,\"type\":{\"k\":7,\"param\":\"V\"}},\"doc\":[\"The first value in the Iterable.\"]},\"flatMap\":{\"impl\":{\"line\":510,\"typeParams\":[\"MK\",\"MV\"],\"params\":[{\"name\":\"mapper\",\"type\":{\"k\":6,\"params\":[{\"name\":\"value\",\"optional\":true,\"type\":{\"k\":7,\"param\":\"V\"}},{\"name\":\"key\",\"optional\":true,\"type\":{\"k\":7,\"param\":\"K\"}},{\"name\":\"iter\",\"optional\":true,\"type\":{\"k\":8,\"name\":\"Iterable\",\"args\":[{\"k\":7,\"param\":\"K\"},{\"k\":7,\"param\":\"V\"}]}}],\"type\":{\"k\":0}}},{\"name\":\"context\",\"optional\":true,\"type\":{\"k\":0}}],\"type\":{\"k\":8,\"name\":\"Iterable\",\"args\":[{\"k\":7,\"param\":\"MK\"},{\"k\":7,\"param\":\"MV\"}]}},\"doc\":[\"Flat-maps the Iterable, returning an Iterable of the same type.\"]},\"flatten\":{\"impl\":{\"line\":529,\"params\":[{\"name\":\"shallow\",\"optional\":true,\"type\":{\"k\":1}}],\"type\":{\"k\":8,\"name\":\"Iterable\",\"args\":[{\"k\":0},{\"k\":0}]}},\"doc\":[\"Flattens nested Iterables.\\n\\nWill deeply flatten the Iterable by default, returning an Iterable of the\\nsame type, but a `depth` can be provided in the form of a number or\\nboolean (where true means to shallowly flatten one level). A depth of 0\\n(or shallow: false) will deeply flatten.\\n\\nFlattens only others Iterable, not Arrays or Objects.\\n\\nNote: `flatten(true)` operates on Iterable<any, Iterable<K, V>> and\\nreturns Iterable<K, V>\"]},\"get\":{\"impl\":{\"line\":530,\"params\":[{\"name\":\"key\",\"type\":{\"k\":7,\"param\":\"K\"}},{\"name\":\"notSetValue\",\"optional\":true,\"type\":{\"k\":7,\"param\":\"V\"}}],\"type\":{\"k\":7,\"param\":\"V\"}},\"doc\":[\"Returns the value associated with the provided key, or notSetValue if\\nthe Iterable does not contain this key.\\n\\nNote: it is possible a key may be associated with an `undefined` value, so\\nif `notSetValue` is not provided and this method returns `undefined`,\\nthat does not guarantee the key was not found.\"]},\"getIn\":{\"impl\":{\"line\":545,\"params\":[{\"name\":\"searchKeyPath\",\"type\":{\"k\":8,\"name\":\"Iterable\",\"args\":[{\"k\":0},{\"k\":0}]}},{\"name\":\"notSetValue\",\"optional\":true,\"type\":{\"k\":0}}],\"type\":{\"k\":0}},\"doc\":[\"Returns the value found by following a key path through nested Iterables.\"]},\"groupBy\":{\"impl\":{\"line\":546,\"typeParams\":[\"G\"],\"params\":[{\"name\":\"grouper\",\"type\":{\"k\":6,\"params\":[{\"name\":\"value\",\"optional\":true,\"type\":{\"k\":7,\"param\":\"V\"}},{\"name\":\"key\",\"optional\":true,\"type\":{\"k\":7,\"param\":\"K\"}},{\"name\":\"iter\",\"optional\":true,\"type\":{\"k\":8,\"name\":\"Iterable\",\"args\":[{\"k\":7,\"param\":\"K\"},{\"k\":7,\"param\":\"V\"}]}}],\"type\":{\"k\":7,\"param\":\"G\"}}},{\"name\":\"context\",\"optional\":true,\"type\":{\"k\":0}}],\"type\":{\"k\":8,\"name\":\"KeyedSeq\",\"args\":[{\"k\":7,\"param\":\"G\"},{\"k\":8,\"name\":\"Iterable\",\"args\":[{\"k\":7,\"param\":\"K\"},{\"k\":7,\"param\":\"V\"}]}]}},\"doc\":[\"Returns a `KeyedIterable` of `KeyedIterables`, grouped by the return\\nvalue of the `grouper` function.\\n\\nNote: This is not a lazy operation.\"]},\"has\":{\"impl\":{\"line\":557,\"params\":[{\"name\":\"key\",\"type\":{\"k\":7,\"param\":\"K\"}}],\"type\":{\"k\":1}},\"doc\":[\"True if a key exists within this Iterable.\"]},\"isSubset\":{\"impl\":{\"line\":567,\"params\":[{\"name\":\"iter\",\"type\":{\"k\":8,\"name\":\"Array\",\"args\":[{\"k\":7,\"param\":\"V\"}]}}],\"type\":{\"k\":1}},\"doc\":[\"True if `iter` contains every value in this Iterable.\"]},\"isSuperset\":{\"impl\":{\"line\":573,\"params\":[{\"name\":\"iter\",\"type\":{\"k\":8,\"name\":\"Array\",\"args\":[{\"k\":7,\"param\":\"V\"}]}}],\"type\":{\"k\":1}},\"doc\":[\"True if this Iterable contains every value in `iter`.\"]},\"keySeq\":{\"impl\":{\"line\":574,\"type\":{\"k\":8,\"name\":\"IndexedSeq\",\"args\":[{\"k\":7,\"param\":\"K\"}]}},\"doc\":[\"Returns a new IndexedSeq of the keys of this Iterable,\\ndiscarding values.\"]},\"last\":{\"impl\":{\"line\":580,\"type\":{\"k\":7,\"param\":\"V\"}},\"doc\":[\"The last value in the Iterable.\"]},\"max\":{\"impl\":{\"line\":585,\"params\":[{\"name\":\"comparator\",\"optional\":true,\"type\":{\"k\":6,\"params\":[{\"name\":\"valueA\",\"type\":{\"k\":7,\"param\":\"V\"}},{\"name\":\"valueB\",\"type\":{\"k\":7,\"param\":\"V\"}}],\"type\":{\"k\":2}}}],\"type\":{\"k\":7,\"param\":\"V\"}},\"doc\":[\"Returns the maximum value in this collection. If any values are\\ncomparatively equivalent, the first one found will be returned.\\n\\nThe `comparator` is used in the same way as `Iterable#sort`. If it is not\\nprovided, the default comparator is `a > b`.\"]},\"maxBy\":{\"impl\":{\"line\":594,\"typeParams\":[\"C\"],\"params\":[{\"name\":\"comparatorValueMapper\",\"type\":{\"k\":6,\"params\":[{\"name\":\"value\",\"optional\":true,\"type\":{\"k\":7,\"param\":\"V\"}},{\"name\":\"key\",\"optional\":true,\"type\":{\"k\":7,\"param\":\"K\"}},{\"name\":\"iter\",\"optional\":true,\"type\":{\"k\":8,\"name\":\"Iterable\",\"args\":[{\"k\":7,\"param\":\"K\"},{\"k\":7,\"param\":\"V\"}]}}],\"type\":{\"k\":7,\"param\":\"C\"}}},{\"name\":\"comparator\",\"optional\":true,\"type\":{\"k\":6,\"params\":[{\"name\":\"valueA\",\"type\":{\"k\":7,\"param\":\"C\"}},{\"name\":\"valueB\",\"type\":{\"k\":7,\"param\":\"C\"}}],\"type\":{\"k\":2}}}],\"type\":{\"k\":7,\"param\":\"V\"}},\"doc\":[\"Like `max`, but also accepts a `comparatorValueMapper` which allows for\\ncomparing by more sophisticated means:\\n\\n    hitters.maxBy(hitter => hitter.avgHits);\\n\"]},\"min\":{\"impl\":{\"line\":606,\"params\":[{\"name\":\"comparator\",\"optional\":true,\"type\":{\"k\":6,\"params\":[{\"name\":\"valueA\",\"type\":{\"k\":7,\"param\":\"V\"}},{\"name\":\"valueB\",\"type\":{\"k\":7,\"param\":\"V\"}}],\"type\":{\"k\":2}}}],\"type\":{\"k\":7,\"param\":\"V\"}},\"doc\":[\"Returns the maximum value in this collection. If any values are\\ncomparatively equivalent, the first one found will be returned.\\n\\nThe `comparator` is used in the same way as `Iterable#sort`. If it is not\\nprovided, the default comparator is `a > b`.\"]},\"minBy\":{\"impl\":{\"line\":615,\"typeParams\":[\"C\"],\"params\":[{\"name\":\"comparatorValueMapper\",\"type\":{\"k\":6,\"params\":[{\"name\":\"value\",\"optional\":true,\"type\":{\"k\":7,\"param\":\"V\"}},{\"name\":\"key\",\"optional\":true,\"type\":{\"k\":7,\"param\":\"K\"}},{\"name\":\"iter\",\"optional\":true,\"type\":{\"k\":8,\"name\":\"Iterable\",\"args\":[{\"k\":7,\"param\":\"K\"},{\"k\":7,\"param\":\"V\"}]}}],\"type\":{\"k\":7,\"param\":\"C\"}}},{\"name\":\"comparator\",\"optional\":true,\"type\":{\"k\":6,\"params\":[{\"name\":\"valueA\",\"type\":{\"k\":7,\"param\":\"C\"}},{\"name\":\"valueB\",\"type\":{\"k\":7,\"param\":\"C\"}}],\"type\":{\"k\":2}}}],\"type\":{\"k\":7,\"param\":\"V\"}},\"doc\":[\"Like `min`, but also accepts a `comparatorValueMapper` which allows for\\ncomparing by more sophisticated means:\\n\\n    hitters.minBy(hitter => hitter.avgHits);\\n\"]},\"rest\":{\"impl\":{\"line\":627,\"type\":{\"k\":8,\"name\":\"Iterable\",\"args\":[{\"k\":7,\"param\":\"K\"},{\"k\":7,\"param\":\"V\"}]}},\"doc\":[\"Returns a new Iterable of the same type containing all entries except\\nthe first.\"]},\"skip\":{\"impl\":{\"line\":633,\"params\":[{\"name\":\"amount\",\"type\":{\"k\":2}}],\"type\":{\"k\":8,\"name\":\"Iterable\",\"args\":[{\"k\":7,\"param\":\"K\"},{\"k\":7,\"param\":\"V\"}]}},\"doc\":[\"Returns a new Iterable of the same type which excludes the first `amount`\\nentries from this Iterable.\"]},\"skipLast\":{\"impl\":{\"line\":639,\"params\":[{\"name\":\"amount\",\"type\":{\"k\":2}}],\"type\":{\"k\":8,\"name\":\"Iterable\",\"args\":[{\"k\":7,\"param\":\"K\"},{\"k\":7,\"param\":\"V\"}]}},\"doc\":[\"Returns a new Iterable of the same type which excludes the last `amount`\\nentries from this Iterable.\"]},\"skipWhile\":{\"impl\":{\"line\":645,\"params\":[{\"name\":\"predicate\",\"type\":{\"k\":6,\"params\":[{\"name\":\"value\",\"optional\":true,\"type\":{\"k\":7,\"param\":\"V\"}},{\"name\":\"key\",\"optional\":true,\"type\":{\"k\":7,\"param\":\"K\"}},{\"name\":\"iter\",\"optional\":true,\"type\":{\"k\":8,\"name\":\"Iterable\",\"args\":[{\"k\":7,\"param\":\"K\"},{\"k\":7,\"param\":\"V\"}]}}],\"type\":{\"k\":1}}},{\"name\":\"context\",\"optional\":true,\"type\":{\"k\":0}}],\"type\":{\"k\":8,\"name\":\"Iterable\",\"args\":[{\"k\":7,\"param\":\"K\"},{\"k\":7,\"param\":\"V\"}]}},\"doc\":[\"Returns a new Iterable of the same type which contains entries starting\\nfrom when `predicate` first returns false.\\n\\n    Seq.of('dog','frog','cat','hat','god')\\n      .skipWhile(x => x.match(/g/))\\n    // Seq [ 'cat', 'hat', 'god' ]\\n\"]},\"skipUntil\":{\"impl\":{\"line\":659,\"params\":[{\"name\":\"predicate\",\"type\":{\"k\":6,\"params\":[{\"name\":\"value\",\"optional\":true,\"type\":{\"k\":7,\"param\":\"V\"}},{\"name\":\"key\",\"optional\":true,\"type\":{\"k\":7,\"param\":\"K\"}},{\"name\":\"iter\",\"optional\":true,\"type\":{\"k\":8,\"name\":\"Iterable\",\"args\":[{\"k\":7,\"param\":\"K\"},{\"k\":7,\"param\":\"V\"}]}}],\"type\":{\"k\":1}}},{\"name\":\"context\",\"optional\":true,\"type\":{\"k\":0}}],\"type\":{\"k\":8,\"name\":\"Iterable\",\"args\":[{\"k\":7,\"param\":\"K\"},{\"k\":7,\"param\":\"V\"}]}},\"doc\":[\"Returns a new Iterable of the same type which contains entries starting\\nfrom when `predicate` first returns true.\\n\\n    Seq.of('dog','frog','cat','hat','god')\\n      .skipUntil(x => x.match(/hat/))\\n    // Seq [ 'hat', 'god' ]\\n\"]},\"sortBy\":{\"impl\":{\"line\":673,\"typeParams\":[\"C\"],\"params\":[{\"name\":\"comparatorValueMapper\",\"type\":{\"k\":6,\"params\":[{\"name\":\"value\",\"optional\":true,\"type\":{\"k\":7,\"param\":\"V\"}},{\"name\":\"key\",\"optional\":true,\"type\":{\"k\":7,\"param\":\"K\"}},{\"name\":\"iter\",\"optional\":true,\"type\":{\"k\":8,\"name\":\"Iterable\",\"args\":[{\"k\":7,\"param\":\"K\"},{\"k\":7,\"param\":\"V\"}]}}],\"type\":{\"k\":7,\"param\":\"C\"}}},{\"name\":\"comparator\",\"optional\":true,\"type\":{\"k\":6,\"params\":[{\"name\":\"valueA\",\"type\":{\"k\":7,\"param\":\"C\"}},{\"name\":\"valueB\",\"type\":{\"k\":7,\"param\":\"C\"}}],\"type\":{\"k\":2}}}],\"type\":{\"k\":8,\"name\":\"Iterable\",\"args\":[{\"k\":7,\"param\":\"K\"},{\"k\":7,\"param\":\"V\"}]}},\"doc\":[\"Like `sort`, but also accepts a `comparatorValueMapper` which allows for\\nsorting by more sophisticated means:\\n\\n    hitters.sortBy(hitter => hitter.avgHits);\\n\"]},\"take\":{\"impl\":{\"line\":685,\"params\":[{\"name\":\"amount\",\"type\":{\"k\":2}}],\"type\":{\"k\":8,\"name\":\"Iterable\",\"args\":[{\"k\":7,\"param\":\"K\"},{\"k\":7,\"param\":\"V\"}]}},\"doc\":[\"Returns a new Iterable of the same type which contains the first `amount`\\nentries from this Iterable.\"]},\"takeLast\":{\"impl\":{\"line\":691,\"params\":[{\"name\":\"amount\",\"type\":{\"k\":2}}],\"type\":{\"k\":8,\"name\":\"Iterable\",\"args\":[{\"k\":7,\"param\":\"K\"},{\"k\":7,\"param\":\"V\"}]}},\"doc\":[\"Returns a new Iterable of the same type which contains the last `amount`\\nentries from this Iterable.\"]},\"takeWhile\":{\"impl\":{\"line\":697,\"params\":[{\"name\":\"predicate\",\"type\":{\"k\":6,\"params\":[{\"name\":\"value\",\"optional\":true,\"type\":{\"k\":7,\"param\":\"V\"}},{\"name\":\"key\",\"optional\":true,\"type\":{\"k\":7,\"param\":\"K\"}},{\"name\":\"iter\",\"optional\":true,\"type\":{\"k\":8,\"name\":\"Iterable\",\"args\":[{\"k\":7,\"param\":\"K\"},{\"k\":7,\"param\":\"V\"}]}}],\"type\":{\"k\":1}}},{\"name\":\"context\",\"optional\":true,\"type\":{\"k\":0}}],\"type\":{\"k\":8,\"name\":\"Iterable\",\"args\":[{\"k\":7,\"param\":\"K\"},{\"k\":7,\"param\":\"V\"}]}},\"doc\":[\"Returns a new Iterable of the same type which contains entries from this\\nIterable as long as the `predicate` returns true.\\n\\n    Seq.of('dog','frog','cat','hat','god')\\n      .takeWhile(x => x.match(/o/))\\n    // Seq [ 'dog', 'frog' ]\\n\"]},\"takeUntil\":{\"impl\":{\"line\":711,\"params\":[{\"name\":\"predicate\",\"type\":{\"k\":6,\"params\":[{\"name\":\"value\",\"optional\":true,\"type\":{\"k\":7,\"param\":\"V\"}},{\"name\":\"key\",\"optional\":true,\"type\":{\"k\":7,\"param\":\"K\"}},{\"name\":\"iter\",\"optional\":true,\"type\":{\"k\":8,\"name\":\"Iterable\",\"args\":[{\"k\":7,\"param\":\"K\"},{\"k\":7,\"param\":\"V\"}]}}],\"type\":{\"k\":1}}},{\"name\":\"context\",\"optional\":true,\"type\":{\"k\":0}}],\"type\":{\"k\":8,\"name\":\"Iterable\",\"args\":[{\"k\":7,\"param\":\"K\"},{\"k\":7,\"param\":\"V\"}]}},\"doc\":[\"Returns a new Iterable of the same type which contains entries from this\\nIterable as long as the `predicate` returns false.\\n\\n    Seq.of('dog','frog','cat','hat','god').takeUntil(x => x.match(/at/))\\n    // ['dog', 'frog']\\n\"]},\"valueSeq\":{\"impl\":{\"line\":724,\"type\":{\"k\":8,\"name\":\"IndexedSeq\",\"args\":[{\"k\":7,\"param\":\"V\"}]}},\"doc\":[\"Returns a new IndexedSeq of the values of this Iterable,\\ndiscarding keys.\"]}},\"properties\":{\"size\":{\"line\":730,\"doc\":[\"Note: this is here as a convenience to work around an issue with\\nTypeScript https://github.com/Microsoft/TypeScript/issues/285, but\\nIterable does not define `size`, instead `Seq` defines `size` as\\nnullable number, and `Collection` defines `size` as always a number.\"],\"type\":{\"k\":2}}}}]}},\"KeyedIterable\":{\"call\":{\"impl\":[{\"line\":739,\"typeParams\":[\"K\",\"V\"],\"params\":[{\"name\":\"iter\",\"type\":{\"k\":8,\"name\":\"KeyedIterable\",\"args\":[{\"k\":7,\"param\":\"K\"},{\"k\":7,\"param\":\"V\"}]}}],\"type\":{\"k\":8,\"name\":\"KeyedIterable\",\"args\":[{\"k\":7,\"param\":\"K\"},{\"k\":7,\"param\":\"V\"}]}},{\"line\":757,\"typeParams\":[\"K\",\"V\"],\"params\":[{\"name\":\"iter\",\"type\":{\"k\":8,\"name\":\"Iterable\",\"args\":[{\"k\":0},{\"k\":0}]}}],\"type\":{\"k\":8,\"name\":\"KeyedIterable\",\"args\":[{\"k\":7,\"param\":\"K\"},{\"k\":7,\"param\":\"V\"}]}},{\"line\":758,\"typeParams\":[\"K\",\"V\"],\"params\":[{\"name\":\"array\",\"type\":{\"k\":8,\"name\":\"Array\",\"args\":[{\"k\":0}]}}],\"type\":{\"k\":8,\"name\":\"KeyedIterable\",\"args\":[{\"k\":7,\"param\":\"K\"},{\"k\":7,\"param\":\"V\"}]}},{\"line\":759,\"typeParams\":[\"V\"],\"params\":[{\"name\":\"obj\",\"type\":{\"k\":4,\"members\":[{\"index\":true,\"params\":[{\"name\":\"key\",\"type\":{\"k\":3}}],\"type\":{\"k\":7,\"param\":\"V\"}}]}}],\"type\":{\"k\":8,\"name\":\"KeyedIterable\",\"args\":[{\"k\":3},{\"k\":7,\"param\":\"V\"}]}},{\"line\":760,\"typeParams\":[\"K\",\"V\"],\"params\":[{\"name\":\"iterator\",\"type\":{\"k\":8,\"name\":\"Iterator\",\"args\":[{\"k\":0}]}}],\"type\":{\"k\":8,\"name\":\"KeyedIterable\",\"args\":[{\"k\":7,\"param\":\"K\"},{\"k\":7,\"param\":\"V\"}]}},{\"line\":761,\"typeParams\":[\"K\",\"V\"],\"params\":[{\"name\":\"iterable\",\"type\":{\"k\":7,\"param\":\"Object\"}}],\"type\":{\"k\":8,\"name\":\"KeyedIterable\",\"args\":[{\"k\":7,\"param\":\"K\"},{\"k\":7,\"param\":\"V\"}]}}],\"doc\":[\"Similar to `Iterable()`, however it expects iterable-likes of [K, V]\\ntuples if not constructed from a KeyedIterable or JS Object.\"]},\"interface\":{\"line\":762,\"typeParams\":[\"K\",\"V\"],\"extends\":[{\"k\":8,\"name\":\"Iterable\",\"args\":[{\"k\":7,\"param\":\"K\"},{\"k\":7,\"param\":\"V\"}]}],\"groups\":[{\"methods\":{\"toSeq\":{\"impl\":{\"line\":765,\"type\":{\"k\":8,\"name\":\"KeyedSeq\",\"args\":[{\"k\":7,\"param\":\"K\"},{\"k\":7,\"param\":\"V\"}]}},\"doc\":[\"Returns KeyedSeq.\\n@override\"]},\"flip\":{\"impl\":{\"line\":771,\"type\":{\"k\":8,\"name\":\"KeyedIterable\",\"args\":[{\"k\":7,\"param\":\"V\"},{\"k\":7,\"param\":\"K\"}]}},\"doc\":[\"Returns a new KeyedIterable of the same type where the keys and values\\nhave been flipped.\\n\\n    Seq({ a: 'z', b: 'y' }).flip() // { z: 'a', y: 'b' }\\n\"]},\"findKey\":{\"impl\":{\"line\":781,\"params\":[{\"name\":\"predicate\",\"type\":{\"k\":6,\"params\":[{\"name\":\"value\",\"optional\":true,\"type\":{\"k\":7,\"param\":\"V\"}},{\"name\":\"key\",\"optional\":true,\"type\":{\"k\":7,\"param\":\"K\"}},{\"name\":\"iter\",\"optional\":true,\"type\":{\"k\":8,\"name\":\"KeyedIterable\",\"args\":[{\"k\":7,\"param\":\"K\"},{\"k\":7,\"param\":\"V\"}]}}],\"type\":{\"k\":1}}},{\"name\":\"context\",\"optional\":true,\"type\":{\"k\":0}}],\"type\":{\"k\":7,\"param\":\"K\"}},\"doc\":[\"Returns the key for which the `predicate` returns true.\"]},\"findLastKey\":{\"impl\":{\"line\":789,\"params\":[{\"name\":\"predicate\",\"type\":{\"k\":6,\"params\":[{\"name\":\"value\",\"optional\":true,\"type\":{\"k\":7,\"param\":\"V\"}},{\"name\":\"key\",\"optional\":true,\"type\":{\"k\":7,\"param\":\"K\"}},{\"name\":\"iter\",\"optional\":true,\"type\":{\"k\":8,\"name\":\"KeyedIterable\",\"args\":[{\"k\":7,\"param\":\"K\"},{\"k\":7,\"param\":\"V\"}]}}],\"type\":{\"k\":1}}},{\"name\":\"context\",\"optional\":true,\"type\":{\"k\":0}}],\"type\":{\"k\":7,\"param\":\"K\"}},\"doc\":[\"Returns the last key for which the `predicate` returns true.\\n\\nNote: `predicate` will be called for each entry in reverse.\"]},\"keyOf\":{\"impl\":{\"line\":799,\"params\":[{\"name\":\"searchValue\",\"type\":{\"k\":7,\"param\":\"V\"}}],\"type\":{\"k\":7,\"param\":\"K\"}},\"doc\":[\"Returns the key associated with the search value, or undefined.\"]},\"lastKeyOf\":{\"impl\":{\"line\":804,\"params\":[{\"name\":\"searchValue\",\"type\":{\"k\":7,\"param\":\"V\"}}],\"type\":{\"k\":7,\"param\":\"K\"}},\"doc\":[\"Returns the last key associated with the search value, or undefined.\"]},\"mapEntries\":{\"impl\":{\"line\":809,\"typeParams\":[\"KM\",\"VM\"],\"params\":[{\"name\":\"mapper\",\"type\":{\"k\":6,\"params\":[{\"name\":\"entry\",\"optional\":true,\"type\":{\"k\":8,\"name\":\"Array\",\"args\":[{\"k\":0}]}},{\"name\":\"index\",\"optional\":true,\"type\":{\"k\":2}},{\"name\":\"iter\",\"optional\":true,\"type\":{\"k\":8,\"name\":\"KeyedIterable\",\"args\":[{\"k\":7,\"param\":\"K\"},{\"k\":7,\"param\":\"V\"}]}}],\"type\":{\"k\":8,\"name\":\"Array\",\"args\":[{\"k\":0}]}}},{\"name\":\"context\",\"optional\":true,\"type\":{\"k\":0}}],\"type\":{\"k\":8,\"name\":\"KeyedIterable\",\"args\":[{\"k\":7,\"param\":\"KM\"},{\"k\":7,\"param\":\"VM\"}]}},\"doc\":[\"Returns a new KeyedIterable of the same type with entries\\n([key, value] tuples) passed through a `mapper` function.\\n\\n    Seq({ a: 1, b: 2 })\\n      .mapEntries(([k, v]) => [k.toUpperCase(), v * 2])\\n    // Seq { A: 2, B: 4 }\\n\"]},\"mapKeys\":{\"impl\":{\"line\":823,\"typeParams\":[\"M\"],\"params\":[{\"name\":\"mapper\",\"type\":{\"k\":6,\"params\":[{\"name\":\"key\",\"optional\":true,\"type\":{\"k\":7,\"param\":\"K\"}},{\"name\":\"value\",\"optional\":true,\"type\":{\"k\":7,\"param\":\"V\"}},{\"name\":\"iter\",\"optional\":true,\"type\":{\"k\":8,\"name\":\"KeyedIterable\",\"args\":[{\"k\":7,\"param\":\"K\"},{\"k\":7,\"param\":\"V\"}]}}],\"type\":{\"k\":7,\"param\":\"M\"}}},{\"name\":\"context\",\"optional\":true,\"type\":{\"k\":0}}],\"type\":{\"k\":8,\"name\":\"KeyedIterable\",\"args\":[{\"k\":7,\"param\":\"M\"},{\"k\":7,\"param\":\"V\"}]}},\"doc\":[\"Returns a new KeyedIterable of the same type with keys passed through a\\n`mapper` function.\\n\\n    Seq({ a: 1, b: 2 })\\n      .mapKeys(x => x.toUpperCase())\\n    // Seq { A: 1, B: 2 }\\n\"]}}}]}},\"IndexedIterable\":{\"call\":{\"impl\":[{\"line\":838,\"typeParams\":[\"T\"],\"params\":[{\"name\":\"iter\",\"type\":{\"k\":8,\"name\":\"IndexedIterable\",\"args\":[{\"k\":7,\"param\":\"T\"}]}}],\"type\":{\"k\":8,\"name\":\"IndexedIterable\",\"args\":[{\"k\":7,\"param\":\"T\"}]}},{\"line\":863,\"typeParams\":[\"T\"],\"params\":[{\"name\":\"iter\",\"type\":{\"k\":8,\"name\":\"SetIterable\",\"args\":[{\"k\":7,\"param\":\"T\"}]}}],\"type\":{\"k\":8,\"name\":\"IndexedIterable\",\"args\":[{\"k\":7,\"param\":\"T\"}]}},{\"line\":864,\"typeParams\":[\"K\",\"V\"],\"params\":[{\"name\":\"iter\",\"type\":{\"k\":8,\"name\":\"KeyedIterable\",\"args\":[{\"k\":7,\"param\":\"K\"},{\"k\":7,\"param\":\"V\"}]}}],\"type\":{\"k\":8,\"name\":\"IndexedIterable\",\"args\":[{\"k\":0}]}},{\"line\":865,\"typeParams\":[\"T\"],\"params\":[{\"name\":\"array\",\"type\":{\"k\":8,\"name\":\"Array\",\"args\":[{\"k\":7,\"param\":\"T\"}]}}],\"type\":{\"k\":8,\"name\":\"IndexedIterable\",\"args\":[{\"k\":7,\"param\":\"T\"}]}},{\"line\":866,\"typeParams\":[\"T\"],\"params\":[{\"name\":\"iterator\",\"type\":{\"k\":8,\"name\":\"Iterator\",\"args\":[{\"k\":7,\"param\":\"T\"}]}}],\"type\":{\"k\":8,\"name\":\"IndexedIterable\",\"args\":[{\"k\":7,\"param\":\"T\"}]}},{\"line\":867,\"typeParams\":[\"T\"],\"params\":[{\"name\":\"iterable\",\"type\":{\"k\":7,\"param\":\"Object\"}}],\"type\":{\"k\":8,\"name\":\"IndexedIterable\",\"args\":[{\"k\":7,\"param\":\"T\"}]}}],\"doc\":[\"Similar to `Iterable()`, but always returns an IndexedIterable.\"]},\"interface\":{\"line\":868,\"typeParams\":[\"T\"],\"extends\":[{\"k\":8,\"name\":\"Iterable\",\"args\":[{\"k\":2},{\"k\":7,\"param\":\"T\"}]}],\"groups\":[{\"methods\":{\"toSeq\":{\"impl\":{\"line\":871,\"type\":{\"k\":8,\"name\":\"IndexedSeq\",\"args\":[{\"k\":7,\"param\":\"T\"}]}},\"doc\":[\"Returns IndexedSeq.\\n@override\"]}}},{\"title\":\"### ES6 Collection methods (ES6 Array and Map)\",\"methods\":{\"findIndex\":{\"impl\":{\"line\":877,\"params\":[{\"name\":\"predicate\",\"type\":{\"k\":6,\"params\":[{\"name\":\"value\",\"optional\":true,\"type\":{\"k\":7,\"param\":\"T\"}},{\"name\":\"index\",\"optional\":true,\"type\":{\"k\":2}},{\"name\":\"iter\",\"optional\":true,\"type\":{\"k\":8,\"name\":\"IndexedIterable\",\"args\":[{\"k\":7,\"param\":\"T\"}]}}],\"type\":{\"k\":1}}},{\"name\":\"context\",\"optional\":true,\"type\":{\"k\":0}}],\"type\":{\"k\":2}},\"doc\":[\"Returns the first index in the Iterable where a value satisfies the\\nprovided predicate function. Otherwise -1 is returned.\"]},\"indexOf\":{\"impl\":{\"line\":889,\"params\":[{\"name\":\"searchValue\",\"type\":{\"k\":7,\"param\":\"T\"}}],\"type\":{\"k\":2}},\"doc\":[\"Returns the first index at which a given value can be found in the\\nIterable, or -1 if it is not present.\"]},\"lastIndexOf\":{\"impl\":{\"line\":895,\"params\":[{\"name\":\"searchValue\",\"type\":{\"k\":7,\"param\":\"T\"}}],\"type\":{\"k\":2}},\"doc\":[\"Returns the last index at which a given value can be found in the\\nIterable, or -1 if it is not present.\"]},\"splice\":{\"impl\":{\"line\":901,\"params\":[{\"name\":\"index\",\"type\":{\"k\":2}},{\"name\":\"removeNum\",\"type\":{\"k\":2}},{\"name\":\"values\",\"varArgs\":true,\"type\":{\"k\":5,\"type\":{\"k\":0}}}],\"type\":{\"k\":8,\"name\":\"IndexedIterable\",\"args\":[{\"k\":7,\"param\":\"T\"}]}},\"doc\":[\"Splice returns a new indexed Iterable by replacing a region of this\\nIterable with new values. If values are not provided, it only skips the\\nregion to be removed.\\n\\n`index` may be a negative number, which indexes back from the end of the\\nIterable. `s.splice(-2)` splices after the second to last item.\\n\\n    Seq(['a','b','c','d']).splice(1, 2, 'q', 'r', 's')\\n    // Seq ['a', 'q', 'r', 's', 'd']\\n\"]}}},{\"title\":\"### More collection methods\",\"methods\":{\"findLastIndex\":{\"impl\":{\"line\":919,\"params\":[{\"name\":\"predicate\",\"type\":{\"k\":6,\"params\":[{\"name\":\"value\",\"optional\":true,\"type\":{\"k\":7,\"param\":\"T\"}},{\"name\":\"index\",\"optional\":true,\"type\":{\"k\":2}},{\"name\":\"iter\",\"optional\":true,\"type\":{\"k\":8,\"name\":\"IndexedIterable\",\"args\":[{\"k\":7,\"param\":\"T\"}]}}],\"type\":{\"k\":1}}},{\"name\":\"context\",\"optional\":true,\"type\":{\"k\":0}}],\"type\":{\"k\":2}},\"doc\":[\"Returns the last index in the Iterable where a value satisfies the\\nprovided predicate function. Otherwise -1 is returned.\"]},\"fromEntrySeq\":{\"impl\":{\"line\":931,\"type\":{\"k\":8,\"name\":\"KeyedSeq\",\"args\":[{\"k\":0},{\"k\":0}]}},\"doc\":[\"If this is an iterable of [key, value] entry tuples, it will return a\\nKeyedSeq of those entries.\"]},\"get\":{\"impl\":{\"line\":937,\"params\":[{\"name\":\"index\",\"type\":{\"k\":2}},{\"name\":\"notSetValue\",\"optional\":true,\"type\":{\"k\":7,\"param\":\"T\"}}],\"type\":{\"k\":7,\"param\":\"T\"}},\"doc\":[\"Returns the value associated with the provided index, or notSetValue if\\nthe index is beyond the bounds of the Iterable.\\n\\n`index` may be a negative number, which indexes back from the end of the\\nIterable. `s.get(-1)` gets the last item in the Iterable.\"]},\"interpose\":{\"impl\":{\"line\":946,\"params\":[{\"name\":\"separator\",\"type\":{\"k\":7,\"param\":\"T\"}}],\"type\":{\"k\":8,\"name\":\"IndexedIterable\",\"args\":[{\"k\":7,\"param\":\"T\"}]}},\"doc\":[\"Returns an Iterable of the same type with `separator` between each item\\nin this Iterable.\"]}}}]}},\"SetIterable\":{\"call\":{\"impl\":[{\"line\":953,\"typeParams\":[\"T\"],\"params\":[{\"name\":\"iter\",\"type\":{\"k\":8,\"name\":\"SetIterable\",\"args\":[{\"k\":7,\"param\":\"T\"}]}}],\"type\":{\"k\":8,\"name\":\"SetIterable\",\"args\":[{\"k\":7,\"param\":\"T\"}]}},{\"line\":975,\"typeParams\":[\"T\"],\"params\":[{\"name\":\"iter\",\"type\":{\"k\":8,\"name\":\"IndexedIterable\",\"args\":[{\"k\":7,\"param\":\"T\"}]}}],\"type\":{\"k\":8,\"name\":\"SetIterable\",\"args\":[{\"k\":7,\"param\":\"T\"}]}},{\"line\":976,\"typeParams\":[\"K\",\"V\"],\"params\":[{\"name\":\"iter\",\"type\":{\"k\":8,\"name\":\"KeyedIterable\",\"args\":[{\"k\":7,\"param\":\"K\"},{\"k\":7,\"param\":\"V\"}]}}],\"type\":{\"k\":8,\"name\":\"SetIterable\",\"args\":[{\"k\":0}]}},{\"line\":977,\"typeParams\":[\"T\"],\"params\":[{\"name\":\"array\",\"type\":{\"k\":8,\"name\":\"Array\",\"args\":[{\"k\":7,\"param\":\"T\"}]}}],\"type\":{\"k\":8,\"name\":\"SetIterable\",\"args\":[{\"k\":7,\"param\":\"T\"}]}},{\"line\":978,\"typeParams\":[\"T\"],\"params\":[{\"name\":\"iterator\",\"type\":{\"k\":8,\"name\":\"Iterator\",\"args\":[{\"k\":7,\"param\":\"T\"}]}}],\"type\":{\"k\":8,\"name\":\"SetIterable\",\"args\":[{\"k\":7,\"param\":\"T\"}]}},{\"line\":979,\"typeParams\":[\"T\"],\"params\":[{\"name\":\"iterable\",\"type\":{\"k\":7,\"param\":\"Object\"}}],\"type\":{\"k\":8,\"name\":\"SetIterable\",\"args\":[{\"k\":7,\"param\":\"T\"}]}}],\"doc\":[\"Similar to `Iterable()`, but always returns a SetIterable.\"]},\"interface\":{\"line\":980,\"typeParams\":[\"T\"],\"extends\":[{\"k\":8,\"name\":\"Iterable\",\"args\":[{\"k\":7,\"param\":\"T\"},{\"k\":7,\"param\":\"T\"}]}],\"groups\":[{\"methods\":{\"toSeq\":{\"impl\":{\"line\":983,\"type\":{\"k\":8,\"name\":\"SetSeq\",\"args\":[{\"k\":7,\"param\":\"T\"}]}},\"doc\":[\"Returns SetSeq.\\n@override\"]}}}]}},\"Seq\":{\"module\":{\"line\":1034,\"doc\":[\"Seq\\n---\\n\\n**Sequences are immutable** — Once a sequence is created, it cannot be\\nchanged, appended to, rearranged or otherwise modified. Instead, any mutative\\nmethod called on a sequence will return a new immutable sequence.\\n\\n**Sequences are lazy** — Sequences do as little work as necessary to respond\\nto any method call.\\n\\nFor example, the following does no work, because the resulting sequence is\\nnever used:\\n\\n    var oddSquares = Immutable.Seq.of(1,2,3,4,5,6,7,8)\\n      .filter(x => x % 2).map(x => x * x);\\n\\nOnce the sequence is used, it performs only the work necessary. In this\\nexample, no intermediate arrays are ever created, filter is only called\\nthree times, and map is only called twice:\\n\\n    console.log(evenSquares.get(1)); // 9\\n\\nLazy Sequences allow for the efficient chaining of sequence operations,\\nallowing for the expression of logic that can otherwise be very tedious:\\n\\n    Immutable.Seq({a:1, b:1, c:1})\\n      .flip().map(key => key.toUpperCase()).flip().toObject();\\n    // Map { A: 1, B: 1, C: 1 }\\n\\nAs well as expressing logic that would otherwise seem memory-limited:\\n\\n    Immutable.Range(1, Infinity)\\n      .skip(1000)\\n      .map(n => -n)\\n      .filter(n => n % 2 === 0)\\n      .take(2)\\n      .reduce((r, n) => r * n, 1);\\n    // 1006008\\n\"],\"types\":{\"isSeq\":{\"call\":{\"impl\":[{\"line\":1035,\"params\":[{\"name\":\"maybeSeq\",\"type\":{\"k\":0}}],\"type\":{\"k\":1}}],\"doc\":[\"True if `maybeSeq` is a Seq, it is not backed by a concrete\\nstructure such as Map, List, or Set.\"]}},\"of\":{\"call\":{\"impl\":[{\"line\":1040,\"typeParams\":[\"T\"],\"params\":[{\"name\":\"values\",\"varArgs\":true,\"type\":{\"k\":5,\"type\":{\"k\":7,\"param\":\"T\"}}}],\"type\":{\"k\":8,\"name\":\"IndexedSeq\",\"args\":[{\"k\":7,\"param\":\"T\"}]}}],\"doc\":[\"Returns a Seq of the values provided. Alias for `IndexedSeq.of()`.\"]}}}},\"call\":{\"impl\":[{\"line\":1046,\"typeParams\":[\"K\",\"V\"],\"type\":{\"k\":8,\"name\":\"Seq\",\"args\":[{\"k\":7,\"param\":\"K\"},{\"k\":7,\"param\":\"V\"}]}},{\"line\":1060,\"typeParams\":[\"K\",\"V\"],\"params\":[{\"name\":\"seq\",\"type\":{\"k\":8,\"name\":\"Seq\",\"args\":[{\"k\":7,\"param\":\"K\"},{\"k\":7,\"param\":\"V\"}]}}],\"type\":{\"k\":8,\"name\":\"Seq\",\"args\":[{\"k\":7,\"param\":\"K\"},{\"k\":7,\"param\":\"V\"}]}},{\"line\":1061,\"typeParams\":[\"K\",\"V\"],\"params\":[{\"name\":\"iterable\",\"type\":{\"k\":8,\"name\":\"Iterable\",\"args\":[{\"k\":7,\"param\":\"K\"},{\"k\":7,\"param\":\"V\"}]}}],\"type\":{\"k\":8,\"name\":\"Seq\",\"args\":[{\"k\":7,\"param\":\"K\"},{\"k\":7,\"param\":\"V\"}]}},{\"line\":1062,\"typeParams\":[\"T\"],\"params\":[{\"name\":\"array\",\"type\":{\"k\":8,\"name\":\"Array\",\"args\":[{\"k\":7,\"param\":\"T\"}]}}],\"type\":{\"k\":8,\"name\":\"IndexedSeq\",\"args\":[{\"k\":7,\"param\":\"T\"}]}},{\"line\":1063,\"typeParams\":[\"V\"],\"params\":[{\"name\":\"obj\",\"type\":{\"k\":4,\"members\":[{\"index\":true,\"params\":[{\"name\":\"key\",\"type\":{\"k\":3}}],\"type\":{\"k\":7,\"param\":\"V\"}}]}}],\"type\":{\"k\":8,\"name\":\"KeyedSeq\",\"args\":[{\"k\":3},{\"k\":7,\"param\":\"V\"}]}},{\"line\":1064,\"typeParams\":[\"T\"],\"params\":[{\"name\":\"iterator\",\"type\":{\"k\":8,\"name\":\"Iterator\",\"args\":[{\"k\":7,\"param\":\"T\"}]}}],\"type\":{\"k\":8,\"name\":\"IndexedSeq\",\"args\":[{\"k\":7,\"param\":\"T\"}]}},{\"line\":1065,\"typeParams\":[\"T\"],\"params\":[{\"name\":\"iterable\",\"type\":{\"k\":7,\"param\":\"Object\"}}],\"type\":{\"k\":8,\"name\":\"IndexedSeq\",\"args\":[{\"k\":7,\"param\":\"T\"}]}}],\"doc\":[\"`Immutable.Seq()` returns a particular kind of Sequence based\\non the input.\\n\\n  * If a `Seq`, that same `Seq`.\\n  * If an `Iterable`, a `Seq` of the same kind (Keyed, Indexed, or Set).\\n  * If an Array-like, an `IndexedSeq`.\\n  * If an Object with an Iterator, an `IndexedSeq`.\\n  * If an Iterator, an `IndexedSeq`.\\n  * If an Object, a `KeyedSeq`.\\n\"]},\"interface\":{\"line\":1066,\"typeParams\":[\"K\",\"V\"],\"extends\":[{\"k\":8,\"name\":\"Iterable\",\"args\":[{\"k\":7,\"param\":\"K\"},{\"k\":7,\"param\":\"V\"}]}],\"groups\":[{\"properties\":{\"size\":{\"line\":1068,\"doc\":[\"Some Seqs can describe their size lazily. When this is the case,\\nsize will be an integer. Otherwise it will be undefined.\\n\\nFor example, Seqs returned from map() or reverse()\\npreserve the size of the original Seq while filter() does not.\\n\\nNote: Ranges, Repeats and Seqs made from Arrays and Objects will\\nalways have a size.\"],\"type\":{\"k\":2}}},\"methods\":{\"cacheResult\":{\"impl\":{\"line\":1080,\"type\":{\"k\":8,\"name\":\"Seq\",\"args\":[{\"k\":7,\"param\":\"K\"},{\"k\":7,\"param\":\"V\"}]}},\"doc\":[\"Because Sequences are lazy and designed to be chained together, they do\\nnot cache their results. For example, this map function is called 6 times:\\n\\n    var squares = Seq.of(1,2,3).map(x => x * x);\\n    squares.join() + squares.join();\\n\\nIf you know a derived sequence will be used multiple times, it may be more\\nefficient to first cache it. Here, map is called 3 times:\\n\\n    var squares = Seq.of(1,2,3).map(x => x * x).cacheResult();\\n    squares.join() + squares.join();\\n\\nUse this method judiciously, as it must fully evaluate a Seq.\\n\\nNote: after calling `cacheResult()`, a Seq will always have a size.\"]}}}]}},\"KeyedSeq\":{\"call\":{\"impl\":[{\"line\":1100,\"typeParams\":[\"K\",\"V\"],\"type\":{\"k\":8,\"name\":\"KeyedSeq\",\"args\":[{\"k\":7,\"param\":\"K\"},{\"k\":7,\"param\":\"V\"}]}},{\"line\":1107,\"typeParams\":[\"K\",\"V\"],\"params\":[{\"name\":\"seq\",\"type\":{\"k\":8,\"name\":\"KeyedIterable\",\"args\":[{\"k\":7,\"param\":\"K\"},{\"k\":7,\"param\":\"V\"}]}}],\"type\":{\"k\":8,\"name\":\"KeyedSeq\",\"args\":[{\"k\":7,\"param\":\"K\"},{\"k\":7,\"param\":\"V\"}]}},{\"line\":1108,\"typeParams\":[\"K\",\"V\"],\"params\":[{\"name\":\"seq\",\"type\":{\"k\":8,\"name\":\"Iterable\",\"args\":[{\"k\":0},{\"k\":0}]}}],\"type\":{\"k\":8,\"name\":\"KeyedSeq\",\"args\":[{\"k\":7,\"param\":\"K\"},{\"k\":7,\"param\":\"V\"}]}},{\"line\":1109,\"typeParams\":[\"K\",\"V\"],\"params\":[{\"name\":\"array\",\"type\":{\"k\":8,\"name\":\"Array\",\"args\":[{\"k\":0}]}}],\"type\":{\"k\":8,\"name\":\"KeyedSeq\",\"args\":[{\"k\":7,\"param\":\"K\"},{\"k\":7,\"param\":\"V\"}]}},{\"line\":1110,\"typeParams\":[\"V\"],\"params\":[{\"name\":\"obj\",\"type\":{\"k\":4,\"members\":[{\"index\":true,\"params\":[{\"name\":\"key\",\"type\":{\"k\":3}}],\"type\":{\"k\":7,\"param\":\"V\"}}]}}],\"type\":{\"k\":8,\"name\":\"KeyedSeq\",\"args\":[{\"k\":3},{\"k\":7,\"param\":\"V\"}]}},{\"line\":1111,\"typeParams\":[\"K\",\"V\"],\"params\":[{\"name\":\"iterator\",\"type\":{\"k\":8,\"name\":\"Iterator\",\"args\":[{\"k\":0}]}}],\"type\":{\"k\":8,\"name\":\"KeyedSeq\",\"args\":[{\"k\":7,\"param\":\"K\"},{\"k\":7,\"param\":\"V\"}]}},{\"line\":1112,\"typeParams\":[\"K\",\"V\"],\"params\":[{\"name\":\"iterable\",\"type\":{\"k\":7,\"param\":\"Object\"}}],\"type\":{\"k\":8,\"name\":\"KeyedSeq\",\"args\":[{\"k\":7,\"param\":\"K\"},{\"k\":7,\"param\":\"V\"}]}}],\"doc\":[\"Always returns a KeyedSeq, if input is not keyed, expects an\\niterable of [K, V] tuples.\"]},\"interface\":{\"line\":1113,\"typeParams\":[\"K\",\"V\"],\"extends\":[{\"k\":8,\"name\":\"Seq\",\"args\":[{\"k\":7,\"param\":\"K\"},{\"k\":7,\"param\":\"V\"}]},{\"k\":8,\"name\":\"KeyedIterable\",\"args\":[{\"k\":7,\"param\":\"K\"},{\"k\":7,\"param\":\"V\"}]}],\"groups\":[{\"methods\":{\"toSeq\":{\"impl\":{\"line\":1115,\"type\":{\"k\":8,\"name\":\"KeyedSeq\",\"args\":[{\"k\":7,\"param\":\"K\"},{\"k\":7,\"param\":\"V\"}]}},\"doc\":[\"Returns itself\"]}}}]}},\"IndexedSeq\":{\"module\":{\"line\":1123,\"types\":{\"of\":{\"call\":{\"impl\":[{\"line\":1124,\"typeParams\":[\"T\"],\"params\":[{\"name\":\"values\",\"varArgs\":true,\"type\":{\"k\":5,\"type\":{\"k\":7,\"param\":\"T\"}}}],\"type\":{\"k\":8,\"name\":\"IndexedSeq\",\"args\":[{\"k\":7,\"param\":\"T\"}]}}],\"doc\":[\"Provides an IndexedSeq of the values provided.\"]}}}},\"call\":{\"impl\":[{\"line\":1130,\"typeParams\":[\"T\"],\"type\":{\"k\":8,\"name\":\"IndexedSeq\",\"args\":[{\"k\":7,\"param\":\"T\"}]}},{\"line\":1136,\"typeParams\":[\"T\"],\"params\":[{\"name\":\"seq\",\"type\":{\"k\":8,\"name\":\"IndexedIterable\",\"args\":[{\"k\":7,\"param\":\"T\"}]}}],\"type\":{\"k\":8,\"name\":\"IndexedSeq\",\"args\":[{\"k\":7,\"param\":\"T\"}]}},{\"line\":1137,\"typeParams\":[\"T\"],\"params\":[{\"name\":\"seq\",\"type\":{\"k\":8,\"name\":\"SetIterable\",\"args\":[{\"k\":7,\"param\":\"T\"}]}}],\"type\":{\"k\":8,\"name\":\"IndexedSeq\",\"args\":[{\"k\":7,\"param\":\"T\"}]}},{\"line\":1138,\"typeParams\":[\"K\",\"V\"],\"params\":[{\"name\":\"seq\",\"type\":{\"k\":8,\"name\":\"KeyedIterable\",\"args\":[{\"k\":7,\"param\":\"K\"},{\"k\":7,\"param\":\"V\"}]}}],\"type\":{\"k\":8,\"name\":\"IndexedSeq\",\"args\":[{\"k\":0}]}},{\"line\":1139,\"typeParams\":[\"T\"],\"params\":[{\"name\":\"array\",\"type\":{\"k\":8,\"name\":\"Array\",\"args\":[{\"k\":7,\"param\":\"T\"}]}}],\"type\":{\"k\":8,\"name\":\"IndexedSeq\",\"args\":[{\"k\":7,\"param\":\"T\"}]}},{\"line\":1140,\"typeParams\":[\"T\"],\"params\":[{\"name\":\"iterator\",\"type\":{\"k\":8,\"name\":\"Iterator\",\"args\":[{\"k\":7,\"param\":\"T\"}]}}],\"type\":{\"k\":8,\"name\":\"IndexedSeq\",\"args\":[{\"k\":7,\"param\":\"T\"}]}},{\"line\":1141,\"typeParams\":[\"T\"],\"params\":[{\"name\":\"iterable\",\"type\":{\"k\":7,\"param\":\"Object\"}}],\"type\":{\"k\":8,\"name\":\"IndexedSeq\",\"args\":[{\"k\":7,\"param\":\"T\"}]}}],\"doc\":[\"Always returns IndexedSeq, discarding associated keys and\\nsupplying incrementing indices.\"]},\"interface\":{\"line\":1142,\"typeParams\":[\"T\"],\"extends\":[{\"k\":8,\"name\":\"Seq\",\"args\":[{\"k\":2},{\"k\":7,\"param\":\"T\"}]},{\"k\":8,\"name\":\"IndexedIterable\",\"args\":[{\"k\":7,\"param\":\"T\"}]}],\"groups\":[{\"methods\":{\"toSeq\":{\"impl\":{\"line\":1144,\"type\":{\"k\":8,\"name\":\"IndexedSeq\",\"args\":[{\"k\":7,\"param\":\"T\"}]}},\"doc\":[\"Returns itself\"]}}}]}},\"SetSeq\":{\"module\":{\"line\":1151,\"types\":{\"of\":{\"call\":{\"impl\":[{\"line\":1152,\"typeParams\":[\"T\"],\"params\":[{\"name\":\"values\",\"varArgs\":true,\"type\":{\"k\":5,\"type\":{\"k\":7,\"param\":\"T\"}}}],\"type\":{\"k\":8,\"name\":\"SetSeq\",\"args\":[{\"k\":7,\"param\":\"T\"}]}}],\"doc\":[\"Returns a SetSeq of the provided values\"]}}}},\"call\":{\"impl\":[{\"line\":1158,\"typeParams\":[\"T\"],\"type\":{\"k\":8,\"name\":\"SetSeq\",\"args\":[{\"k\":7,\"param\":\"T\"}]}},{\"line\":1163,\"typeParams\":[\"T\"],\"params\":[{\"name\":\"seq\",\"type\":{\"k\":8,\"name\":\"SetIterable\",\"args\":[{\"k\":7,\"param\":\"T\"}]}}],\"type\":{\"k\":8,\"name\":\"SetSeq\",\"args\":[{\"k\":7,\"param\":\"T\"}]}},{\"line\":1164,\"typeParams\":[\"T\"],\"params\":[{\"name\":\"seq\",\"type\":{\"k\":8,\"name\":\"IndexedIterable\",\"args\":[{\"k\":7,\"param\":\"T\"}]}}],\"type\":{\"k\":8,\"name\":\"SetSeq\",\"args\":[{\"k\":7,\"param\":\"T\"}]}},{\"line\":1165,\"typeParams\":[\"K\",\"V\"],\"params\":[{\"name\":\"seq\",\"type\":{\"k\":8,\"name\":\"KeyedIterable\",\"args\":[{\"k\":7,\"param\":\"K\"},{\"k\":7,\"param\":\"V\"}]}}],\"type\":{\"k\":8,\"name\":\"SetSeq\",\"args\":[{\"k\":0}]}},{\"line\":1166,\"typeParams\":[\"T\"],\"params\":[{\"name\":\"array\",\"type\":{\"k\":8,\"name\":\"Array\",\"args\":[{\"k\":7,\"param\":\"T\"}]}}],\"type\":{\"k\":8,\"name\":\"SetSeq\",\"args\":[{\"k\":7,\"param\":\"T\"}]}},{\"line\":1167,\"typeParams\":[\"T\"],\"params\":[{\"name\":\"iterator\",\"type\":{\"k\":8,\"name\":\"Iterator\",\"args\":[{\"k\":7,\"param\":\"T\"}]}}],\"type\":{\"k\":8,\"name\":\"SetSeq\",\"args\":[{\"k\":7,\"param\":\"T\"}]}},{\"line\":1168,\"typeParams\":[\"T\"],\"params\":[{\"name\":\"iterable\",\"type\":{\"k\":7,\"param\":\"Object\"}}],\"type\":{\"k\":8,\"name\":\"SetSeq\",\"args\":[{\"k\":7,\"param\":\"T\"}]}}],\"doc\":[\"Always returns a SetSeq, discarding associated indices or keys.\"]},\"interface\":{\"line\":1169,\"typeParams\":[\"T\"],\"extends\":[{\"k\":8,\"name\":\"Seq\",\"args\":[{\"k\":7,\"param\":\"T\"},{\"k\":7,\"param\":\"T\"}]},{\"k\":8,\"name\":\"SetIterable\",\"args\":[{\"k\":7,\"param\":\"T\"}]}],\"groups\":[{\"methods\":{\"toSeq\":{\"impl\":{\"line\":1171,\"type\":{\"k\":8,\"name\":\"SetSeq\",\"args\":[{\"k\":7,\"param\":\"T\"}]}},\"doc\":[\"Returns itself\"]}}}]}},\"Range\":{\"call\":{\"impl\":[{\"line\":1177,\"params\":[{\"name\":\"start\",\"optional\":true,\"type\":{\"k\":2}},{\"name\":\"end\",\"optional\":true,\"type\":{\"k\":2}},{\"name\":\"step\",\"optional\":true,\"type\":{\"k\":2}}],\"type\":{\"k\":8,\"name\":\"IndexedSeq\",\"args\":[{\"k\":2}]}}],\"doc\":[\"Range\\n-----\\n\\nReturns a IndexedSeq of numbers from `start` (inclusive) to `end`\\n(exclusive), by `step`, where `start` defaults to 0, `step` to 1, and `end` to\\ninfinity. When `start` is equal to `end`, returns empty range.\\n\\n    Range() // [0,1,2,3,...]\\n    Range(10) // [10,11,12,13,...]\\n    Range(10,15) // [10,11,12,13,14]\\n    Range(10,30,5) // [10,15,20,25]\\n    Range(30,10,5) // [30,25,20,15]\\n    Range(30,30,5) // []\\n\"]}},\"Repeat\":{\"call\":{\"impl\":[{\"line\":1196,\"typeParams\":[\"T\"],\"params\":[{\"name\":\"value\",\"type\":{\"k\":7,\"param\":\"T\"}},{\"name\":\"times\",\"optional\":true,\"type\":{\"k\":2}}],\"type\":{\"k\":8,\"name\":\"IndexedSeq\",\"args\":[{\"k\":7,\"param\":\"T\"}]}}],\"doc\":[\"Repeat\\n------\\n\\nReturns a IndexedSeq of `value` repeated `times` times. When `times` is\\nnot defined, returns an infinite sequence of `value`.\\n\\n    Repeat('foo') // ['foo','foo','foo',...]\\n    Repeat('bar',4) // ['bar','bar','bar','bar']\\n\"]}},\"Collection\":{\"interface\":{\"line\":1210,\"doc\":[\"Collections\\n-----------\"],\"typeParams\":[\"K\",\"V\"],\"extends\":[{\"k\":8,\"name\":\"Iterable\",\"args\":[{\"k\":7,\"param\":\"K\"},{\"k\":7,\"param\":\"V\"}]}],\"groups\":[{\"properties\":{\"size\":{\"line\":1217,\"doc\":[\"All collections maintain their current `size` as an integer.\"],\"type\":{\"k\":2}}}}]}},\"KeyedCollection\":{\"interface\":{\"line\":1223,\"typeParams\":[\"K\",\"V\"],\"extends\":[{\"k\":8,\"name\":\"Collection\",\"args\":[{\"k\":7,\"param\":\"K\"},{\"k\":7,\"param\":\"V\"}]},{\"k\":8,\"name\":\"KeyedIterable\",\"args\":[{\"k\":7,\"param\":\"K\"},{\"k\":7,\"param\":\"V\"}]}],\"groups\":[{\"methods\":{\"toSeq\":{\"impl\":{\"line\":1225,\"type\":{\"k\":8,\"name\":\"KeyedSeq\",\"args\":[{\"k\":7,\"param\":\"K\"},{\"k\":7,\"param\":\"V\"}]}},\"doc\":[\"Returns KeyedSeq.\\n@override\"]}}}]}},\"IndexedCollection\":{\"interface\":{\"line\":1232,\"typeParams\":[\"T\"],\"extends\":[{\"k\":8,\"name\":\"Collection\",\"args\":[{\"k\":2},{\"k\":7,\"param\":\"T\"}]},{\"k\":8,\"name\":\"IndexedIterable\",\"args\":[{\"k\":7,\"param\":\"T\"}]}],\"groups\":[{\"methods\":{\"toSeq\":{\"impl\":{\"line\":1234,\"type\":{\"k\":8,\"name\":\"IndexedSeq\",\"args\":[{\"k\":7,\"param\":\"T\"}]}},\"doc\":[\"Returns IndexedSeq.\\n@override\"]}}}]}},\"SetCollection\":{\"interface\":{\"line\":1241,\"typeParams\":[\"T\"],\"extends\":[{\"k\":8,\"name\":\"Collection\",\"args\":[{\"k\":7,\"param\":\"T\"},{\"k\":7,\"param\":\"T\"}]},{\"k\":8,\"name\":\"SetIterable\",\"args\":[{\"k\":7,\"param\":\"T\"}]}],\"groups\":[{\"methods\":{\"toSeq\":{\"impl\":{\"line\":1243,\"type\":{\"k\":8,\"name\":\"SetSeq\",\"args\":[{\"k\":7,\"param\":\"T\"}]}},\"doc\":[\"Returns SetSeq.\\n@override\"]}}}]}},\"Map\":{\"module\":{\"line\":1278,\"doc\":[\"Map\\n---\\n\\nA Map is a Iterable of (key, value) pairs with `O(log32 N)` gets and sets\\nimplemented by an unordered hash map using a hash-array mapped trie.\\n\\nIteration order of a Map is undefined, however is stable. Multiple iterations\\nof the same Map will iterate in the same order.\\n\\nMap's keys can be of any type, and use `Immutable.is` to determine key\\nequality. This allows the use of NaN as a key.\\n\\nBecause `Immutable.is` returns equality based on value semantics, and\\nImmutable collections are treated as values, any Immutable collection may\\nbe used as a key.\\n\\n    Map().set(List.of(1), 'listofone').get(List.of(1));\\n    // 'listofone'\\n\\nAny JavaScript object may be used as a key, however strict identity is used\\nto evaluate key equality. Two similar looking objects will represent two\\ndifferent keys.\\n\"],\"types\":{\"isMap\":{\"call\":{\"impl\":[{\"line\":1279,\"params\":[{\"name\":\"maybeMap\",\"type\":{\"k\":0}}],\"type\":{\"k\":1}}],\"doc\":[\"True if the provided value is a Map\"]}}}},\"call\":{\"impl\":[{\"line\":1285,\"typeParams\":[\"K\",\"V\"],\"type\":{\"k\":8,\"name\":\"Map\",\"args\":[{\"k\":7,\"param\":\"K\"},{\"k\":7,\"param\":\"V\"}]}},{\"line\":1296,\"typeParams\":[\"K\",\"V\"],\"params\":[{\"name\":\"iter\",\"type\":{\"k\":8,\"name\":\"KeyedIterable\",\"args\":[{\"k\":7,\"param\":\"K\"},{\"k\":7,\"param\":\"V\"}]}}],\"type\":{\"k\":8,\"name\":\"Map\",\"args\":[{\"k\":7,\"param\":\"K\"},{\"k\":7,\"param\":\"V\"}]}},{\"line\":1297,\"typeParams\":[\"K\",\"V\"],\"params\":[{\"name\":\"iter\",\"type\":{\"k\":8,\"name\":\"Iterable\",\"args\":[{\"k\":0},{\"k\":8,\"name\":\"Array\",\"args\":[{\"k\":0}]}]}}],\"type\":{\"k\":8,\"name\":\"Map\",\"args\":[{\"k\":7,\"param\":\"K\"},{\"k\":7,\"param\":\"V\"}]}},{\"line\":1298,\"typeParams\":[\"K\",\"V\"],\"params\":[{\"name\":\"array\",\"type\":{\"k\":8,\"name\":\"Array\",\"args\":[{\"k\":8,\"name\":\"Array\",\"args\":[{\"k\":0}]}]}}],\"type\":{\"k\":8,\"name\":\"Map\",\"args\":[{\"k\":7,\"param\":\"K\"},{\"k\":7,\"param\":\"V\"}]}},{\"line\":1299,\"typeParams\":[\"V\"],\"params\":[{\"name\":\"obj\",\"type\":{\"k\":4,\"members\":[{\"index\":true,\"params\":[{\"name\":\"key\",\"type\":{\"k\":3}}],\"type\":{\"k\":7,\"param\":\"V\"}}]}}],\"type\":{\"k\":8,\"name\":\"Map\",\"args\":[{\"k\":3},{\"k\":7,\"param\":\"V\"}]}},{\"line\":1300,\"typeParams\":[\"K\",\"V\"],\"params\":[{\"name\":\"iterator\",\"type\":{\"k\":8,\"name\":\"Iterator\",\"args\":[{\"k\":8,\"name\":\"Array\",\"args\":[{\"k\":0}]}]}}],\"type\":{\"k\":8,\"name\":\"Map\",\"args\":[{\"k\":7,\"param\":\"K\"},{\"k\":7,\"param\":\"V\"}]}},{\"line\":1301,\"typeParams\":[\"K\",\"V\"],\"params\":[{\"name\":\"iterable\",\"type\":{\"k\":7,\"param\":\"Object\"}}],\"type\":{\"k\":8,\"name\":\"Map\",\"args\":[{\"k\":7,\"param\":\"K\"},{\"k\":7,\"param\":\"V\"}]}}],\"doc\":[\"`Map()` creates a new immutable Map with the same key value pairs as\\nthe provided KeyedIterable or JavaScript Object or expects an Iterable\\nof [K, V] tuple entries.\\n\\n    var newMap = Map({key: \\\"value\\\"});\\n    var newMap = Map([[\\\"key\\\", \\\"value\\\"]]);\\n\"]},\"interface\":{\"line\":1302,\"typeParams\":[\"K\",\"V\"],\"extends\":[{\"k\":8,\"name\":\"KeyedCollection\",\"args\":[{\"k\":7,\"param\":\"K\"},{\"k\":7,\"param\":\"V\"}]}],\"groups\":[{\"methods\":{\"set\":{\"impl\":{\"line\":1305,\"params\":[{\"name\":\"key\",\"type\":{\"k\":7,\"param\":\"K\"}},{\"name\":\"value\",\"type\":{\"k\":7,\"param\":\"V\"}}],\"type\":{\"k\":8,\"name\":\"Map\",\"args\":[{\"k\":7,\"param\":\"K\"},{\"k\":7,\"param\":\"V\"}]}},\"doc\":[\"Returns a new Map also containing the new key, value pair. If an equivalent\\nkey already exists in this Map, it will be replaced.\"]},\"setIn\":{\"impl\":{\"line\":1317,\"params\":[{\"name\":\"KeyPath\",\"type\":{\"k\":8,\"name\":\"Iterable\",\"args\":[{\"k\":0},{\"k\":0}]}},{\"name\":\"value\",\"type\":{\"k\":7,\"param\":\"V\"}}],\"type\":{\"k\":8,\"name\":\"Map\",\"args\":[{\"k\":7,\"param\":\"K\"},{\"k\":7,\"param\":\"V\"}]}},\"doc\":[\"Returns a new Map having set `value` at this `keyPath`. If any keys in\\n`keyPath` do not exist, a new immutable Map will be created at that key.\"]},\"remove\":{\"impl\":{\"line\":1318,\"params\":[{\"name\":\"key\",\"type\":{\"k\":7,\"param\":\"K\"}}],\"type\":{\"k\":8,\"name\":\"Map\",\"args\":[{\"k\":7,\"param\":\"K\"},{\"k\":7,\"param\":\"V\"}]}},\"doc\":[\"Returns a new Map which excludes this `key`.\\n\\nNote: `delete` cannot be safely used in IE8\\n@alias delete\"]},\"delete\":{\"impl\":{\"line\":1326,\"params\":[{\"name\":\"key\",\"type\":{\"k\":7,\"param\":\"K\"}}],\"type\":{\"k\":8,\"name\":\"Map\",\"args\":[{\"k\":7,\"param\":\"K\"},{\"k\":7,\"param\":\"V\"}]}}},\"removeIn\":{\"impl\":{\"line\":1334,\"params\":[{\"name\":\"keyPath\",\"type\":{\"k\":8,\"name\":\"Iterable\",\"args\":[{\"k\":0},{\"k\":0}]}}],\"type\":{\"k\":8,\"name\":\"Map\",\"args\":[{\"k\":7,\"param\":\"K\"},{\"k\":7,\"param\":\"V\"}]}},\"doc\":[\"Returns a new Map having removed the value at this `keyPath`. If any keys\\nin `keyPath` do not exist, a new immutable Map will be created at\\nthat key.\"]},\"clear\":{\"impl\":{\"line\":1335,\"type\":{\"k\":8,\"name\":\"Map\",\"args\":[{\"k\":7,\"param\":\"K\"},{\"k\":7,\"param\":\"V\"}]}},\"doc\":[\"Returns a new Map containing no keys or values.\"]},\"update\":{\"impl\":{\"line\":1351,\"params\":[{\"name\":\"key\",\"type\":{\"k\":7,\"param\":\"K\"}},{\"name\":\"notSetValue\",\"type\":{\"k\":7,\"param\":\"V\"}},{\"name\":\"updater\",\"type\":{\"k\":6,\"params\":[{\"name\":\"value\",\"type\":{\"k\":7,\"param\":\"V\"}}],\"type\":{\"k\":7,\"param\":\"V\"}}}],\"type\":{\"k\":8,\"name\":\"Map\",\"args\":[{\"k\":7,\"param\":\"K\"},{\"k\":7,\"param\":\"V\"}]}},\"doc\":[\"Returns a new Map having updated the value at this `key` with the return\\nvalue of calling `updater` with the existing value, or `notSetValue` if\\nthe key was not set. If called with only a single argument, `updater` is\\ncalled with the Map itself.\\n\\nEquivalent to: `map.set(key, updater(map.get(key, notSetValue)))`.\"]},\"updateIn\":{\"impl\":{\"line\":1377,\"params\":[{\"name\":\"keyPath\",\"type\":{\"k\":8,\"name\":\"Iterable\",\"args\":[{\"k\":0},{\"k\":0}]}},{\"name\":\"notSetValue\",\"type\":{\"k\":0}},{\"name\":\"updater\",\"type\":{\"k\":6,\"params\":[{\"name\":\"value\",\"type\":{\"k\":0}}],\"type\":{\"k\":0}}}],\"type\":{\"k\":8,\"name\":\"Map\",\"args\":[{\"k\":7,\"param\":\"K\"},{\"k\":7,\"param\":\"V\"}]}},\"doc\":[\"Returns a new Map having applied the `updater` to the entry found at the\\nkeyPath. If any keys in `keyPath` do not exist, a new immutable Map will\\nbe created at that key. If the `keyPath` was not previously set,\\n`updater` is called with `notSetValue` (if provided).\\n\\n    var data = Immutable.fromJS({ a: { b: { c: 10 } } });\\n    data.updateIn(['a', 'b'], map => map.set('d', 20));\\n    // { a: { b: { c: 10, d: 20 } } }\\n\"]},\"merge\":{\"impl\":{\"line\":1401,\"params\":[{\"name\":\"iterables\",\"varArgs\":true,\"type\":{\"k\":5,\"type\":{\"k\":4,\"members\":[{\"index\":true,\"params\":[{\"name\":\"key\",\"type\":{\"k\":3}}],\"type\":{\"k\":7,\"param\":\"V\"}}]}}}],\"type\":{\"k\":8,\"name\":\"Map\",\"args\":[{\"k\":3},{\"k\":7,\"param\":\"V\"}]}},\"doc\":[\"Returns a new Map resulting from merging the provided Iterables\\n(or JS objects) into this Map. In other words, this takes each entry of\\neach iterable and sets it on this Map.\\n\\nIf any of the values provided to `merge` are not Iterable (would return\\nfalse for `Immutable.isIterable`) then they are deeply converted via\\n`Immutable.fromJS` before being merged. However, if the value is an\\nIterable but contains non-iterable JS objects or arrays, those nested\\nvalues will be preserved.\\n\\n    var x = Immutable.Map({a: 10, b: 20, c: 30});\\n    var y = Immutable.Map({b: 40, a: 50, d: 60});\\n    x.merge(y) // { a: 50, b: 40, c: 30, d: 60 }\\n    y.merge(x) // { b: 20, a: 10, d: 60, c: 30 }\\n\"]},\"mergeWith\":{\"impl\":{\"line\":1418,\"params\":[{\"name\":\"merger\",\"type\":{\"k\":6,\"params\":[{\"name\":\"previous\",\"optional\":true,\"type\":{\"k\":7,\"param\":\"V\"}},{\"name\":\"next\",\"optional\":true,\"type\":{\"k\":7,\"param\":\"V\"}}],\"type\":{\"k\":7,\"param\":\"V\"}}},{\"name\":\"iterables\",\"varArgs\":true,\"type\":{\"k\":5,\"type\":{\"k\":4,\"members\":[{\"index\":true,\"params\":[{\"name\":\"key\",\"type\":{\"k\":3}}],\"type\":{\"k\":7,\"param\":\"V\"}}]}}}],\"type\":{\"k\":8,\"name\":\"Map\",\"args\":[{\"k\":3},{\"k\":7,\"param\":\"V\"}]}},\"doc\":[\"Like `merge()`, `mergeWith()` returns a new Map resulting from merging\\nthe provided Iterables (or JS objects) into this Map, but uses the\\n`merger` function for dealing with conflicts.\\n\\n    var x = Immutable.Map({a: 10, b: 20, c: 30});\\n    var y = Immutable.Map({b: 40, a: 50, d: 60});\\n    x.mergeWith((prev, next) => prev / next, y) // { a: 0.2, b: 0.5, c: 30, d: 60 }\\n    y.mergeWith((prev, next) => prev / next, x) // { b: 2, a: 5, d: 60, c: 30 }\\n\"]},\"mergeIn\":{\"impl\":{\"line\":1440,\"params\":[{\"name\":\"keyPath\",\"type\":{\"k\":8,\"name\":\"Array\",\"args\":[{\"k\":0}]}},{\"name\":\"iterables\",\"varArgs\":true,\"type\":{\"k\":5,\"type\":{\"k\":4,\"members\":[{\"index\":true,\"params\":[{\"name\":\"key\",\"type\":{\"k\":3}}],\"type\":{\"k\":7,\"param\":\"V\"}}]}}}],\"type\":{\"k\":8,\"name\":\"Map\",\"args\":[{\"k\":3},{\"k\":7,\"param\":\"V\"}]}},\"doc\":[\"A combination of `updateIn` and `merge`, returning a new Map, but\\nperforming the merge at a point arrived at by following the keyPath.\\nIn other words, these two lines are equivalent:\\n\\n    x.updateIn(['a', 'b', 'c'], abc => abc.merge(y));\\n    x.mergeIn(['a', 'b', 'c'], y);\\n\"]},\"mergeDeep\":{\"impl\":{\"line\":1455,\"params\":[{\"name\":\"iterables\",\"varArgs\":true,\"type\":{\"k\":5,\"type\":{\"k\":4,\"members\":[{\"index\":true,\"params\":[{\"name\":\"key\",\"type\":{\"k\":3}}],\"type\":{\"k\":7,\"param\":\"V\"}}]}}}],\"type\":{\"k\":8,\"name\":\"Map\",\"args\":[{\"k\":3},{\"k\":7,\"param\":\"V\"}]}},\"doc\":[\"Like `merge()`, but when two Iterables conflict, it merges them as well,\\nrecursing deeply through the nested data.\\n\\n    var x = Immutable.fromJS({a: { x: 10, y: 10 }, b: { x: 20, y: 50 } });\\n    var y = Immutable.fromJS({a: { x: 2 }, b: { y: 5 }, c: { z: 3 } });\\n    x.mergeDeep(y) // {a: { x: 2, y: 10 }, b: { x: 20, y: 5 }, c: { z: 3 } }\\n\"]},\"mergeDeepWith\":{\"impl\":{\"line\":1471,\"params\":[{\"name\":\"merger\",\"type\":{\"k\":6,\"params\":[{\"name\":\"previous\",\"optional\":true,\"type\":{\"k\":7,\"param\":\"V\"}},{\"name\":\"next\",\"optional\":true,\"type\":{\"k\":7,\"param\":\"V\"}}],\"type\":{\"k\":7,\"param\":\"V\"}}},{\"name\":\"iterables\",\"varArgs\":true,\"type\":{\"k\":5,\"type\":{\"k\":4,\"members\":[{\"index\":true,\"params\":[{\"name\":\"key\",\"type\":{\"k\":3}}],\"type\":{\"k\":7,\"param\":\"V\"}}]}}}],\"type\":{\"k\":8,\"name\":\"Map\",\"args\":[{\"k\":3},{\"k\":7,\"param\":\"V\"}]}},\"doc\":[\"Like `mergeDeep()`, but when two non-Iterables conflict, it uses the\\n`merger` function to determine the resulting value.\\n\\n    var x = Immutable.fromJS({a: { x: 10, y: 10 }, b: { x: 20, y: 50 } });\\n    var y = Immutable.fromJS({a: { x: 2 }, b: { y: 5 }, c: { z: 3 } });\\n    x.mergeDeepWith((prev, next) => prev / next, y)\\n    // {a: { x: 5, y: 10 }, b: { x: 20, y: 10 }, c: { z: 3 } }\\n\"]},\"mergeDeepIn\":{\"impl\":{\"line\":1493,\"params\":[{\"name\":\"keyPath\",\"type\":{\"k\":8,\"name\":\"Array\",\"args\":[{\"k\":0}]}},{\"name\":\"iterables\",\"varArgs\":true,\"type\":{\"k\":5,\"type\":{\"k\":4,\"members\":[{\"index\":true,\"params\":[{\"name\":\"key\",\"type\":{\"k\":3}}],\"type\":{\"k\":7,\"param\":\"V\"}}]}}}],\"type\":{\"k\":8,\"name\":\"Map\",\"args\":[{\"k\":3},{\"k\":7,\"param\":\"V\"}]}},\"doc\":[\"A combination of `updateIn` and `mergeDeep`, returning a new Map, but\\nperforming the deep merge at a point arrived at by following the keyPath.\\nIn other words, these two lines are equivalent:\\n\\n    x.updateIn(['a', 'b', 'c'], abc => abc.mergeDeep(y));\\n    x.mergeDeepIn(['a', 'b', 'c'], y);\\n\"]},\"withMutations\":{\"impl\":{\"line\":1497,\"params\":[{\"name\":\"mutator\",\"type\":{\"k\":6,\"params\":[{\"name\":\"mutable\",\"type\":{\"k\":8,\"name\":\"Map\",\"args\":[{\"k\":7,\"param\":\"K\"},{\"k\":7,\"param\":\"V\"}]}}],\"type\":{\"k\":0}}}],\"type\":{\"k\":8,\"name\":\"Map\",\"args\":[{\"k\":7,\"param\":\"K\"},{\"k\":7,\"param\":\"V\"}]}},\"doc\":[\"Every time you call one of the above functions, a new immutable Map is\\ncreated. If a pure function calls a number of these to produce a final\\nreturn value, then a penalty on performance and memory has been paid by\\ncreating all of the intermediate immutable Maps.\\n\\nIf you need to apply a series of mutations to produce a new immutable\\nMap, `withMutations()` creates a temporary mutable copy of the Map which\\ncan apply mutations in a highly performant manner. In fact, this is\\nexactly how complex mutations like `merge` are done.\\n\\nAs an example, this results in the creation of 2, not 4, new Maps:\\n\\n    var map1 = Immutable.Map();\\n    var map2 = map1.withMutations(map => {\\n      map.set('a', 1).set('b', 2).set('c', 3);\\n    });\\n    assert(map1.size === 0);\\n    assert(map2.size === 3);\\n\"]},\"asMutable\":{\"impl\":{\"line\":1520,\"type\":{\"k\":8,\"name\":\"Map\",\"args\":[{\"k\":7,\"param\":\"K\"},{\"k\":7,\"param\":\"V\"}]}},\"doc\":[\"Another way to avoid creation of intermediate Immutable maps is to create\\na mutable copy of this collection. Mutable copies *always* return `this`,\\nand thus shouldn't be used for equality. Your function should never return\\na mutable copy of a collection, only use it internally to create a new\\ncollection. If possible, use `withMutations` as it provides an easier to\\nuse API.\\n\\nNote: if the collection is already mutable, `asMutable` returns itself.\"]},\"asImmutable\":{\"impl\":{\"line\":1532,\"type\":{\"k\":8,\"name\":\"Map\",\"args\":[{\"k\":7,\"param\":\"K\"},{\"k\":7,\"param\":\"V\"}]}},\"doc\":[\"The yin to `asMutable`'s yang. Because it applies to mutable collections,\\nthis operation is *mutable* and returns itself. Once performed, the mutable\\ncopy has become immutable and can be safely returned from a function.\"]}}}]}},\"OrderedMap\":{\"module\":{\"line\":1551,\"doc\":[\"Ordered Map\\n-----------\\n\\nOrderedMap constructors return a Map which has the additional guarantee of\\nthe iteration order of entries to match the order in which they were set().\\nThis makes OrderedMap behave similarly to native JS objects.\"],\"types\":{\"isOrderedMap\":{\"call\":{\"impl\":[{\"line\":1552,\"params\":[{\"name\":\"maybeOrderedMap\",\"type\":{\"k\":0}}],\"type\":{\"k\":1}}],\"doc\":[\"True if the provided value is an OrderedMap.\"]}}}},\"call\":{\"impl\":[{\"line\":1558,\"typeParams\":[\"K\",\"V\"],\"type\":{\"k\":8,\"name\":\"Map\",\"args\":[{\"k\":7,\"param\":\"K\"},{\"k\":7,\"param\":\"V\"}]}},{\"line\":1569,\"typeParams\":[\"K\",\"V\"],\"params\":[{\"name\":\"iter\",\"type\":{\"k\":8,\"name\":\"KeyedIterable\",\"args\":[{\"k\":7,\"param\":\"K\"},{\"k\":7,\"param\":\"V\"}]}}],\"type\":{\"k\":8,\"name\":\"Map\",\"args\":[{\"k\":7,\"param\":\"K\"},{\"k\":7,\"param\":\"V\"}]}},{\"line\":1570,\"typeParams\":[\"K\",\"V\"],\"params\":[{\"name\":\"iter\",\"type\":{\"k\":8,\"name\":\"Iterable\",\"args\":[{\"k\":0},{\"k\":8,\"name\":\"Array\",\"args\":[{\"k\":0}]}]}}],\"type\":{\"k\":8,\"name\":\"Map\",\"args\":[{\"k\":7,\"param\":\"K\"},{\"k\":7,\"param\":\"V\"}]}},{\"line\":1571,\"typeParams\":[\"K\",\"V\"],\"params\":[{\"name\":\"array\",\"type\":{\"k\":8,\"name\":\"Array\",\"args\":[{\"k\":8,\"name\":\"Array\",\"args\":[{\"k\":0}]}]}}],\"type\":{\"k\":8,\"name\":\"Map\",\"args\":[{\"k\":7,\"param\":\"K\"},{\"k\":7,\"param\":\"V\"}]}},{\"line\":1572,\"typeParams\":[\"V\"],\"params\":[{\"name\":\"obj\",\"type\":{\"k\":4,\"members\":[{\"index\":true,\"params\":[{\"name\":\"key\",\"type\":{\"k\":3}}],\"type\":{\"k\":7,\"param\":\"V\"}}]}}],\"type\":{\"k\":8,\"name\":\"Map\",\"args\":[{\"k\":3},{\"k\":7,\"param\":\"V\"}]}},{\"line\":1573,\"typeParams\":[\"K\",\"V\"],\"params\":[{\"name\":\"iterator\",\"type\":{\"k\":8,\"name\":\"Iterator\",\"args\":[{\"k\":8,\"name\":\"Array\",\"args\":[{\"k\":0}]}]}}],\"type\":{\"k\":8,\"name\":\"Map\",\"args\":[{\"k\":7,\"param\":\"K\"},{\"k\":7,\"param\":\"V\"}]}},{\"line\":1574,\"typeParams\":[\"K\",\"V\"],\"params\":[{\"name\":\"iterable\",\"type\":{\"k\":7,\"param\":\"Object\"}}],\"type\":{\"k\":8,\"name\":\"Map\",\"args\":[{\"k\":7,\"param\":\"K\"},{\"k\":7,\"param\":\"V\"}]}}],\"doc\":[\"`OrderedMap()` creates a new immutable ordered Map with the same key\\nvalue pairs as the provided KeyedIterable or JavaScript Object or expects\\nan Iterable of [K, V] tuple entries.\\n\\n    var newOrderedMap = OrderedMap({key: \\\"value\\\"});\\n    var newOrderedMap = OrderedMap([[\\\"key\\\", \\\"value\\\"]]);\\n\"]}},\"Record\":{\"call\":{\"impl\":[{\"line\":1575,\"params\":[{\"name\":\"defaultValues\",\"type\":{\"k\":4,\"members\":[{\"index\":true,\"params\":[{\"name\":\"key\",\"type\":{\"k\":3}}],\"type\":{\"k\":0}}]}},{\"name\":\"name\",\"optional\":true,\"type\":{\"k\":3}}],\"type\":{\"k\":7,\"param\":\"RecordType\"}}],\"doc\":[\"Record\\n------\\n\\nCreates a new Class which produces Record instances. A record is similar to\\na JS object, but enforce a specific set of allowed string keys, and have\\ndefault values.\\n\\n    var ABRecord = Record({a:1, b:2})\\n    var myRecord = new ABRecord({b:3})\\n\\nRecords always have a value for the keys they define. `remove`ing a key\\nfrom a record simply resets it to the default value for that key.\\n\\n    myRecord.size // 2\\n    myRecord.get('a') // 1\\n    myRecord.get('b') // 3\\n    myRecordWithoutB = myRecord.remove('b')\\n    myRecordWithoutB.get('b') // 2\\n    myRecordWithoutB.size // 2\\n\\nValues provided to the constructor not found in the Record type will\\nbe ignored:\\n\\n    var myRecord = new ABRecord({b:3, x:10})\\n    myRecord.get('x') // undefined\\n\\nBecause Records have a known set of string keys, property get access works\\nas expected, however property sets will throw an Error.\\n\\nNote: IE8 does not support property access.\\n\\n    myRecord.b // 3\\n    myRecord.b = 5 // throws Error\\n\\nRecord Classes can be extended as well, allowing for custom methods on your\\nRecord. This is not a common pattern in functional environments, but is in\\nmany JS programs.\\n\\nNote: TypeScript does not support this type of subclassing.\\n\\n    class ABRecord extends Record({a:1,b:2}) {\\n      getAB() {\\n        return this.a + this.b;\\n      }\\n    }\\n\\n    var myRecord = new ABRecord(b:3)\\n    myRecord.getAB() // 4\\n\"]}},\"RecordType\":{\"interface\":{\"line\":1631}},\"Set\":{\"module\":{\"line\":1653,\"doc\":[\"Set\\n---\\n\\nA Set is a Iterable of unique values with `O(log32 N)` gets and sets.\\n\\nSets, like Maps, require that their values are hashable, either a primitive\\n(string or number) or an object with a `hashCode(): number` method.\\n\\nWhen iterating a Set, the entries will be (value, value) pairs. Iteration\\norder of a Set is undefined, however is stable. Multiple iterations of the\\nsame Set will iterate in the same order.\"],\"types\":{\"isSet\":{\"call\":{\"impl\":[{\"line\":1654,\"params\":[{\"name\":\"maybeSet\",\"type\":{\"k\":0}}],\"type\":{\"k\":1}}],\"doc\":[\"True if the provided value is a Set\"]}},\"of\":{\"call\":{\"impl\":[{\"line\":1659,\"typeParams\":[\"T\"],\"params\":[{\"name\":\"values\",\"varArgs\":true,\"type\":{\"k\":5,\"type\":{\"k\":7,\"param\":\"T\"}}}],\"type\":{\"k\":8,\"name\":\"Set\",\"args\":[{\"k\":7,\"param\":\"T\"}]}}],\"doc\":[\"Creates a new Set containing `values`.\"]}},\"fromKeys\":{\"call\":{\"impl\":[{\"line\":1664,\"typeParams\":[\"T\"],\"params\":[{\"name\":\"iter\",\"type\":{\"k\":8,\"name\":\"Iterable\",\"args\":[{\"k\":7,\"param\":\"T\"},{\"k\":0}]}}],\"type\":{\"k\":8,\"name\":\"Set\",\"args\":[{\"k\":7,\"param\":\"T\"}]}},{\"line\":1670,\"params\":[{\"name\":\"obj\",\"type\":{\"k\":4,\"members\":[{\"index\":true,\"params\":[{\"name\":\"key\",\"type\":{\"k\":3}}],\"type\":{\"k\":0}}]}}],\"type\":{\"k\":8,\"name\":\"Set\",\"args\":[{\"k\":3}]}}],\"doc\":[\"`Set.fromKeys()` creates a new immutable Set containing the keys from\\nthis Iterable or JavaScript Object.\"]}}}},\"call\":{\"impl\":[{\"line\":1672,\"typeParams\":[\"T\"],\"type\":{\"k\":8,\"name\":\"Set\",\"args\":[{\"k\":7,\"param\":\"T\"}]}},{\"line\":1678,\"typeParams\":[\"T\"],\"params\":[{\"name\":\"iter\",\"type\":{\"k\":8,\"name\":\"SetIterable\",\"args\":[{\"k\":7,\"param\":\"T\"}]}}],\"type\":{\"k\":8,\"name\":\"Set\",\"args\":[{\"k\":7,\"param\":\"T\"}]}},{\"line\":1679,\"typeParams\":[\"T\"],\"params\":[{\"name\":\"iter\",\"type\":{\"k\":8,\"name\":\"IndexedIterable\",\"args\":[{\"k\":7,\"param\":\"T\"}]}}],\"type\":{\"k\":8,\"name\":\"Set\",\"args\":[{\"k\":7,\"param\":\"T\"}]}},{\"line\":1680,\"typeParams\":[\"K\",\"V\"],\"params\":[{\"name\":\"iter\",\"type\":{\"k\":8,\"name\":\"KeyedIterable\",\"args\":[{\"k\":7,\"param\":\"K\"},{\"k\":7,\"param\":\"V\"}]}}],\"type\":{\"k\":8,\"name\":\"Set\",\"args\":[{\"k\":0}]}},{\"line\":1681,\"typeParams\":[\"T\"],\"params\":[{\"name\":\"array\",\"type\":{\"k\":8,\"name\":\"Array\",\"args\":[{\"k\":7,\"param\":\"T\"}]}}],\"type\":{\"k\":8,\"name\":\"Set\",\"args\":[{\"k\":7,\"param\":\"T\"}]}},{\"line\":1682,\"typeParams\":[\"T\"],\"params\":[{\"name\":\"iterator\",\"type\":{\"k\":8,\"name\":\"Iterator\",\"args\":[{\"k\":7,\"param\":\"T\"}]}}],\"type\":{\"k\":8,\"name\":\"Set\",\"args\":[{\"k\":7,\"param\":\"T\"}]}},{\"line\":1683,\"typeParams\":[\"T\"],\"params\":[{\"name\":\"iterable\",\"type\":{\"k\":7,\"param\":\"Object\"}}],\"type\":{\"k\":8,\"name\":\"Set\",\"args\":[{\"k\":7,\"param\":\"T\"}]}}],\"doc\":[\"Create a new immutable Set containing the values of the provided\\niterable-like.\"]},\"interface\":{\"line\":1684,\"typeParams\":[\"T\"],\"extends\":[{\"k\":8,\"name\":\"SetCollection\",\"args\":[{\"k\":7,\"param\":\"T\"}]}],\"groups\":[{\"methods\":{\"add\":{\"impl\":{\"line\":1687,\"params\":[{\"name\":\"value\",\"type\":{\"k\":7,\"param\":\"T\"}}],\"type\":{\"k\":8,\"name\":\"Set\",\"args\":[{\"k\":7,\"param\":\"T\"}]}},\"doc\":[\"Returns a new Set which also includes this value.\"]},\"remove\":{\"impl\":{\"line\":1692,\"params\":[{\"name\":\"value\",\"type\":{\"k\":7,\"param\":\"T\"}}],\"type\":{\"k\":8,\"name\":\"Set\",\"args\":[{\"k\":7,\"param\":\"T\"}]}},\"doc\":[\"Returns a new Set which excludes this value.\\n\\nNote: `delete` cannot be safely used in IE8\\n@alias delete\"]},\"delete\":{\"impl\":{\"line\":1700,\"params\":[{\"name\":\"value\",\"type\":{\"k\":7,\"param\":\"T\"}}],\"type\":{\"k\":8,\"name\":\"Set\",\"args\":[{\"k\":7,\"param\":\"T\"}]}}},\"clear\":{\"impl\":{\"line\":1701,\"type\":{\"k\":8,\"name\":\"Set\",\"args\":[{\"k\":7,\"param\":\"T\"}]}},\"doc\":[\"Returns a new Set containing no values.\"]},\"merge\":{\"impl\":{\"line\":1712,\"params\":[{\"name\":\"iterables\",\"varArgs\":true,\"type\":{\"k\":5,\"type\":{\"k\":8,\"name\":\"Array\",\"args\":[{\"k\":7,\"param\":\"T\"}]}}}],\"type\":{\"k\":8,\"name\":\"Set\",\"args\":[{\"k\":7,\"param\":\"T\"}]}},\"doc\":[\"Alias for `union`.\\n@see `Map.prototype.merge`\"]},\"union\":{\"impl\":{\"line\":1719,\"params\":[{\"name\":\"iterables\",\"varArgs\":true,\"type\":{\"k\":5,\"type\":{\"k\":8,\"name\":\"Array\",\"args\":[{\"k\":7,\"param\":\"T\"}]}}}],\"type\":{\"k\":8,\"name\":\"Set\",\"args\":[{\"k\":7,\"param\":\"T\"}]}},\"doc\":[\"Returns a Set including any value from `iterables` that does not already\\nexist in this Set.\"]},\"intersect\":{\"impl\":{\"line\":1726,\"params\":[{\"name\":\"iterables\",\"varArgs\":true,\"type\":{\"k\":5,\"type\":{\"k\":8,\"name\":\"Array\",\"args\":[{\"k\":7,\"param\":\"T\"}]}}}],\"type\":{\"k\":8,\"name\":\"Set\",\"args\":[{\"k\":7,\"param\":\"T\"}]}},\"doc\":[\"Returns a Set which has removed any values not also contained\\nwithin `iterables`.\"]},\"subtract\":{\"impl\":{\"line\":1732,\"params\":[{\"name\":\"iterables\",\"varArgs\":true,\"type\":{\"k\":5,\"type\":{\"k\":8,\"name\":\"Array\",\"args\":[{\"k\":7,\"param\":\"T\"}]}}}],\"type\":{\"k\":8,\"name\":\"Set\",\"args\":[{\"k\":7,\"param\":\"T\"}]}},\"doc\":[\"Returns a Set excluding any values contained within `iterables`.\"]},\"withMutations\":{\"impl\":{\"line\":1733,\"params\":[{\"name\":\"mutator\",\"type\":{\"k\":6,\"params\":[{\"name\":\"mutable\",\"type\":{\"k\":8,\"name\":\"Set\",\"args\":[{\"k\":7,\"param\":\"T\"}]}}],\"type\":{\"k\":0}}}],\"type\":{\"k\":8,\"name\":\"Set\",\"args\":[{\"k\":7,\"param\":\"T\"}]}},\"doc\":[\"@see `Map.prototype.withMutations`\"]},\"asMutable\":{\"impl\":{\"line\":1738,\"type\":{\"k\":8,\"name\":\"Set\",\"args\":[{\"k\":7,\"param\":\"T\"}]}},\"doc\":[\"@see `Map.prototype.asMutable`\"]},\"asImmutable\":{\"impl\":{\"line\":1743,\"type\":{\"k\":8,\"name\":\"Set\",\"args\":[{\"k\":7,\"param\":\"T\"}]}},\"doc\":[\"@see `Map.prototype.asImmutable`\"]}}}]}},\"OrderedSet\":{\"module\":{\"line\":1760,\"doc\":[\"Ordered Set\\n-----------\\n\\nOrderedSet constructors return a Set which has the additional guarantee of\\nthe iteration order of entries to match the order in which they were added.\\nThis makes OrderedSet behave similarly to native JS objects or arrays.\"],\"types\":{\"isOrderedSet\":{\"call\":{\"impl\":[{\"line\":1761,\"params\":[{\"name\":\"maybeOrderedSet\",\"type\":{\"k\":0}}],\"type\":{\"k\":1}}],\"doc\":[\"True if the provided value is an OrderedSet.\"]}},\"of\":{\"call\":{\"impl\":[{\"line\":1766,\"typeParams\":[\"T\"],\"params\":[{\"name\":\"values\",\"varArgs\":true,\"type\":{\"k\":5,\"type\":{\"k\":7,\"param\":\"T\"}}}],\"type\":{\"k\":8,\"name\":\"Set\",\"args\":[{\"k\":7,\"param\":\"T\"}]}}],\"doc\":[\"Creates a new ordered Set containing `values`.\"]}},\"fromKeys\":{\"call\":{\"impl\":[{\"line\":1771,\"typeParams\":[\"T\"],\"params\":[{\"name\":\"iter\",\"type\":{\"k\":8,\"name\":\"Iterable\",\"args\":[{\"k\":7,\"param\":\"T\"},{\"k\":0}]}}],\"type\":{\"k\":8,\"name\":\"Set\",\"args\":[{\"k\":7,\"param\":\"T\"}]}},{\"line\":1777,\"params\":[{\"name\":\"obj\",\"type\":{\"k\":4,\"members\":[{\"index\":true,\"params\":[{\"name\":\"key\",\"type\":{\"k\":3}}],\"type\":{\"k\":0}}]}}],\"type\":{\"k\":8,\"name\":\"Set\",\"args\":[{\"k\":3}]}}],\"doc\":[\"`OrderedSet.fromKeys()` creates a new immutable ordered Set containing\\nthe keys from this Iterable or JavaScript Object.\"]}}}},\"call\":{\"impl\":[{\"line\":1779,\"typeParams\":[\"T\"],\"type\":{\"k\":8,\"name\":\"Set\",\"args\":[{\"k\":7,\"param\":\"T\"}]}},{\"line\":1785,\"typeParams\":[\"T\"],\"params\":[{\"name\":\"iter\",\"type\":{\"k\":8,\"name\":\"SetIterable\",\"args\":[{\"k\":7,\"param\":\"T\"}]}}],\"type\":{\"k\":8,\"name\":\"Set\",\"args\":[{\"k\":7,\"param\":\"T\"}]}},{\"line\":1786,\"typeParams\":[\"T\"],\"params\":[{\"name\":\"iter\",\"type\":{\"k\":8,\"name\":\"IndexedIterable\",\"args\":[{\"k\":7,\"param\":\"T\"}]}}],\"type\":{\"k\":8,\"name\":\"Set\",\"args\":[{\"k\":7,\"param\":\"T\"}]}},{\"line\":1787,\"typeParams\":[\"K\",\"V\"],\"params\":[{\"name\":\"iter\",\"type\":{\"k\":8,\"name\":\"KeyedIterable\",\"args\":[{\"k\":7,\"param\":\"K\"},{\"k\":7,\"param\":\"V\"}]}}],\"type\":{\"k\":8,\"name\":\"Set\",\"args\":[{\"k\":0}]}},{\"line\":1788,\"typeParams\":[\"T\"],\"params\":[{\"name\":\"array\",\"type\":{\"k\":8,\"name\":\"Array\",\"args\":[{\"k\":7,\"param\":\"T\"}]}}],\"type\":{\"k\":8,\"name\":\"Set\",\"args\":[{\"k\":7,\"param\":\"T\"}]}},{\"line\":1789,\"typeParams\":[\"T\"],\"params\":[{\"name\":\"iterator\",\"type\":{\"k\":8,\"name\":\"Iterator\",\"args\":[{\"k\":7,\"param\":\"T\"}]}}],\"type\":{\"k\":8,\"name\":\"Set\",\"args\":[{\"k\":7,\"param\":\"T\"}]}},{\"line\":1790,\"typeParams\":[\"T\"],\"params\":[{\"name\":\"iterable\",\"type\":{\"k\":7,\"param\":\"Object\"}}],\"type\":{\"k\":8,\"name\":\"Set\",\"args\":[{\"k\":7,\"param\":\"T\"}]}}],\"doc\":[\"Create a new immutable ordered Set containing the values of the provided\\niterable-like.\"]}},\"List\":{\"module\":{\"line\":1803,\"doc\":[\"List\\n------\\n\\nLists are ordered indexed dense collections, much like a JavaScript\\nArray. Unlike a JavaScript Array, there is no distinction between an\\n\\\"unset\\\" index and an index set to `undefined`. `List#forEach` visits all\\nindices from 0 to size, regardless of if they are defined.\"],\"types\":{\"isList\":{\"call\":{\"impl\":[{\"line\":1804,\"params\":[{\"name\":\"maybeList\",\"type\":{\"k\":0}}],\"type\":{\"k\":1}}],\"doc\":[\"True if the provided value is a List\"]}},\"of\":{\"call\":{\"impl\":[{\"line\":1809,\"typeParams\":[\"T\"],\"params\":[{\"name\":\"values\",\"varArgs\":true,\"type\":{\"k\":5,\"type\":{\"k\":7,\"param\":\"T\"}}}],\"type\":{\"k\":8,\"name\":\"List\",\"args\":[{\"k\":7,\"param\":\"T\"}]}}],\"doc\":[\"Creates a new List containing `values`.\"]}}}},\"call\":{\"impl\":[{\"line\":1815,\"typeParams\":[\"T\"],\"type\":{\"k\":8,\"name\":\"List\",\"args\":[{\"k\":7,\"param\":\"T\"}]}},{\"line\":1821,\"typeParams\":[\"T\"],\"params\":[{\"name\":\"iter\",\"type\":{\"k\":8,\"name\":\"IndexedIterable\",\"args\":[{\"k\":7,\"param\":\"T\"}]}}],\"type\":{\"k\":8,\"name\":\"List\",\"args\":[{\"k\":7,\"param\":\"T\"}]}},{\"line\":1822,\"typeParams\":[\"T\"],\"params\":[{\"name\":\"iter\",\"type\":{\"k\":8,\"name\":\"SetIterable\",\"args\":[{\"k\":7,\"param\":\"T\"}]}}],\"type\":{\"k\":8,\"name\":\"List\",\"args\":[{\"k\":7,\"param\":\"T\"}]}},{\"line\":1823,\"typeParams\":[\"K\",\"V\"],\"params\":[{\"name\":\"iter\",\"type\":{\"k\":8,\"name\":\"KeyedIterable\",\"args\":[{\"k\":7,\"param\":\"K\"},{\"k\":7,\"param\":\"V\"}]}}],\"type\":{\"k\":8,\"name\":\"List\",\"args\":[{\"k\":0}]}},{\"line\":1824,\"typeParams\":[\"T\"],\"params\":[{\"name\":\"array\",\"type\":{\"k\":8,\"name\":\"Array\",\"args\":[{\"k\":7,\"param\":\"T\"}]}}],\"type\":{\"k\":8,\"name\":\"List\",\"args\":[{\"k\":7,\"param\":\"T\"}]}},{\"line\":1825,\"typeParams\":[\"T\"],\"params\":[{\"name\":\"iterator\",\"type\":{\"k\":8,\"name\":\"Iterator\",\"args\":[{\"k\":7,\"param\":\"T\"}]}}],\"type\":{\"k\":8,\"name\":\"List\",\"args\":[{\"k\":7,\"param\":\"T\"}]}},{\"line\":1826,\"typeParams\":[\"T\"],\"params\":[{\"name\":\"iterable\",\"type\":{\"k\":7,\"param\":\"Object\"}}],\"type\":{\"k\":8,\"name\":\"List\",\"args\":[{\"k\":7,\"param\":\"T\"}]}}],\"doc\":[\"Create a new immutable List containing the values of the provided\\niterable-like.\"]},\"interface\":{\"line\":1827,\"typeParams\":[\"T\"],\"extends\":[{\"k\":8,\"name\":\"IndexedCollection\",\"args\":[{\"k\":7,\"param\":\"T\"}]}],\"groups\":[{\"methods\":{\"set\":{\"impl\":{\"line\":1830,\"params\":[{\"name\":\"index\",\"type\":{\"k\":2}},{\"name\":\"value\",\"type\":{\"k\":7,\"param\":\"T\"}}],\"type\":{\"k\":8,\"name\":\"List\",\"args\":[{\"k\":7,\"param\":\"T\"}]}},\"doc\":[\"Returns a new List which includes `value` at `index`. If `index` already\\nexists in this List, it will be replaced.\\n\\n`index` may be a negative number, which indexes back from the end of the\\nList. `v.set(-1, \\\"value\\\")` sets the last item in the List.\"]},\"setIn\":{\"impl\":{\"line\":1845,\"params\":[{\"name\":\"keyPath\",\"type\":{\"k\":8,\"name\":\"Iterable\",\"args\":[{\"k\":0},{\"k\":0}]}},{\"name\":\"value\",\"type\":{\"k\":7,\"param\":\"T\"}}],\"type\":{\"k\":8,\"name\":\"List\",\"args\":[{\"k\":7,\"param\":\"T\"}]}},\"doc\":[\"Returns a new List having set `value` at this `keyPath`. If any keys in\\n`keyPath` do not exist, a new immutable Map will be created at that key.\"]},\"remove\":{\"impl\":{\"line\":1846,\"params\":[{\"name\":\"index\",\"type\":{\"k\":2}}],\"type\":{\"k\":8,\"name\":\"List\",\"args\":[{\"k\":7,\"param\":\"T\"}]}},\"doc\":[\"Returns a new List which excludes this `index` and with a size 1 less\\nthan this List. Values at indicies above `index` are shifted down by 1 to\\nfill the position.\\n\\nThis is synonymous with `list.splice(index, 1)`.\\n\\n`index` may be a negative number, which indexes back from the end of the\\nList. `v.delete(-1)` deletes the last item in the List.\\n\\nNote: `delete` cannot be safely used in IE8\\n@alias delete\"]},\"delete\":{\"impl\":{\"line\":1861,\"params\":[{\"name\":\"index\",\"type\":{\"k\":2}}],\"type\":{\"k\":8,\"name\":\"List\",\"args\":[{\"k\":7,\"param\":\"T\"}]}}},\"removeIn\":{\"impl\":{\"line\":1869,\"params\":[{\"name\":\"keyPath\",\"type\":{\"k\":8,\"name\":\"Iterable\",\"args\":[{\"k\":0},{\"k\":0}]}}],\"type\":{\"k\":8,\"name\":\"List\",\"args\":[{\"k\":7,\"param\":\"T\"}]}},\"doc\":[\"Returns a new List having removed the value at this `keyPath`. If any\\nkeys in `keyPath` do not exist, a new immutable Map will be created at\\nthat key.\"]},\"clear\":{\"impl\":{\"line\":1870,\"type\":{\"k\":8,\"name\":\"List\",\"args\":[{\"k\":7,\"param\":\"T\"}]}},\"doc\":[\"Returns a new List with 0 size and no values.\"]},\"push\":{\"impl\":{\"line\":1875,\"params\":[{\"name\":\"values\",\"varArgs\":true,\"type\":{\"k\":5,\"type\":{\"k\":7,\"param\":\"T\"}}}],\"type\":{\"k\":8,\"name\":\"List\",\"args\":[{\"k\":7,\"param\":\"T\"}]}},\"doc\":[\"Returns a new List with the provided `values` appended, starting at this\\nList's `size`.\"]},\"pop\":{\"impl\":{\"line\":1881,\"type\":{\"k\":8,\"name\":\"List\",\"args\":[{\"k\":7,\"param\":\"T\"}]}},\"doc\":[\"Returns a new List with a size ones less than this List, excluding\\nthe last index in this List.\\n\\nNote: this differs from `Array.prototype.pop` because it returns a new\\nList rather than the removed value. Use `last()` to get the last value\\nin this List.\"]},\"unshift\":{\"impl\":{\"line\":1891,\"params\":[{\"name\":\"values\",\"varArgs\":true,\"type\":{\"k\":5,\"type\":{\"k\":7,\"param\":\"T\"}}}],\"type\":{\"k\":8,\"name\":\"List\",\"args\":[{\"k\":7,\"param\":\"T\"}]}},\"doc\":[\"Returns a new List with the provided `values` prepended, shifting other\\nvalues ahead to higher indices.\"]},\"shift\":{\"impl\":{\"line\":1897,\"type\":{\"k\":8,\"name\":\"List\",\"args\":[{\"k\":7,\"param\":\"T\"}]}},\"doc\":[\"Returns a new List with a size ones less than this List, excluding\\nthe first index in this List, shifting all other values to a lower index.\\n\\nNote: this differs from `Array.prototype.shift` because it returns a new\\nList rather than the removed value. Use `first()` to get the first\\nvalue in this List.\"]},\"update\":{\"impl\":{\"line\":1921,\"params\":[{\"name\":\"index\",\"type\":{\"k\":2}},{\"name\":\"notSetValue\",\"type\":{\"k\":7,\"param\":\"T\"}},{\"name\":\"updater\",\"type\":{\"k\":6,\"params\":[{\"name\":\"value\",\"type\":{\"k\":7,\"param\":\"T\"}}],\"type\":{\"k\":7,\"param\":\"T\"}}}],\"type\":{\"k\":8,\"name\":\"List\",\"args\":[{\"k\":7,\"param\":\"T\"}]}},\"doc\":[\"Returns a new List with an updated value at `index` with the return\\nvalue of calling `updater` with the existing value, or `notSetValue` if\\n`index` was not set. If called with a single argument, `updater` is\\ncalled with the List itself.\\n\\n`index` may be a negative number, which indexes back from the end of the\\nList. `v.update(-1)` updates the last item in the List.\\n\\n@see Map.update\"]},\"updateIn\":{\"impl\":{\"line\":1939,\"params\":[{\"name\":\"keyPath\",\"type\":{\"k\":8,\"name\":\"Iterable\",\"args\":[{\"k\":0},{\"k\":0}]}},{\"name\":\"notSetValue\",\"type\":{\"k\":0}},{\"name\":\"updater\",\"type\":{\"k\":6,\"params\":[{\"name\":\"value\",\"type\":{\"k\":0}}],\"type\":{\"k\":0}}}],\"type\":{\"k\":8,\"name\":\"List\",\"args\":[{\"k\":7,\"param\":\"T\"}]}},\"doc\":[\"@see `Map.prototype.updateIn`\"]},\"merge\":{\"impl\":{\"line\":1949,\"params\":[{\"name\":\"iterables\",\"varArgs\":true,\"type\":{\"k\":5,\"type\":{\"k\":8,\"name\":\"Array\",\"args\":[{\"k\":7,\"param\":\"T\"}]}}}],\"type\":{\"k\":8,\"name\":\"List\",\"args\":[{\"k\":7,\"param\":\"T\"}]}},\"doc\":[\"@see `Map.prototype.merge`\"]},\"mergeWith\":{\"impl\":{\"line\":1958,\"params\":[{\"name\":\"merger\",\"type\":{\"k\":6,\"params\":[{\"name\":\"previous\",\"optional\":true,\"type\":{\"k\":7,\"param\":\"T\"}},{\"name\":\"next\",\"optional\":true,\"type\":{\"k\":7,\"param\":\"T\"}}],\"type\":{\"k\":7,\"param\":\"T\"}}},{\"name\":\"iterables\",\"varArgs\":true,\"type\":{\"k\":5,\"type\":{\"k\":8,\"name\":\"Array\",\"args\":[{\"k\":7,\"param\":\"T\"}]}}}],\"type\":{\"k\":8,\"name\":\"List\",\"args\":[{\"k\":7,\"param\":\"T\"}]}},\"doc\":[\"@see `Map.prototype.mergeWith`\"]},\"mergeIn\":{\"impl\":{\"line\":1974,\"params\":[{\"name\":\"keyPath\",\"type\":{\"k\":8,\"name\":\"Array\",\"args\":[{\"k\":0}]}},{\"name\":\"iterables\",\"varArgs\":true,\"type\":{\"k\":5,\"type\":{\"k\":8,\"name\":\"Array\",\"args\":[{\"k\":7,\"param\":\"T\"}]}}}],\"type\":{\"k\":8,\"name\":\"List\",\"args\":[{\"k\":7,\"param\":\"T\"}]}},\"doc\":[\"@see `Map.prototype.mergeIn`\"]},\"mergeDeep\":{\"impl\":{\"line\":1983,\"params\":[{\"name\":\"iterables\",\"varArgs\":true,\"type\":{\"k\":5,\"type\":{\"k\":8,\"name\":\"Array\",\"args\":[{\"k\":7,\"param\":\"T\"}]}}}],\"type\":{\"k\":8,\"name\":\"List\",\"args\":[{\"k\":7,\"param\":\"T\"}]}},\"doc\":[\"@see `Map.prototype.mergeDeep`\"]},\"mergeDeepWith\":{\"impl\":{\"line\":1992,\"params\":[{\"name\":\"merger\",\"type\":{\"k\":6,\"params\":[{\"name\":\"previous\",\"optional\":true,\"type\":{\"k\":7,\"param\":\"T\"}},{\"name\":\"next\",\"optional\":true,\"type\":{\"k\":7,\"param\":\"T\"}}],\"type\":{\"k\":7,\"param\":\"T\"}}},{\"name\":\"iterables\",\"varArgs\":true,\"type\":{\"k\":5,\"type\":{\"k\":8,\"name\":\"Array\",\"args\":[{\"k\":7,\"param\":\"T\"}]}}}],\"type\":{\"k\":8,\"name\":\"List\",\"args\":[{\"k\":7,\"param\":\"T\"}]}},\"doc\":[\"@see `Map.prototype.mergeDeepWith`\"]},\"mergeDeepIn\":{\"impl\":{\"line\":2008,\"params\":[{\"name\":\"keyPath\",\"type\":{\"k\":8,\"name\":\"Array\",\"args\":[{\"k\":0}]}},{\"name\":\"iterables\",\"varArgs\":true,\"type\":{\"k\":5,\"type\":{\"k\":8,\"name\":\"Array\",\"args\":[{\"k\":7,\"param\":\"T\"}]}}}],\"type\":{\"k\":8,\"name\":\"List\",\"args\":[{\"k\":7,\"param\":\"T\"}]}},\"doc\":[\"@see `Map.prototype.mergeDeepIn`\"]},\"setSize\":{\"impl\":{\"line\":2012,\"params\":[{\"name\":\"size\",\"type\":{\"k\":2}}],\"type\":{\"k\":8,\"name\":\"List\",\"args\":[{\"k\":7,\"param\":\"T\"}]}},\"doc\":[\"Returns a new List with size `size`. If `size` is less than this\\nList's size, the new List will exclude values at the higher indices.\\nIf `size` is greater than this List's size, the new List will have\\nundefined values for the newly available indices.\"]},\"withMutations\":{\"impl\":{\"line\":2020,\"params\":[{\"name\":\"mutator\",\"type\":{\"k\":6,\"params\":[{\"name\":\"mutable\",\"type\":{\"k\":8,\"name\":\"List\",\"args\":[{\"k\":7,\"param\":\"T\"}]}}],\"type\":{\"k\":0}}}],\"type\":{\"k\":8,\"name\":\"List\",\"args\":[{\"k\":7,\"param\":\"T\"}]}},\"doc\":[\"@see `Map.prototype.withMutations`\"]},\"asMutable\":{\"impl\":{\"line\":2025,\"type\":{\"k\":8,\"name\":\"List\",\"args\":[{\"k\":7,\"param\":\"T\"}]}},\"doc\":[\"@see `Map.prototype.asMutable`\"]},\"asImmutable\":{\"impl\":{\"line\":2030,\"type\":{\"k\":8,\"name\":\"List\",\"args\":[{\"k\":7,\"param\":\"T\"}]}},\"doc\":[\"@see `Map.prototype.asImmutable`\"]}}}]}},\"Stack\":{\"module\":{\"line\":2050,\"doc\":[\"Stack\\n-----\\n\\nStacks are indexed collections which support very efficient addition and\\nremoval from the front using `unshift(v)` and `shift()`.\\n\\nFor familiarity, Stack also provides `push(v)`, `pop()`, and `peek()`, but\\nbe aware that they also operate on the front of the list, unlike List or\\na JavaScript Array.\"],\"types\":{\"isStack\":{\"call\":{\"impl\":[{\"line\":2051,\"params\":[{\"name\":\"maybeStack\",\"type\":{\"k\":0}}],\"type\":{\"k\":1}}],\"doc\":[\"True if the provided value is a Stack\"]}},\"of\":{\"call\":{\"impl\":[{\"line\":2056,\"typeParams\":[\"T\"],\"params\":[{\"name\":\"values\",\"varArgs\":true,\"type\":{\"k\":5,\"type\":{\"k\":7,\"param\":\"T\"}}}],\"type\":{\"k\":8,\"name\":\"Stack\",\"args\":[{\"k\":7,\"param\":\"T\"}]}}],\"doc\":[\"Creates a new Stack containing `values`.\"]}}}},\"call\":{\"impl\":[{\"line\":2062,\"typeParams\":[\"T\"],\"type\":{\"k\":8,\"name\":\"Stack\",\"args\":[{\"k\":7,\"param\":\"T\"}]}},{\"line\":2068,\"typeParams\":[\"T\"],\"params\":[{\"name\":\"iter\",\"type\":{\"k\":8,\"name\":\"IndexedIterable\",\"args\":[{\"k\":7,\"param\":\"T\"}]}}],\"type\":{\"k\":8,\"name\":\"Stack\",\"args\":[{\"k\":7,\"param\":\"T\"}]}},{\"line\":2069,\"typeParams\":[\"T\"],\"params\":[{\"name\":\"iter\",\"type\":{\"k\":8,\"name\":\"SetIterable\",\"args\":[{\"k\":7,\"param\":\"T\"}]}}],\"type\":{\"k\":8,\"name\":\"Stack\",\"args\":[{\"k\":7,\"param\":\"T\"}]}},{\"line\":2070,\"typeParams\":[\"K\",\"V\"],\"params\":[{\"name\":\"iter\",\"type\":{\"k\":8,\"name\":\"KeyedIterable\",\"args\":[{\"k\":7,\"param\":\"K\"},{\"k\":7,\"param\":\"V\"}]}}],\"type\":{\"k\":8,\"name\":\"Stack\",\"args\":[{\"k\":0}]}},{\"line\":2071,\"typeParams\":[\"T\"],\"params\":[{\"name\":\"array\",\"type\":{\"k\":8,\"name\":\"Array\",\"args\":[{\"k\":7,\"param\":\"T\"}]}}],\"type\":{\"k\":8,\"name\":\"Stack\",\"args\":[{\"k\":7,\"param\":\"T\"}]}},{\"line\":2072,\"typeParams\":[\"T\"],\"params\":[{\"name\":\"iterator\",\"type\":{\"k\":8,\"name\":\"Iterator\",\"args\":[{\"k\":7,\"param\":\"T\"}]}}],\"type\":{\"k\":8,\"name\":\"Stack\",\"args\":[{\"k\":7,\"param\":\"T\"}]}},{\"line\":2073,\"typeParams\":[\"T\"],\"params\":[{\"name\":\"iterable\",\"type\":{\"k\":7,\"param\":\"Object\"}}],\"type\":{\"k\":8,\"name\":\"Stack\",\"args\":[{\"k\":7,\"param\":\"T\"}]}}],\"doc\":[\"Create a new immutable Stack containing the values of the provided\\niterable.\"]},\"interface\":{\"line\":2074,\"typeParams\":[\"T\"],\"extends\":[{\"k\":8,\"name\":\"IndexedCollection\",\"args\":[{\"k\":7,\"param\":\"T\"}]}],\"groups\":[{\"methods\":{\"clear\":{\"impl\":{\"line\":2077,\"type\":{\"k\":8,\"name\":\"Stack\",\"args\":[{\"k\":7,\"param\":\"T\"}]}},\"doc\":[\"Returns a new Stack with 0 size and no values.\"]},\"unshift\":{\"impl\":{\"line\":2082,\"params\":[{\"name\":\"values\",\"varArgs\":true,\"type\":{\"k\":5,\"type\":{\"k\":7,\"param\":\"T\"}}}],\"type\":{\"k\":8,\"name\":\"Stack\",\"args\":[{\"k\":7,\"param\":\"T\"}]}},\"doc\":[\"Returns a new Stack with the provided `values` prepended, shifting other\\nvalues ahead to higher indices.\\n\\nThis is very efficient for Stack.\"]},\"unshiftAll\":{\"impl\":{\"line\":2095,\"params\":[{\"name\":\"iter\",\"type\":{\"k\":8,\"name\":\"Array\",\"args\":[{\"k\":7,\"param\":\"T\"}]}}],\"type\":{\"k\":8,\"name\":\"Stack\",\"args\":[{\"k\":7,\"param\":\"T\"}]}},\"doc\":[\"Like `Stack#unshift`, but accepts a iterable rather than varargs.\"]},\"shift\":{\"impl\":{\"line\":2096,\"type\":{\"k\":8,\"name\":\"Stack\",\"args\":[{\"k\":7,\"param\":\"T\"}]}},\"doc\":[\"Returns a new Stack with a size ones less than this Stack, excluding\\nthe first item in this Stack, shifting all other values to a lower index.\\n\\nNote: this differs from `Array.prototype.shift` because it returns a new\\nStack rather than the removed value. Use `first()` or `peek()` to get the\\nfirst value in this Stack.\"]},\"push\":{\"impl\":{\"line\":2106,\"params\":[{\"name\":\"values\",\"varArgs\":true,\"type\":{\"k\":5,\"type\":{\"k\":7,\"param\":\"T\"}}}],\"type\":{\"k\":8,\"name\":\"Stack\",\"args\":[{\"k\":7,\"param\":\"T\"}]}},\"doc\":[\"Alias for `Stack#unshift` and is not equivalent to `List#push`.\"]},\"pushAll\":{\"impl\":{\"line\":2116,\"params\":[{\"name\":\"iter\",\"type\":{\"k\":8,\"name\":\"Array\",\"args\":[{\"k\":7,\"param\":\"T\"}]}}],\"type\":{\"k\":8,\"name\":\"Stack\",\"args\":[{\"k\":7,\"param\":\"T\"}]}},\"doc\":[\"Alias for `Stack#unshiftAll`.\"]},\"pop\":{\"impl\":{\"line\":2117,\"type\":{\"k\":8,\"name\":\"Stack\",\"args\":[{\"k\":7,\"param\":\"T\"}]}},\"doc\":[\"Alias for `Stack#shift` and is not equivalent to `List#pop`.\"]},\"peek\":{\"impl\":{\"line\":2122,\"type\":{\"k\":7,\"param\":\"T\"}},\"doc\":[\"Alias for `Stack.first()`.\"]},\"withMutations\":{\"impl\":{\"line\":2127,\"params\":[{\"name\":\"mutator\",\"type\":{\"k\":6,\"params\":[{\"name\":\"mutable\",\"type\":{\"k\":8,\"name\":\"List\",\"args\":[{\"k\":7,\"param\":\"T\"}]}}],\"type\":{\"k\":0}}}],\"type\":{\"k\":8,\"name\":\"List\",\"args\":[{\"k\":7,\"param\":\"T\"}]}},\"doc\":[\"@see `Map.prototype.withMutations`\"]},\"asMutable\":{\"impl\":{\"line\":2132,\"type\":{\"k\":8,\"name\":\"List\",\"args\":[{\"k\":7,\"param\":\"T\"}]}},\"doc\":[\"@see `Map.prototype.asMutable`\"]},\"asImmutable\":{\"impl\":{\"line\":2137,\"type\":{\"k\":8,\"name\":\"List\",\"args\":[{\"k\":7,\"param\":\"T\"}]}},\"doc\":[\"@see `Map.prototype.asImmutable`\"]}}}]}},\"Iterator\":{\"interface\":{\"line\":2143,\"typeParams\":[\"T\"],\"groups\":[{\"methods\":{\"next\":{\"impl\":{\"line\":2147,\"type\":{\"k\":4,\"members\":[{\"name\":\"value\",\"type\":{\"k\":7,\"param\":\"T\"}},{\"name\":\"done\",\"type\":{\"k\":1}}]}}}}}]}}}}}","var TypeKind = {\n  Any: 0,\n\n  Boolean: 1,\n  Number: 2,\n  String: 3,\n  Object: 4,\n  Array: 5,\n  Function: 6,\n\n  Param: 7,\n  Type: 8,\n};\n\nmodule.exports = TypeKind;\n","(function (global){\nmodule.exports = global.Immutable;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})","(function (global){\nmodule.exports = global.React;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})"]}